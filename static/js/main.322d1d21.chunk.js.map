{"version":3,"sources":["CustomDivider.jsx","utils.js","CreateController.jsx","api.js","storage.js","NFTCard.jsx","CollectionCard.jsx","EditCollectionModal.jsx","ProfileController.jsx","ExploreController.jsx","assets/img/dingocoin.png","App.jsx","index.jsx","GetWalletModal.jsx"],"names":["CustomDivider","className","icon","faAngleDown","toSatoshi","x","undefined","Error","BigInt","Web3Utils","toWei","toString","satoshiToLocaleString","isNegative","integer","replace","post","link","data","a","controller","AbortController","setTimeout","abort","fetch","withCredentials","method","signal","headers","Accept","body","JSON","stringify","json","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","error","CreateController","React","useState","content","setContent","contentError","setContentError","listingPrice","setListingPrice","royalty","setRoyalty","name","setName","description","setDescription","preview","setPreview","previewError","setPreviewError","tags","setTags","pending","setPending","success","setSuccess","address","setAddress","getWalletShow","setGetWalletShow","useEffect","size","document","title","Buffer","f","from","isPng","sizeOf","width","height","doSubmit","e","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","window","dingo","getListTransaction","Hex","Sha256","Base64","parse","Math","floor","contentHash","price","getListTransactionResponse","requestSignTransaction","vouts","signed","sendListTransaction","transaction","sendListTransactionResponse","console","log","style","maxWidth","onSubmit","Group","Label","Control","type","onChange","target","files","isInvalid","isValid","Text","value","placeholder","length","match","parseInt","toFixed","Range","textAlign","variant","disabled","animation","href","show","onHide","API_URL","getBusy","busy","getBuyTransaction","sendBuyTransaction","updateProfile","timestamp","owner","signature","queryNftByNewest","beforeId","getCollection","handle","queryCollectionByOwner","queryUnassignedNftsByOwner","updateCollection","thumbnail","setCollectionItem","getCollectionItems","getItemCollection","queryCollectionByTradeCountScaled","queryCollectionByTradeVolume","get","getMeta","response","status","getPreviewLink","getState","getProfile","getProfileLists","NFTCard","props","domRef","useRef","isVisible","setVisible","previewLink","setPreviewLink","stats","setStats","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","meta","state","Card","ref","role","Img","src","loading","Body","Title","Subtitle","faCashRegister","tradeVolume","faExchangeAlt","tradeCount","CollectionCard","collection","setCollection","Container","EditCollectionModal","createdNfts","setCreatedNfts","setThumbnail","setHandle","pList","reverse","all","map","createdNftNames","i","Modal","centered","Header","closeButton","Form","Select","Button","ProfileController","useParams","profileAddress","collectionHandle","nftAddress","location","useLocation","view","pathname","endsWith","editShow","setEditShow","profile","setProfile","createCollectionShow","setCreateCollectionShow","collections","setCollections","unassignedList","setUnassignedList","profileLists","setProfileLists","collectionItems","setCollectionItems","nftMeta","setNftMeta","nftState","setNftState","nftItemCollection","setNftItemCollection","nftOwner","setNftOwner","nftBusy","setNftBusy","resellPrice","setResellPrice","resellPriceError","setResellPriceError","buyResult","setBuyResult","editProfileName","setEditProfileName","editProfileNameRef","createRef","ownedNfts","historicalNfts","nftItemCollectionHandle","creator","doEditProfileSubmit","payload","Date","now","message","requestSign","signResult","reload","doCreateCollectionSubmit","doMove","doBuy","vins","Row","display","onClick","Nav","Item","Link","eventKey","active","faPlus","DropdownButton","y","Dropdown","filter","some","txid","rel","onEntered","focus","GetWalletModal","ExploreController","pop","includes","collectionList","setCollectionList","nftList","setNftList","nftListEnd","setNftListEnd","l","results","onViewMore","id","concat","Tab","defaultActiveKey","faBolt","faFire","faList","Content","App","setLocation","searchQuery","setSearchQuery","searchErrorShow","setSearchErrorShow","doSearch","trim","assign","Navbar","bg","expand","sticky","Brand","alt","DingocoinLogo","Toggle","Collapse","paddingRight","FormControl","borderTopRightRadius","borderBottomRightRadius","minWidth","borderTopLeftRadius","borderBottomLeftRadius","faAngleRight","path","element","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.322d1d21.chunk.js","sourcesContent":["// Assets.\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CustomDivider() {\n  return (\n    <div className=\"divider-custom\">\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n      <div className=\"divider-custom-icon mt-2 mb-2\">\n        <FontAwesomeIcon icon={faAngleDown} />\n      </div>\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n    </div>\n  );\n}\n\nexport default CustomDivider;\n","/* global BigInt */\n\nimport Web3Utils from \"web3-utils\";\n\nconst toSatoshi = (x) => {\n  if (x === null || x === undefined || typeof x !== \"string\" || x === \"\") {\n    throw new Error(\"Expected string input\");\n  }\n  return (BigInt(Web3Utils.toWei(x, \"gwei\")) / 10n).toString();\n};\n\nconst satoshiToLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = (BigInt(x) / 100000000n).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst post = async (link, data) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 30000);\n  return (\n    await fetch(link, {\n      withCredentials: true,\n      method: \"POST\",\n      signal: controller.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n  ).json();\n};\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 30000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nexport { toSatoshi, satoshiToLocaleString, post, get };\n","import { Container, Row, Button, Col, Form, Spinner } from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport isPng from \"is-png\";\nimport sizeOf from \"buffer-image-size\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport { sendListTransaction, getListTransaction } from \"./api\";\nimport { toSatoshi } from \"./utils\";\n\nconst MAX_CONTENT_SIZE = 10 * 1e6; // 1 MB.\nconst MAX_PREVIEW_SIZE = 100 * 1e5; // 1 kB.\n\nconst toBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(\",\")[1]);\n    reader.onerror = (error) => reject(error);\n  });\n\nfunction CreateController() {\n  const [content, setContent] = React.useState(null);\n  const [contentError, setContentError] = React.useState(\"\");\n  const [listingPrice, setListingPrice] = React.useState(\"1000\");\n  const [royalty, setRoyalty] = React.useState(0);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [preview, setPreview] = React.useState(null);\n  const [previewError, setPreviewError] = React.useState(\"\");\n  const [tags, setTags] = React.useState(\"\");\n\n  const [pending, setPending] = React.useState(false);\n  const [success, setSuccess] = React.useState(null);\n  const [address, setAddress] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  React.useEffect(() => {\n    if (content === null) {\n      setContentError(\"NFT content required\");\n      return;\n    } else if (content.size > MAX_CONTENT_SIZE) {\n      setContentError(\"NFT content size limit exceeded (max 10 MB)\");\n      return;\n    } else {\n      setContentError(\"\");\n    }\n  }, [content]);\n\n  React.useEffect(() => {\n    document.title = `Create NFT`;\n    (async () => {\n      if (preview !== null) {\n        const f = Buffer.from(await toBase64(preview), \"base64\");\n        if (!isPng(f)) {\n          setPreviewError(\"Cover image must be a PNG\");\n        } else if (preview.size > MAX_PREVIEW_SIZE) {\n          setPreviewError(\"Cover file size limit exceeded (max 100 KB)\");\n        } else if (sizeOf(f).width !== 256 || sizeOf(f).height !== 256) {\n          setPreviewError(\"Cover image must have dimension 256x256\");\n        } else {\n          setPreviewError(\"\");\n        }\n      } else {\n        setPreviewError(\"Cover image required\");\n      }\n    })();\n  }, [preview]);\n\n  const doSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const getListTransactionResponse = await getListTransaction({\n      // CryptoJS expects inputs to be a utf8 string. So we encode our data\n      // into that.\n      contentHash: Hex.stringify(Sha256(Base64.parse(await toBase64(content)))),\n      price: toSatoshi(listingPrice),\n      royalty: 25 + Math.floor((royalty * 75) / 100),\n    });\n    if (\n      getListTransactionResponse === null ||\n      \"error\" in getListTransactionResponse\n    ) {\n      return;\n    }\n\n    const signed = (\n      await window.dingo.requestSignTransaction(\n        [],\n        getListTransactionResponse.vouts\n      )\n    ).result;\n\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    setPending(true);\n    const sendListTransactionResponse = await sendListTransaction({\n      content: await toBase64(content),\n      preview: preview === null ? null : await toBase64(preview),\n      name: name,\n      description: description,\n      tags: tags,\n      transaction: signed,\n    });\n    console.log(sendListTransactionResponse);\n    if (\n      sendListTransactionResponse === null ||\n      sendListTransactionResponse.error !== undefined\n    ) {\n      setSuccess(false);\n      return;\n    }\n\n    setPending(false);\n    setSuccess(true);\n    setAddress(sendListTransactionResponse.address);\n  };\n\n  return (\n    <div>\n      <Container className=\"App-header\">\n        <Row>\n          <h1 className=\"mt-4\">Create NFT</h1>\n          <CustomDivider />\n        </Row>\n      </Container>\n      <Container style={{ maxWidth: \"900px\" }}>\n        <Row>\n          <Col>\n            {(success === null || success === false) && (\n              <Form onSubmit={doSubmit}>\n                <Form.Group className=\"mb-3 mt-4\">\n                  <Form.Label>\n                    <b>Cover image (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setPreview(e.target.files[0])}\n                    isInvalid={previewError !== null && previewError !== \"\"}\n                    isValid={previewError === \"\"}\n                  />\n                  {previewError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {previewError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    A 256x256 PNG cover image for your NFT (max 100 KB). You\n                    can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Content (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setContent(e.target.files[0])}\n                    isInvalid={contentError !== null && contentError !== \"\"}\n                    isValid={contentError === \"\"}\n                  />\n                  {contentError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {contentError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    The NFT will be locked uniquely to this file (max 10 MB).\n                    You can only use it once. Only the current owner of the NFT\n                    can download this file. It does not have to be the same as\n                    the cover. You can use any file you want, of any type.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Name (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={name}\n                    placeholder=\"Max 40 characters\"\n                    onChange={(e) => setName(e.target.value)}\n                    isValid={name !== \"\" && name.length <= 40}\n                    isInvalid={name !== \"\" && name.length > 40}\n                  />\n                  {name.length > 40 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Name too long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Description (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={description}\n                    placeholder=\"Max 500 characters\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    isValid={description !== \"\" && description.length <= 500}\n                    isInvalid={description !== \"\" && description.length > 500}\n                  />\n                  {description.length > 500 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Description long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Tags (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={tags}\n                    placeholder=\"Max 100 characters; space separated\"\n                    onChange={(e) => setTags(e.target.value)}\n                    isValid={tags !== \"\" && tags.length <= 100}\n                    isInvalid={tags !== \"\" && tags.length > 100}\n                  />\n                  {tags.length > 100 && (\n                    <div>\n                      <Form.Text className=\"input-error\">Tags long</Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3 mt-2\">\n                  <Form.Label>\n                    <b>Listing price (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={listingPrice}\n                    onChange={(e) => {\n                      if (\n                        e.target.value.match(/^[0-9]+$/) &&\n                        parseInt(e.target.value) >= 1\n                      ) {\n                        setListingPrice(e.target.value);\n                      } else {\n                        setListingPrice(\"1000\");\n                      }\n                    }}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Initial selling price for your NFT in DINGO (min. 1 DINGO).\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Creator royalty (*required): </b>\n                    {(2.5 + Math.floor((royalty * 75) / 100) / 10).toFixed(1) +\n                      \"%\"}\n                  </Form.Label>\n                  <Form.Range\n                    value={royalty}\n                    onChange={(e) => setRoyalty(e.target.value)}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Royalty paid to you for every transaction of this NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <div style={{ textAlign: \"center\" }}>\n                  {success === null && pending === false && (\n                    <Button\n                      className=\"popup-button mt-4 px-4\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                      disabled={\n                        content === null ||\n                        contentError !== \"\" ||\n                        (preview !== null && previewError !== \"\")\n                      }\n                    >\n                      Create NFT\n                    </Button>\n                  )}\n                  {success === null && pending === true && (\n                    <div>\n                      <Spinner animation=\"border\" />\n                      <p>\n                        Transaction pending...\n                        <br />\n                        (DO NOT CLOSE THIS PAGE)\n                      </p>\n                    </div>\n                  )}\n                  {success === false && (\n                    <div>\n                      <p>\n                        Transaction failed!\n                        <br />\n                        Please reload this page and try again\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </Form>\n            )}\n            {success === true && (\n              <div style={{ textAlign: \"center\" }}>\n                {\" \"}\n                <h3>NFT Created!</h3>\n                <p>\n                  NFT Address: <b>{address}</b>\n                </p>\n                <div style={{ textAlign: \"center\" }}>\n                  <a href={\"/nft/\" + address}>\n                    <Button className=\"popup-button px-4\" variant=\"primary\">\n                      View NFT ►\n                    </Button>\n                  </a>\n                </div>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n    </div>\n  );\n}\n\nexport default CreateController;\n","import { post } from \"./utils\";\n\nconst API_URL = \"https://nftp0.dingocoin.io\";\n//const API_URL = \"http://localhost:33332\";\n\nconst getBusy = async (data) => {\n  const result = await post(`${API_URL}/nft/getBusy`, {\n    address: data.address,\n  });\n  if (result === null) {\n    return null;\n  } else {\n    return result.busy;\n  }\n};\n\nconst getContent = (data) => {\n  return post(`${API_URL}/nft/getContent`, {\n    address: data.address,\n    timestamp: data.timestamp,\n    signature: data.signature,\n  });\n};\n\nconst getBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/getBuyTransaction`, {\n    address: data.address,\n    price: data.price,\n  });\n};\n\nconst sendBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/sendBuyTransaction`, {\n    transaction: data.transaction,\n  });\n};\n\nconst getListTransaction = (data) => {\n  return post(`${API_URL}/nft/getListTransaction`, {\n    contentHash: data.contentHash,\n    price: data.price,\n    royalty: data.royalty,\n  });\n};\n\nconst sendListTransaction = (data) => {\n  return post(`${API_URL}/nft/sendListTransaction`, {\n    content: data.content,\n    preview: data.preview,\n    name: data.name,\n    description: data.description,\n    tags: data.tags,\n    transaction: data.transaction,\n  });\n};\n\nconst updateProfile = (data) => {\n  return post(`${API_URL}/profile/update`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    name: data.name,\n    signature: data.signature,\n  });\n};\n\nconst queryNft = (data) => {\n  return post(`${API_URL}/nft/query`, {\n    key: data.key,\n    direction: data.direction,\n    offset: data.offset,\n    limit: data.limit,\n  });\n};\n\nconst queryNftByNewest = (data) => {\n  return post(`${API_URL}/nft/queryByNewest`, {\n    beforeId: data.beforeId\n  });\n};\n\nconst getCollection = (data) => {\n  return post(`${API_URL}/collection/get`, {\n    handle: data.handle,\n  });\n};\n\nconst queryCollectionByOwner = (data) => {\n  return post(`${API_URL}/collection/queryByOwner`, {\n    owner: data.owner,\n  });\n};\n\nconst queryUnassignedNftsByOwner = (data) => {\n  return post(`${API_URL}/collection/queryUnassignedNftsByOwner`, {\n    owner: data.owner,\n  });\n};\n\nconst updateCollection = (data) => {\n  return post(`${API_URL}/collection/update`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    handle: data.handle,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    description: data.description,\n    signature: data.signature,\n  });\n};\n\nconst setCollectionItem = (data) => {\n  return post(`${API_URL}/collection/setItem`, {\n    timestamp: data.timestamp,\n    address: data.address,\n    handle: data.handle,\n    signature: data.signature,\n  });\n};\n\nconst getCollectionItems = (data) => {\n  return post(`${API_URL}/collection/getItems`, {\n    handle: data.handle,\n  });\n};\n\nconst getItemCollection = (data) => {\n  return post(`${API_URL}/collection/getItemCollection`, {\n    address: data.address,\n  });\n};\n\nconst queryCollectionByTradeCountScaled = () => {\n  return post(`${API_URL}/collection/queryByTradeCountScaled`, {});\n};\n\nconst queryCollectionByTradeVolumeScaled = () => {\n  return post(`${API_URL}/collection/queryByTradeVolumeScaled`, {});\n};\n\nconst queryCollectionByTradeVolume = () => {\n  return post(`${API_URL}/collection/queryByTradeVolume`, {});\n};\n\nexport {\n  getBusy,\n  getContent,\n  getBuyTransaction,\n  sendBuyTransaction,\n  getListTransaction,\n  sendListTransaction,\n  updateProfile,\n  queryNft,\n  queryNftByNewest,\n  getCollection,\n  queryCollectionByOwner,\n  queryUnassignedNftsByOwner,\n  updateCollection,\n  setCollectionItem,\n  getCollectionItems,\n  getItemCollection,\n  queryCollectionByTradeCountScaled,\n  queryCollectionByTradeVolumeScaled,\n  queryCollectionByTradeVolume\n};\n","const META_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-meta\";\nconst PREVIEW_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-preview\";\nconst STATE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-state\";\nconst PROFILE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-profile\";\nconst PROFILE_LISTS_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-profilelists\";\nconst EXPLORE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-explore\";\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 5000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nconst getMeta = async (address) => {\n  const response = await get(`${META_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getPreviewLink = (address) => {\n  return `${PREVIEW_BUCKET}/${address}.png`;\n};\n\nconst getState = async (address) => {\n  const response = await get(`${STATE_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getProfile = async (owner) => {\n  const response = await get(`${PROFILE_BUCKET}/${owner}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getProfileLists = async (owner) => {\n  const response = await get(`${PROFILE_LISTS_BUCKET}/${owner}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getExplore = async (key) => {\n  const response = await get(`${EXPLORE_BUCKET}/${key}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nexport { getMeta, getPreviewLink, getState, getProfile, getProfileLists, getExplore };\n","import React from \"react\";\nimport { getMeta, getPreviewLink, getState } from \"./storage\";\nimport { Card } from \"react-bootstrap\";\nimport { satoshiToLocaleString } from \"./utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCashRegister,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction NFTCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [name, setName] = React.useState(null);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const meta = await getMeta(props.address);\n        const previewLink = await getPreviewLink(props.address);\n        const state = await getState(props.address);\n\n        setPreviewLink(previewLink);\n        setName(meta === null ? null : meta.name);\n        setStats(state === null ? null : state.stats);\n      }\n    })();\n  }, [props.address, isVisible]);\n\n  return (\n    <Card\n      className=\"nft-card floating-borders floating-borders-press\"\n      ref={domRef}\n    >\n      <div className=\"header-box\">\n        <div className=\"spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n        <Card.Img variant=\"top\" src={previewLink} loading=\"lazy\"></Card.Img>\n      </div>\n      <hr />\n      <Card.Body>\n        <Card.Title className=\"text-start\">\n          {name === null ? \"-\" : name === \"\" ? \"Unnamed NFT\" : name}\n        </Card.Title>\n        <Card.Subtitle className=\"text-start text-muted\">{props.address}</Card.Subtitle>\n        <Card.Text>\n          <span className=\"card-price\">\n            {stats === null ? \"-\" : satoshiToLocaleString(stats.price)}\n          </span>\n          <br />\n          <span className=\"card-price-subtitle\">DINGO</span>\n        </Card.Text>\n      </Card.Body>\n      <hr />\n      <div className=\"card-sub-body text-muted\">\n        <span className=\"align-middle\">\n          <FontAwesomeIcon icon={faCashRegister} />{\" \"}\n          {stats === null ? \"-\" : satoshiToLocaleString(stats.tradeVolume)}\n        </span>\n        &nbsp;&nbsp;&nbsp;\n        <span className=\"align-middle\">\n          <FontAwesomeIcon icon={faExchangeAlt} />{\" \"}\n          {stats === null ? \"-\" : stats.tradeCount}\n        </span>\n      </div>\n    </Card>\n  );\n}\n\nexport default NFTCard;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { getPreviewLink } from \"./storage\";\nimport { getCollection } from \"./api\";\n\nfunction CollectionCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [collection, setCollection] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const collection = await getCollection({ handle: props.handle });\n        setCollection(collection);\n\n        if (collection !== null) {\n          setPreviewLink(await getPreviewLink(collection.thumbnail));\n        }\n      }\n    })();\n  }, [isVisible, props.handle]);\n\n  return (\n    <Container className=\"collection-card\" ref={domRef}>\n      <div className=\"d-flex flex-column\">\n        <img className=\"mx-auto mt-4 mb-3\" src={previewLink} />\n        <span className=\"mx-auto mb-2 title\">{collection !== null && collection.name}</span>\n        <span className=\"truncate text-muted description\">\n          {collection !== null && collection.description}</span>\n      </div>\n    </Container>\n  );\n}\n\nexport default CollectionCard;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getProfileLists, getMeta } from \"./storage\";\n\nfunction EditCollectionModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnail, setThumbnail] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const [handle, setHandle] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.owner !== undefined && props.owner !== null) {\n        const pList = await getProfileLists(props.owner);\n        if (pList !== null && pList.createdNfts.length > 0) {\n          const createdNfts = pList.createdNfts.reverse();\n          const createdNftNames = await Promise.all(\n            createdNfts.map(async (x) => {\n              return (await getMeta(x)).name;\n            })\n          );\n          setCreatedNfts(createdNfts.map((x, i) => [x, createdNftNames[i]]));\n          setThumbnail(createdNfts[0]);\n        }\n      }\n    })();\n  }, [props.owner]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                thumbnail: thumbnail,\n                name: name,\n                handle: handle,\n                description: description,\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Thumbnail image (*required)</b>\n            </Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isInvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnail}\n                  onChange={(e) => setThumbnail(e.target.value)}\n                >\n                  {createdNfts.map((x) => (\n                    <option key={x[0]} value={x[0]}>\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection name (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name !== \"\" && name.length <= 40}\n              isInvalid={name === \"\" || name.length > 40}\n            />\n            {name === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Name required</Form.Text>\n              </div>\n            )}\n            {name !== \"\" && name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection handle (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={handle}\n              onChange={(e) => setHandle(e.target.value)}\n              isValid={handle !== \"\" && handle.length <= 40}\n              isInvalid={handle === \"\" || handle.length > 40}\n            />\n            {handle === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Handle required</Form.Text>\n              </div>\n            )}\n            {handle !== \"\" && handle.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Handle too long</Form.Text>\n              </div>\n            )}\n            {handle !== \"\" && !handle.match(/^([a-z0-9])+$/) && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Incorrect handle format (only lowercase alphanumeric\n                  characters allowed)\n                </Form.Text>\n              </div>\n            )}\n            <Form.Text className=\"text-muted\">\n              Used for your collection's permalink. You can't change this after\n              creating the collection.\n            </Form.Text>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Collection description (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 500 characters\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              isValid={description !== \"\" && description.length <= 500}\n              isInvalid={description !== \"\" && description.length > 500}\n            />\n            {description !== \"\" && description.length > 500 && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Description too long\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                thumbnail === null ||\n                name === \"\" ||\n                name.length > 40 ||\n                handle === \"\" ||\n                handle.length > 40 ||\n                description.length > 500\n              }\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default EditCollectionModal;\n","/* global BigInt */\n\nimport {\n  Modal,\n  Container,\n  Row,\n  Button,\n  Form,\n  Nav,\n  Dropdown,\n  DropdownButton,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport { getMeta, getState, getProfile, getProfileLists } from \"./storage\";\nimport { toSatoshi } from \"./utils\";\nimport NFTCard from \"./NFTCard\";\nimport {\n  updateProfile,\n  updateCollection,\n  queryCollectionByOwner,\n  queryUnassignedNftsByOwner,\n  getBusy,\n  setCollectionItem,\n  getItemCollection,\n  getBuyTransaction,\n  sendBuyTransaction,\n} from \"./api\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport CollectionCard from \"./CollectionCard\";\nimport EditCollectionModal from \"./EditCollectionModal\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { getCollectionItems, getCollection } from \"./api\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomDivider from \"./CustomDivider\";\n\nfunction ProfileController() {\n  const { profileAddress, collectionHandle, nftAddress } = useParams();\n  const location = useLocation();\n  const view =\n    profileAddress !== undefined\n      ? location.pathname.endsWith(\"/owned\")\n        ? \"profileOwned\"\n        : \"profile\"\n      : collectionHandle !== undefined\n      ? \"collection\"\n      : nftAddress !== undefined\n      ? location.pathname.endsWith(\"/owned\")\n        ? \"nftOwned\"\n        : \"nft\"\n      : \"unknown\";\n\n  // Variables always required.\n  const [editShow, setEditShow] = React.useState(null);\n  const [profile, setProfile] = React.useState(null);\n\n  // For profile view.\n  const [createCollectionShow, setCreateCollectionShow] = React.useState(false);\n  const [collections, setCollections] = React.useState(null);\n  const [unassignedList, setUnassignedList] = React.useState(null);\n  const [profileLists, setProfileLists] = React.useState(null);\n\n  // For collection view.\n  const [collection, setCollection] = React.useState(null);\n  const [collectionItems, setCollectionItems] = React.useState(null);\n\n  // For NFT view.\n  const [nftMeta, setNftMeta] = React.useState(null);\n  const [nftState, setNftState] = React.useState(null);\n  const [nftItemCollection, setNftItemCollection] = React.useState(undefined);\n  const [nftOwner, setNftOwner] = React.useState(undefined);\n  const [nftBusy, setNftBusy] = React.useState(undefined);\n  const [resellPrice, setResellPrice] = React.useState(\"\");\n  const [resellPriceError, setResellPriceError] = React.useState(\"\");\n  const [buyResult, setBuyResult] = React.useState(null);\n\n  const [editProfileName, setEditProfileName] = React.useState(\"\");\n  const editProfileNameRef = React.createRef();\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  // Initialize for profile view.\n  React.useEffect(() => {\n    if (view === \"profile\") {\n      (async () => {\n        // Retrieve and set profile.\n        let profile = await getProfile(profileAddress);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = profileAddress;\n        setProfile(profile);\n\n        // Retrieve and set collections.\n        const collections = await queryCollectionByOwner({\n          owner: profileAddress,\n        });\n        if (collections !== null) {\n          setCollections(collections.reverse());\n        }\n\n        // Retrieve and set unassigned list.\n        const unassignedList = await queryUnassignedNftsByOwner({\n          owner: profileAddress,\n        });\n        setUnassignedList(unassignedList.reverse());\n\n        if (profile !== null) {\n          if (profile.name === null) {\n            document.title = `Profile | ${profileAddress}`;\n          } else {\n            document.title = `Profile | ${profile.name}`;\n          }\n        }\n      })();\n    }\n  }, []);\n\n  // Initialize for profileOwned view.\n  React.useEffect(() => {\n    if (view === \"profileOwned\") {\n      (async () => {\n        // Retrieve and set profile.\n        let profile = await getProfile(profileAddress);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = profileAddress;\n        setProfile(profile);\n\n        // Retrieve and set profile lists.\n        const profileLists = await getProfileLists(profileAddress);\n\n        setProfileLists({\n          createdNfts: profileLists.createdNfts.reverse(),\n          ownedNfts: profileLists.ownedNfts.reverse(),\n          historicalNfts: profileLists.historicalNfts.reverse(),\n        });\n\n        if (profile !== null) {\n          if (profile.name === null) {\n            document.title = `Profile | ${profileAddress}`;\n          } else {\n            document.title = `Profile | ${profile.name}`;\n          }\n        }\n      })();\n    }\n  }, []);\n\n  // Initialize for collection view.\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"collection\") {\n        const collection = await getCollection({ handle: collectionHandle });\n        setCollection(collection);\n        let profile = await getProfile(collection.owner);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = collection.owner;\n        setProfile(profile);\n        setCollectionItems(\n          (await getCollectionItems({ handle: collectionHandle })).reverse()\n        );\n      }\n    })();\n  }, []);\n\n  // Initialize for nft view.\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"nft\") {\n        const nftMeta = await getMeta(nftAddress);\n        setNftMeta(nftMeta);\n        const nftState = await getState(nftAddress);\n        setNftState(nftState);\n\n        const nftItemCollectionHandle = (\n          await getItemCollection({\n            address: nftAddress,\n          })\n        ).handle;\n        if (nftItemCollectionHandle === null) {\n          setNftItemCollection(null);\n        } else {\n          const collection = await getCollection({\n            handle: nftItemCollectionHandle,\n          });\n          setNftItemCollection(collection);\n        }\n\n        if (nftState.owner !== nftState.creator) {\n          let nftOwner = await getProfile(nftState.owner);\n          if (nftOwner === null) {\n            nftOwner = {};\n          }\n          nftOwner.address = nftState.owner;\n          setNftOwner(nftOwner);\n        } else {\n          setNftOwner(null);\n        }\n\n        if (nftMeta !== null) {\n          document.title = `NFT | ${nftMeta.name}`;\n          let profile = await getProfile(nftState.creator);\n          if (profile === null) {\n            profile = {};\n          }\n          profile.address = nftState.creator;\n          setProfile(profile);\n        }\n\n        setNftBusy(await getBusy({ address: nftAddress }));\n      }\n    })();\n  }, []);\n\n  // Effect for NFT view.\n  React.useEffect(() => {\n    if (resellPrice === \"\") {\n      setResellPriceError(\"Resell price required\");\n    } else if (nftState !== null) {\n      if (\n        BigInt(toSatoshi(resellPrice)) >\n        BigInt(10) * BigInt(nftState.stats.price)\n      ) {\n        setResellPriceError(\n          `Resell price must be at most 10x the current price`\n        );\n      } else {\n        setResellPriceError(\"\");\n      }\n    } else {\n      setResellPriceError(\"\");\n    }\n  }, [resellPrice, nftState]);\n\n  const doEditProfileSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const payload = {\n      timestamp: Date.now(),\n      owner: profileAddress,\n      name:\n        editProfileName === null || editProfileName === \"\"\n          ? null\n          : editProfileName,\n    };\n    const message = JSON.stringify(payload);\n\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    const updateResult = await updateProfile(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doCreateCollectionSubmit = async (profile) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      owner: profileAddress,\n      handle: profile.handle,\n      name: profile.name,\n      thumbnail: profile.thumbnail,\n      description: profile.description,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await updateCollection(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doMove = async (address, handle) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      address: address,\n      handle: handle,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await setCollectionItem(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doBuy = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const { vins, vouts } = await getBuyTransaction({\n      address: nftAddress,\n      price: toSatoshi(resellPrice),\n    });\n    const signed = (await window.dingo.requestSignTransaction(vins, vouts))\n      .result;\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    const result = await sendBuyTransaction({ transaction: signed });\n    setBuyResult(result);\n  };\n\n  return (\n    <div className=\"profile-container justify-content-center mx-auto\">\n      <Container>\n        {(view === \"profile\" || view === \"profileOwned\") && profile !== null && (\n          <Row>\n            <div className=\"profile-section profile-header\">\n              <h3 className=\"text-truncate\">\n                {profile === null\n                  ? \"-\"\n                  : profile.name === \"\" ||\n                    profile.name === null ||\n                    profile.name === undefined\n                  ? \"Unnamed Profile\"\n                  : profile.name}\n              </h3>\n              <h6 className=\"text-truncate\">{profile.address}</h6>\n              <span\n                className=\"clickable\"\n                style={{ display: \"inline\" }}\n                onClick={() => setEditShow(true)}\n              >\n                (Edit)\n              </span>\n              <hr />\n              <Nav variant=\"tabs\" className=\"custom-nav-tabs\">\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"creations\"\n                    active={\n                      view === \"profile\" ||\n                      view === \"collection\" ||\n                      view === \"nft\"\n                    }\n                    href={`/profile/${profile.address}/`}\n                  >\n                    NFT creations\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"unassigned\"\n                    active={view === \"profileOwned\"}\n                    href={`/profile/${profile.address}/owned`}\n                  >\n                    Owned NFTs\n                  </Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </div>\n          </Row>\n        )}\n\n        {view === \"profile\" && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                <span className=\"me-auto content-title accent\">\n                  Collections\n                </span>\n                <span\n                  className=\"clickable\"\n                  onClick={() => setCreateCollectionShow(true)}\n                >\n                  <FontAwesomeIcon className=\"me-1\" icon={faPlus} /> Create new\n                </span>\n              </div>\n              <ul className=\"collection-cards-container mt-4\">\n                {collections !== null &&\n                  collections.map((x) => (\n                    <a key={x} href={`/collection/${x}`}>\n                      <CollectionCard handle={x} />\n                    </a>\n                  ))}\n              </ul>\n            </div>\n          </Row>\n        )}\n\n        {view === \"profile\" &&\n          unassignedList !== null &&\n          unassignedList.length > 0 && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Unassigned NFTs\n                  </span>\n                </div>\n                <ul className=\"cards-container mt-4\">\n                  {unassignedList.map((x) => (\n                    <div key={x}>\n                      <a href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                      <DropdownButton\n                        className=\"mt-3 px-4\"\n                        title=\"Move to collection\"\n                      >\n                        {collections !== null &&\n                          collections.map((y) => (\n                            <Dropdown.Item key={y} onClick={() => doMove(x, y)}>\n                              {y}\n                            </Dropdown.Item>\n                          ))}\n                      </DropdownButton>\n                    </div>\n                  ))}\n                </ul>\n              </div>\n            </Row>\n          )}\n\n        {view === \"profileOwned\" &&\n          profileLists !== null &&\n          profileLists.ownedNfts.filter(\n            (x) => !profileLists.createdNfts.some((y) => y === x)\n          ).length > 0 && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Owned NFTs\n                  </span>\n                </div>\n                <ul className=\"cards-container mt-4\">\n                  {profileLists.ownedNfts\n                    .filter(\n                      (x) => !profileLists.createdNfts.some((y) => y === x)\n                    )\n                    .map((x) => (\n                      <a key={x} href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                    ))}\n                </ul>\n              </div>\n            </Row>\n          )}\n\n        {view === \"profileOwned\" &&\n          profileLists !== null &&\n          profileLists.historicalNfts\n            .filter((x) => !profileLists.createdNfts.some((y) => y === x))\n            .filter((x) => !profileLists.ownedNfts.some((y) => y === x))\n            .length > 0 && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Previously owned NFTs\n                  </span>\n                </div>\n                <ul className=\"cards-container mt-4\">\n                  {profileLists.historicalNfts\n                    .filter(\n                      (x) => !profileLists.createdNfts.some((y) => y === x)\n                    )\n                    .filter((x) => !profileLists.ownedNfts.some((y) => y === x))\n                    .map((x) => (\n                      <a key={x} href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                    ))}\n                </ul>\n              </div>\n            </Row>\n          )}\n\n        {view === \"collection\" && collection !== null && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                {profile !== null && (\n                  <div className=\"text-truncate\">\n                    <span className=\"content-title accent\">\n                      Collection by:{\" \"}\n                    </span>\n                    <a\n                      className=\"simple-link\"\n                      href={`/profile/${profile.address}/`}\n                    >\n                      {profile.name === \"\" ||\n                      profile.name === null ||\n                      profile.name === undefined\n                        ? profile.address\n                        : profile.name}\n                    </a>\n                  </div>\n                )}\n              </div>\n              <div className=\"d-flex flex-row\">\n                <ul className=\"collection-cards-container mt-4 mx-auto mb-4\">\n                  <CollectionCard handle={collectionHandle} />\n                </ul>\n              </div>\n            </div>\n          </Row>\n        )}\n        {view === \"collection\" && collection !== null && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <ul className=\"cards-container mt-4\">\n                {collectionItems !== null &&\n                  collectionItems.map((x) => (\n                    <a key={x} href={`/nft/${x}`}>\n                      <NFTCard address={x} />\n                    </a>\n                  ))}\n              </ul>\n            </div>\n          </Row>\n        )}\n\n        {view === \"nft\" &&\n          nftMeta !== null &&\n          nftState !== null &&\n          nftItemCollection !== undefined &&\n          nftOwner !== undefined && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  {nftItemCollection === null && profile !== null && (\n                    <div className=\"text-truncate\">\n                      <span className=\"content-title accent\">Created by: </span>\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          profile !== null && `/profile/${profile.address}/`\n                        }\n                      >\n                        {profile.name === \"\" ||\n                        profile.name === null ||\n                        profile.name === undefined\n                          ? profile.address\n                          : profile.name}\n                      </a>\n                    </div>\n                  )}\n                  {nftItemCollection !== null && (\n                    <div className=\"text-truncate\">\n                      <span className=\"content-title accent\">\n                        In collection:{\" \"}\n                      </span>\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          profile !== null &&\n                          `/collection/${nftItemCollection.handle}/`\n                        }\n                      >\n                        {nftItemCollection.name}\n                      </a>\n                    </div>\n                  )}\n                </div>\n                <div>\n                  <ul className=\"cards-container mt-4\">\n                    <NFTCard address={nftAddress} />\n                  </ul>\n                  {nftOwner !== null && (\n                    <div className=\"text-center mt-4\">\n                      <span className=\"content-title accent\"><b>Owned by: </b></span>\n                      <a\n                        className=\"simple-link\"\n                        href={`/profile/${nftOwner.address}/owned`}\n                      >\n                        {nftOwner.name === \"\" ||\n                        nftOwner.name === null ||\n                        nftOwner.name === undefined\n                          ? nftOwner.address\n                          : nftOwner.name}\n                      </a>\n                    </div>\n                  )}\n                  {nftMeta.description !== null && nftMeta.description !== \"\" && (\n                    <div>\n                      <p className=\"text-center mt-4\">\n                        <i>{nftMeta.description}</i>\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </Row>\n          )}\n\n        {view === \"nft\" &&\n          nftMeta !== null &&\n          nftState !== null &&\n          nftItemCollection !== undefined && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Buy this NFT\n                  </span>\n                </div>\n                <div>\n                  {nftBusy !== undefined && nftBusy !== null && (\n                    <div className=\"mt-4 text-center\">\n                      {\" \"}\n                      <h5>NFT busy</h5>\n                      <p>\n                        <a\n                          className=\"simple-link\"\n                          href={\n                            \"https://openchains.info/coin/dingocoin/tx/\" +\n                            nftBusy.txid\n                          }\n                          rel=\"noreferrer\"\n                          target=\"_blank\"\n                        >\n                          A transaction\n                        </a>{\" \"}\n                        is currenly being confirmed for this NFT. <br />\n                        Please try again in a few minutes.\n                      </p>\n                    </div>\n                  )}\n                  {nftBusy !== undefined &&\n                    nftBusy === null &&\n                    buyResult === null && (\n                      <div className=\"d-flex flex-column\">\n                        <div className=\"mt-4 text-center px-4\">\n                          <Form.Group>\n                            <Form.Label>\n                              <b>Resell at (*required)</b>\n                            </Form.Label>\n                            <Form.Control\n                              type=\"text\"\n                              value={resellPrice}\n                              onChange={(e) => {\n                                if (e.target.value.match(/^[0-9]*$/)) {\n                                  setResellPrice(e.target.value);\n                                }\n                              }}\n                              style={{ textAlign: \"center\" }}\n                              isInvalid={resellPriceError !== \"\"}\n                            />\n                            {resellPriceError && (\n                              <div>\n                                <Form.Text className=\"input-error\">\n                                  {resellPriceError}\n                                </Form.Text>\n                              </div>\n                            )}\n                            <Form.Text className=\"text-muted\">\n                              New price you want to sell this NFT for (min. 1\n                              Dingocoin).\n                            </Form.Text>\n                          </Form.Group>\n                        </div>\n                        <div className=\"d-flex flex-row\">\n                          <Button\n                            className=\"popup-button mt-4 mx-auto px-4\"\n                            style={{ width: \"auto\" }}\n                            disabled={resellPriceError !== \"\"}\n                            onClick={doBuy}\n                          >\n                            Buy and resell NFT\n                          </Button>\n                        </div>\n                      </div>\n                    )}\n                  {buyResult !== null && buyResult.error === undefined && (\n                    <div className=\"mt-4 text-center\">\n                      {\" \"}\n                      <h4>Transaction submitted!</h4>\n                      <p>\n                        Transaction ID:{\" \"}\n                        <a\n                          className=\"simple-link\"\n                          href={\n                            \"https://openchains.info/coin/dingocoin/tx/\" +\n                            buyResult.txid\n                          }\n                          rel=\"noreferrer\"\n                          target=\"_blank\"\n                        >\n                          {buyResult.txid}\n                        </a>\n                        <br />\n                        It may take a few minutes for your transaction to be\n                        confirmed.\n                      </p>\n                    </div>\n                  )}\n                  {buyResult !== null && buyResult.error !== undefined && (\n                    <div style={{ textAlign: \"center\" }} className=\"mt-4\">\n                      {\" \"}\n                      <h4>Transaction failed!</h4>\n                      <p>\n                        - Make sure that your wallet has no pending transaction.\n                        <br />- You can't buy this NFT as its owner/creator.\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </Row>\n          )}\n      </Container>\n\n      <Modal\n        size=\"lg\"\n        centered\n        show={editShow}\n        onHide={() => setEditShow(false)}\n        onEntered={() => editProfileNameRef.current.focus()}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Edit profile</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={doEditProfileSubmit}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Profile name (leave blank if no change)</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={editProfileName}\n                placeholder=\"Max 40 characters\"\n                onChange={(e) => setEditProfileName(e.target.value)}\n                isValid={editProfileName !== \"\" && editProfileName.length <= 40}\n                isInvalid={\n                  editProfileName !== \"\" && editProfileName.length > 40\n                }\n                ref={editProfileNameRef}\n              />\n              {editProfileName.length > 40 && (\n                <div>\n                  <Form.Text className=\"input-error\">Name too long</Form.Text>\n                </div>\n              )}\n            </Form.Group>\n\n            <div style={{ textAlign: \"center\" }}>\n              <Button\n                className=\"popup-button mb-3 mt-3 px-4\"\n                variant=\"primary\"\n                type=\"submit\"\n              >\n                Verify and update profile\n              </Button>\n            </div>\n          </Form>\n        </Modal.Body>\n      </Modal>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n\n      <EditCollectionModal\n        title=\"Create new collection\"\n        show={createCollectionShow}\n        owner={profileAddress}\n        onHide={() => setCreateCollectionShow(false)}\n        onSubmit={doCreateCollectionSubmit}\n      />\n    </div>\n  );\n}\n\nexport default ProfileController;\n","import { Row, Tab, Col, Nav, Button } from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryCollectionByTradeCountScaled,\n  queryCollectionByTradeVolume,\n  queryNftByNewest,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport CollectionCard from \"./CollectionCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBolt, faFire, faList } from \"@fortawesome/free-solid-svg-icons\";\nimport NFTCard from \"./NFTCard\";\n\nfunction ExploreController() {\n  const location = useLocation();\n  let view = location.pathname.split(\"/\").pop();\n  view = [\"top\", \"all\"].includes(view) ? view : \"trending\";\n\n  const [collectionList, setCollectionList] = React.useState(null);\n  const [nftList, setNftList] = React.useState(null);\n  const [nftListEnd, setNftListEnd] = React.useState(false);\n\n  React.useEffect(() => {\n    document.title = `Explore`;\n    (async () => {\n      if (view === \"trending\") {\n        const l = await queryCollectionByTradeCountScaled();\n        setCollectionList(l.results);\n      } else if (view === \"top\") {\n        const l = await queryCollectionByTradeVolume();\n        setCollectionList(l.results);\n      } else if (view === \"all\") {\n        const l = (await queryNftByNewest({ beforeId: null })).results;\n        if (l.length < 100) {\n          setNftListEnd(true);\n        }\n        setNftList(l);\n      }\n    })();\n  }, []);\n\n  const onViewMore = async () => {\n    const l = (\n      await queryNftByNewest({ beforeId: nftList[nftList.length - 1].id })\n    ).results;\n    if (l.length < 100) {\n      setNftListEnd(true);\n    }\n    setNftList(nftList.concat(l));\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div className=\"mx-auto mt-4 accent\">\n        <h1>Explore</h1>\n      </div>\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n        <Row>\n          <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4\">\n            <Nav.Item className=\"ms-auto\">\n              <Nav.Link href=\"/explore/\" active={view === \"trending\"}>\n                <FontAwesomeIcon icon={faBolt} className=\"me-2\" />\n                Trending\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"/explore/top\" active={view === \"top\"}>\n                <FontAwesomeIcon icon={faFire} className=\"me-2\" />\n                Top\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item className=\"me-auto\">\n              <Nav.Link href=\"/explore/all\" active={view === \"all\"}>\n                <FontAwesomeIcon icon={faList} className=\"me-2\" />\n                All NFTs\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <hr className=\"light-border\" />\n        </Row>\n        <Row>\n          {[\"trending\", \"top\"].includes(view) && collectionList !== null && (\n            <Tab.Content>\n              <ul className=\"collection-cards-container mt-4\">\n                {collectionList !== null &&\n                  collectionList.map((x) => (\n                    <a key={x} href={`/collection/${x}`}>\n                      <CollectionCard handle={x} />\n                    </a>\n                  ))}\n              </ul>\n            </Tab.Content>\n          )}\n          {view === \"all\" && (\n            <Tab.Content>\n              <ul className=\"cards-container mt-4\">\n                {nftList !== null &&\n                  nftList.map((x) => (\n                    <a key={x.address} href={`/nft/${x.address}`}>\n                      <NFTCard address={x.address} />\n                    </a>\n                  ))}\n                {nftList !== null && !nftListEnd && (\n                  <Button onClick={onViewMore}>View more</Button>\n                )}\n              </ul>\n            </Tab.Content>\n          )}\n        </Row>\n      </Tab.Container>\n    </div>\n  );\n}\n\nexport default ExploreController;\n","export default __webpack_public_path__ + \"static/media/dingocoin.15331900.png\";","import \"./App.scss\";\nimport CreateController from \"./CreateController\";\nimport ProfileController from \"./ProfileController\";\nimport ExploreController from \"./ExploreController\";\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Form,\n  FormControl,\n  Button,\n  Modal,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport DingocoinLogo from \"./assets/img/dingocoin.png\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport { getMeta } from \"./storage\";\n\nfunction App() {\n  const [location, setLocation] = React.useState(null);\n  React.useEffect(() => {\n    setLocation(window.location.pathname);\n  }, []);\n  React.useEffect(() => {}, [location]);\n\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [searchErrorShow, setSearchErrorShow] = React.useState(null);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    setSearchQuery(searchQuery.trim());\n\n    if (searchQuery.trim() !== \"\") {\n      const nftMeta = await getMeta(searchQuery.trim());\n      if (nftMeta !== null) {\n        window.location.assign(`/nft/${searchQuery.trim()}`);\n      } else {\n        window.location.assign(`/profile/${searchQuery.trim()}`);\n      }\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar className=\"navbar\" bg=\"dark\" expand=\"lg\" sticky=\"top\">\n          <Container>\n            <Navbar.Brand href=\"/\" className=\"navbar-brand align-items-center\">\n              <img alt=\"\" src={DingocoinLogo} />\n              <span>DINGOCOIN</span>\n              <span className=\"navbar-brand-subtitle\"> NFT Platform</span>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse>\n              <Nav\n                className=\"ms-auto\"\n                style={{ paddingRight: \"1.5rem\", textAlign: \"center\" }}\n              >\n                <Nav.Link href=\"/explore\">Explore</Nav.Link>\n                <Nav.Link href=\"/create\">Create</Nav.Link>\n              </Nav>\n              <Form className=\"d-flex\" onSubmit={doSearch}>\n                <FormControl\n                  type=\"search\"\n                  placeholder=\"Jump to NFT/profile address...\"\n                  aria-label=\"Search\"\n                  style={{\n                    borderTopRightRadius: \"0\",\n                    borderBottomRightRadius: \"0\",\n                    minWidth: \"20rem\",\n                  }}\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n                <Button\n                  variant=\"secondary mx-0\"\n                  style={{\n                    borderTopLeftRadius: \"0\",\n                    borderBottomLeftRadius: \"0\",\n                  }}\n                  type=\"submit\"\n                >\n                  <FontAwesomeIcon icon={faAngleRight}></FontAwesomeIcon>\n                </Button>\n              </Form>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n\n        <section className=\"section-content\">\n          <Routes>\n            <Route\n              path=\"/profile/:profileAddress\"\n              element={<ProfileController />}\n            />\n            <Route\n              path=\"/profile/:profileAddress/owned\"\n              element={<ProfileController />}\n            />\n            <Route\n              path=\"/collection/:collectionHandle\"\n              element={<ProfileController />}\n            />\n            <Route path=\"/nft/:nftAddress\" element={<ProfileController />} />\n            <Route\n              path=\"/nft/:nftAddress/owned\"\n              element={<ProfileController />}\n            />\n            <Route path=\"/explore\" element={<ExploreController />} />\n            <Route path=\"/explore/top\" element={<ExploreController />} />\n            <Route path=\"/explore/all\" element={<ExploreController />} />\n            <Route path=\"/create\" element={<CreateController />} />\n            <Route path=\"*\" element={<Navigate to=\"/explore\"/>}/>\n          </Routes>\n        </section>\n        <section>\n          <div className=\"justify-content-center section-footer align-items-center\">\n            <h6>Copyright © The Dingocoin Project 2021-2022</h6>\n          </div>\n        </section>\n      </div>\n\n      <Modal\n        size=\"md\"\n        centered\n        show={searchErrorShow}\n        onHide={() => setSearchErrorShow(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>NFT/profile not found</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container className=\"text-center my-2\">\n            <p>No results found.</p>\n            <Button className=\"mx-2\" onClick={() => setSearchErrorShow(false)}>\n              Close\n            </Button>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n","import { Modal, Container, Button } from \"react-bootstrap\";\nimport React from \"react\";\n\nfunction GetWalletModal(props) {\n  return (\n    <Modal\n      size=\"md\"\n      centered\n      show={props.show}\n      onHide={props.onHide}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Browser Wallet required\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container className=\"text-center my-2\">\n          <p>You need a Dingocoin browser wallet for this.<br/>Set it up in less than a minute.</p>\n          <a href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Chrome wallet</Button>\n          </a>\n          <a href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Firefox wallet</Button>\n          </a>\n        </Container>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default GetWalletModal;\n"],"sourceRoot":""}