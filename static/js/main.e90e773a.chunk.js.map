{"version":3,"sources":["utils.js","api.js","CreateController.jsx","storage.js","NFTCard.jsx","CollectionCard.jsx","CreateCollectionModal.jsx","EditCollectionModal.jsx","ProfileController.jsx","ExploreController.jsx","assets/img/dingocoin.png","Main.jsx","App.jsx","index.jsx","CustomDivider.jsx","GetWalletModal.jsx"],"names":["toSatoshi","x","undefined","Error","BigInt","Web3Utils","toWei","toString","toLocaleString","isNegative","integer","replace","satoshiToLocaleString","post","link","data","a","controller","AbortController","setTimeout","abort","fetch","withCredentials","method","signal","headers","Accept","body","JSON","stringify","json","API_URL","getBusy","address","result","busy","getContent","timestamp","signature","getBuyTransaction","price","sendBuyTransaction","transaction","getListTransaction","contentHash","royalty","sendListTransaction","content","preview","name","description","tags","updateProfile","owner","getProfileCreatedNfts","getProfileOwnedNfts","getProfileHistoricalNfts","queryNft","key","direction","offset","limit","queryNftBySearch","search","queryNftByNewest","beforeId","getCollectionStats","handle","queryCollectionByOwner","queryCollectionBySearch","queryUnassignedNftsByOwner","createCollection","thumbnail","updateCollection","setCollectionItem","getCollectionItems","getItemCollection","queryCollectionByTradeCountScaled","queryCollectionByTradeVolume","queryCollectionByValuable","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","CreateController","React","useState","setContent","contentError","setContentError","listingPrice","setListingPrice","setRoyalty","setName","setDescription","setPreview","previewError","setPreviewError","setTags","pending","setPending","success","setSuccess","setAddress","getWalletShow","setGetWalletShow","useEffect","size","Buffer","f","from","isPng","sizeOf","width","height","doSubmit","e","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","window","dingo","Hex","Sha256","Base64","parse","Math","floor","getListTransactionResponse","requestSignTransaction","vouts","signed","sendListTransactionResponse","className","style","maxWidth","onSubmit","Group","Label","Control","type","onChange","target","files","isInvalid","isValid","Text","value","placeholder","length","match","parseInt","toFixed","Range","textAlign","variant","disabled","animation","href","show","onHide","get","getMeta","response","status","getPreviewLink","getState","getProfile","getCollection","NFTCard","props","domRef","useRef","isVisible","setVisible","previewLink","setPreviewLink","stats","setStats","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","meta","state","Card","ref","role","Img","src","loading","Body","Title","Subtitle","icon","faCashRegister","tradeVolume","faExchangeAlt","tradeCount","CollectionCard","collection","setCollection","Container","faList","count","CreateCollectionModal","createdNfts","setCreatedNfts","setThumbnail","setHandle","results","reverse","all","map","createdNftNames","i","Modal","centered","Header","closeButton","title","Form","Select","Button","EditCollectonModal","thumbnailIndex","setThumbnailIndex","currentThumbnailEntry","find","isinvalid","ProfileController","useParams","profileAddress","collectionHandle","nftAddress","location","useLocation","view","pathname","endsWith","editProfileShow","setEditProfileShow","profile","setProfile","createCollectionShow","setCreateCollectionShow","collections","setCollections","unassignedList","setUnassignedList","profileLists","setProfileLists","collectionItems","setCollectionItems","editCollectionShow","setEditCollectionShow","nftMeta","setNftMeta","nftState","setNftState","nftItemCollection","setNftItemCollection","nftOwner","setNftOwner","nftBusy","setNftBusy","resellPrice","setResellPrice","resellPriceError","setResellPriceError","buyResult","setBuyResult","downloadLink","setDownloadLink","editProfileName","setEditProfileName","editProfileNameRef","createRef","ownedNfts","historicalNfts","nftItemCollectionHandle","creator","doEditProfileSubmit","payload","Date","now","message","requestSign","signResult","reload","doCreateCollectionSubmit","doEditCollectionSubmit","doMove","doDownload","doBuy","vins","Row","onClick","faPen","Nav","Item","Link","eventKey","active","faPlus","DropdownButton","y","Dropdown","filter","some","display","rel","txid","onEntered","focus","GetWalletModal","EditCollectionModal","ExploreController","pop","includes","setSearch","searchSubView","setSearchSubView","searchCollections","setSearchCollections","searchNfts","setSearchNfts","collectionList","setCollectionList","nftList","setNftList","nftListEnd","setNftListEnd","queryText","setQueryText","viewMoreEnabled","setViewMoreEnabled","l","URLSearchParams","doChangeSearchSubview","doSearch","trim","assign","subview","doChangeQuery","event","innerText","onViewMore","id","concat","InputGroup","faSearch","FormControl","faArrowRight","Tab","activeKey","onSelect","faBolt","Content","Pane","Spinner","defaultActiveKey","faFire","faGem","Toggle","Menu","Main","Col","autoFocus","CustomDivider","faPiggyBank","faHandHoldingUsd","faLock","App","setLocation","searchQuery","setSearchQuery","searchErrorShow","setSearchErrorShow","Navbar","bg","expand","sticky","Brand","alt","DingocoinLogo","Collapse","paddingRight","minWidth","faAngleRight","index","element","path","to","ReactDOM","render","document","getElementById","faAngleDown"],"mappings":"kTAIMA,EAAY,SAACC,GACjB,GAAU,OAANA,QAAoBC,IAAND,GAAgC,kBAANA,GAAwB,KAANA,EAC5D,MAAM,IAAIE,MAAM,yBAElB,OAAQC,OAAOC,IAAUC,MAAML,EAAG,SAAW,KAAKM,YAG9CC,EAAiB,SAACP,GACtB,IAAMQ,EAAaL,OAAOH,GAAK,GAC3BQ,IACFR,GAAKA,GAEP,IAAMS,EAAUN,OAAOH,GAAGM,WAC1B,OACGE,EAAa,IAAM,IAApB,UAA6BC,EAAQC,QAAQ,wBAAyB,OAIpEC,EAAwB,SAACX,GAC7B,IAAMQ,EAAaL,OAAOH,GAAK,GAC3BQ,IACFR,GAAKA,GAEP,IAAMS,GAAWN,OAAOH,GAAK,YAAYM,WACzC,OACGE,EAAa,IAAM,IAApB,UAA6BC,EAAQC,QAAQ,wBAAyB,OAIpEE,EAAI,uCAAG,WAAOC,EAAMC,GAAb,eAAAC,EAAA,6DACLC,EAAa,IAAIC,gBACvBC,YAAW,kBAAMF,EAAWG,UAAS,KAF1B,SAIHC,MAAMP,EAAM,CAChBQ,iBAAiB,EACjBC,OAAQ,OACRC,OAAQP,EAAWO,OACnBC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUd,KAZd,uCAcTe,QAdS,2CAAH,yD,q5BC/BJC,EAAU,6BAEVC,EAAO,uCAAG,WAAOjB,GAAP,eAAAC,EAAA,sEACOH,YAAK,GAAD,OAAIkB,EAAJ,gBAA2B,CAClDE,QAASlB,EAAKkB,UAFF,UAIC,QAHTC,EADQ,iDAKL,MALK,gCAOLA,EAAOC,MAPF,2CAAH,sDAWPC,EAAa,SAACrB,GAClB,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,mBAA8B,CACvCE,QAASlB,EAAKkB,QACdI,UAAWtB,EAAKsB,UAChBC,UAAWvB,EAAKuB,aAIdC,EAAoB,SAACxB,GACzB,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,0BAAqC,CAC9CE,QAASlB,EAAKkB,QACdO,MAAOzB,EAAKyB,SAIVC,EAAqB,SAAC1B,GAC1B,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,2BAAsC,CAC/CW,YAAa3B,EAAK2B,eAIhBC,EAAqB,SAAC5B,GAC1B,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,2BAAsC,CAC/Ca,YAAa7B,EAAK6B,YAClBJ,MAAOzB,EAAKyB,MACZK,QAAS9B,EAAK8B,WAIZC,EAAsB,SAAC/B,GAC3B,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,4BAAuC,CAChDgB,QAAShC,EAAKgC,QACdC,QAASjC,EAAKiC,QACdC,KAAMlC,EAAKkC,KACXC,YAAanC,EAAKmC,YAClBC,KAAMpC,EAAKoC,KACXT,YAAa3B,EAAK2B,eAIhBU,EAAgB,SAACrC,GACrB,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,mBAA8B,CACvCM,UAAWtB,EAAKsB,UAChBgB,MAAOtC,EAAKsC,MACZJ,KAAMlC,EAAKkC,KACXX,UAAWvB,EAAKuB,aAIdgB,EAAwB,SAACvC,GAC7B,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,2BAAsC,CAC/CsB,MAAOtC,EAAKsC,SAIVE,EAAsB,SAACxC,GAC3B,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,yBAAoC,CAC7CsB,MAAOtC,EAAKsC,SAIVG,EAA2B,SAACzC,GAChC,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,8BAAyC,CAClDsB,MAAOtC,EAAKsC,SAIVI,EAAW,SAAC1C,GAChB,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,cAAyB,CAClC2B,IAAK3C,EAAK2C,IACVC,UAAW5C,EAAK4C,UAChBC,OAAQ7C,EAAK6C,OACbC,MAAO9C,EAAK8C,SAIVC,EAAmB,SAAC/C,GACxB,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,sBAAiC,CAC1CgC,OAAQhD,EAAKgD,UAIXC,EAAmB,SAACjD,GACxB,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,sBAAiC,CAC1CkC,SAAUlD,EAAKkD,YAIbC,EAAqB,SAACnD,GAC1B,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,wBAAmC,CAC5CoC,OAAQpD,EAAKoD,UAIXC,EAAyB,SAACrD,GAC9B,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,4BAAuC,CAChDsB,MAAOtC,EAAKsC,SAIVgB,EAA0B,SAACtD,GAC/B,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,6BAAwC,CACjDgC,OAAQhD,EAAKgD,UAIXO,EAA6B,SAACvD,GAClC,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,0CAAqD,CAC9DsB,MAAOtC,EAAKsC,SAIVkB,EAAmB,SAACxD,GACxB,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,sBAAiC,CAC1CM,UAAWtB,EAAKsB,UAChBgB,MAAOtC,EAAKsC,MACZc,OAAQpD,EAAKoD,OACblB,KAAMlC,EAAKkC,KACXuB,UAAWzD,EAAKyD,UAChBtB,YAAanC,EAAKmC,YAClBZ,UAAWvB,EAAKuB,aAIdmC,EAAmB,SAAC1D,GACxB,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,sBAAiC,CAC1CM,UAAWtB,EAAKsB,UAChB8B,OAAQpD,EAAKoD,OACblB,KAAMlC,EAAKkC,KACXuB,UAAWzD,EAAKyD,UAChBtB,YAAanC,EAAKmC,YAClBZ,UAAWvB,EAAKuB,aAIdoC,EAAoB,SAAC3D,GACzB,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,uBAAkC,CAC3CM,UAAWtB,EAAKsB,UAChBJ,QAASlB,EAAKkB,QACdkC,OAAQpD,EAAKoD,OACb7B,UAAWvB,EAAKuB,aAIdqC,EAAqB,SAAC5D,GAC1B,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,wBAAmC,CAC5CoC,OAAQpD,EAAKoD,UAIXS,EAAoB,SAAC7D,GACzB,OAAOF,YAAK,GAAD,OAAIkB,EAAJ,iCAA4C,CACrDE,QAASlB,EAAKkB,WAIZ4C,EAAoC,WACxC,OAAOhE,YAAK,GAAD,OAAIkB,EAAJ,uCAAkD,KAOzD+C,EAA+B,WACnC,OAAOjE,YAAK,GAAD,OAAIkB,EAAJ,kCAA6C,KAGpDgD,EAA4B,WAChC,OAAOlE,YAAK,GAAD,OAAIkB,EAAJ,+BAA0C,M,0QCzKjDiD,EAAW,SAACC,GAAD,OACf,IAAIC,SAAQ,SAACC,EAASC,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOnD,OAAOuD,MAAM,KAAK,KACvDJ,EAAOK,QAAU,SAACC,GAAD,OAAWP,EAAOO,QAgVxBC,IA7Uf,WACE,MAA8BC,IAAMC,SAAS,MAA7C,mBAAO/C,EAAP,KAAgBgD,EAAhB,KACA,EAAwCF,IAAMC,SAAS,IAAvD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAwCJ,IAAMC,SAAS,QAAvD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAA8BN,IAAMC,SAAS,GAA7C,mBAAOjD,EAAP,KAAgBuD,EAAhB,KACA,EAAwBP,IAAMC,SAAS,IAAvC,mBAAO7C,EAAP,KAAaoD,EAAb,KACA,EAAsCR,IAAMC,SAAS,IAArD,mBAAO5C,EAAP,KAAoBoD,EAApB,KACA,EAA8BT,IAAMC,SAAS,MAA7C,mBAAO9C,EAAP,KAAgBuD,EAAhB,KACA,EAAwCV,IAAMC,SAAS,IAAvD,mBAAOU,EAAP,KAAqBC,EAArB,KACA,GAAwBZ,IAAMC,SAAS,IAAvC,qBAAO3C,GAAP,MAAauD,GAAb,MAEA,GAA8Bb,IAAMC,UAAS,GAA7C,qBAAOa,GAAP,MAAgBC,GAAhB,MACA,GAA8Bf,IAAMC,SAAS,MAA7C,qBAAOe,GAAP,MAAgBC,GAAhB,MACA,GAA8BjB,IAAMC,SAAS,MAA7C,qBAAO7D,GAAP,MAAgB8E,GAAhB,MAEA,GAA0ClB,IAAMC,UAAS,GAAzD,qBAAOkB,GAAP,MAAsBC,GAAtB,MAEApB,IAAMqB,WAAU,WACE,OAAZnE,EAGOA,EAAQoE,KAhCE,IAiCnBlB,EAAgB,+CAGhBA,EAAgB,IANhBA,EAAgB,0BAQjB,CAAClD,IAEJ8C,IAAMqB,WAAU,WACd,sBAAC,4BAAAlG,EAAA,yDACiB,OAAZgC,EADL,4BAEaoE,EAFb,SAE+BpC,EAAShC,GAFxC,mBAESqE,EAFT,KAEoBC,KAFpB,eAEkD,UAC1CC,YAAMF,GAEArE,EAAQmE,KA7CF,IA8CfV,EAAgB,+CACa,MAApBe,IAAOH,GAAGI,OAAsC,MAArBD,IAAOH,GAAGK,OAC9CjB,EAAgB,2CAEhBA,EAAgB,IANhBA,EAAgB,6BAJrB,uBAaGA,EAAgB,wBAbnB,2CAAD,KAgBC,CAACzD,IAEJ,IAAM2E,GAAQ,uCAAG,WAAOC,GAAP,mBAAA5G,EAAA,yDACf4G,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,gCAEO9H,IAAjB+H,OAAOC,MALI,uBAMbjB,IAAiB,GANJ,sCAU0BtE,IAV1B,KAaAwF,IAbA,KAacC,IAbd,KAaqBC,IAbrB,UAawCrD,EAASjC,GAbjD,qCAa4BuF,MAb5B,8CAaIzG,UAbJ,qBAcN7B,YAAUkG,GAdJ,KAeJ,GAAKqC,KAAKC,MAAiB,GAAV3F,EAAgB,KAf7B,OAabD,YAba,KAcbJ,MAda,KAebK,QAfa,2CAkBkB,QAR3B4F,EAVS,WAmBb,UAAWA,GAnBE,oEAyBPR,OAAOC,MAAMQ,uBACjB,GACAD,EAA2BE,OA3BhB,WA+BA,QAPTC,EAxBS,OA6Bb1G,cAEgChC,IAAX0I,EA/BR,0DAmCfhC,IAAW,GAnCI,MAoC2B9D,IApC3B,UAqCEkC,EAASjC,GArCX,wBAsCQ,OAAZC,EAtCI,uBAsCe,KAtCf,yCAsC4BgC,EAAShC,GAtCrC,sDAuCPC,EAvCO,MAwCAC,EAxCA,MAyCPC,GAzCO,MA0CAyF,EA1CA,OAqCb7F,QArCa,MAsCbC,QAtCa,MAuCbC,KAvCa,MAwCbC,YAxCa,MAyCbC,KAzCa,MA0CbT,YA1Ca,6CA6CmB,QAT5BmG,EApCS,cA8CyB3I,IAAtC2I,EAA4BlD,MA9Cf,wBAgDbmB,IAAW,GAhDE,2BAoDfF,IAAW,GACXE,IAAW,GACXC,GAAW8B,EAA4B5G,SAtDxB,4CAAH,sDAyDd,OACE,gCACE,cAAC,IAAD,CAAW6G,UAAU,aAArB,SACE,eAAC,IAAD,WACE,oBAAIA,UAAU,OAAd,wBACA,cAAC,IAAD,SAGJ,cAAC,IAAD,CAAWC,MAAO,CAAEC,SAAU,SAA9B,SACE,cAAC,IAAD,UACE,eAAC,IAAD,YACgB,OAAZnC,KAAgC,IAAZA,KACpB,eAAC,IAAD,CAAMoC,SAAUtB,GAAhB,UACE,eAAC,IAAKuB,MAAN,CAAYJ,UAAU,YAAtB,UACE,cAAC,IAAKK,MAAN,UACE,0DAEF,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,SAAU,SAAC1B,GAAD,OAAOrB,EAAWqB,EAAE2B,OAAOC,MAAM,KAC3CC,UAA4B,OAAjBjD,GAA0C,KAAjBA,EACpCkD,QAA0B,KAAjBlD,IAEVA,GACC,8BACE,cAAC,IAAKmD,KAAN,CAAWb,UAAU,cAArB,SACGtC,MAIP,cAAC,IAAKmD,KAAN,CAAWb,UAAU,aAArB,mHAMF,eAAC,IAAKI,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC,IAAKK,MAAN,UACE,sDAEF,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,SAAU,SAAC1B,GAAD,OAAO7B,EAAW6B,EAAE2B,OAAOC,MAAM,KAC3CC,UAA4B,OAAjBzD,GAA0C,KAAjBA,EACpC0D,QAA0B,KAAjB1D,IAEVA,GACC,8BACE,cAAC,IAAK2D,KAAN,CAAWb,UAAU,cAArB,SACG9C,MAIP,cAAC,IAAK2D,KAAN,CAAWb,UAAU,aAArB,wPAQF,eAAC,IAAKI,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC,IAAKK,MAAN,kCACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLO,MAAO3G,EACP4G,YAAY,oBACZP,SAAU,SAAC1B,GAAD,OAAOvB,EAAQuB,EAAE2B,OAAOK,QAClCF,QAAkB,KAATzG,GAAeA,EAAK6G,QAAU,GACvCL,UAAoB,KAATxG,GAAeA,EAAK6G,OAAS,KAEzC7G,EAAK6G,OAAS,IACb,8BACE,cAAC,IAAKH,KAAN,CAAWb,UAAU,cAArB,6BAKJ,cAAC,IAAKa,KAAN,CAAWb,UAAU,aAArB,8DAKF,eAAC,IAAKI,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC,IAAKK,MAAN,yCACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLO,MAAO1G,EACP2G,YAAY,qBACZP,SAAU,SAAC1B,GAAD,OAAOtB,EAAesB,EAAE2B,OAAOK,QACzCF,QAAyB,KAAhBxG,GAAsBA,EAAY4G,QAAU,IACrDL,UAA2B,KAAhBvG,GAAsBA,EAAY4G,OAAS,MAEvD5G,EAAY4G,OAAS,KACpB,8BACE,cAAC,IAAKH,KAAN,CAAWb,UAAU,cAArB,gCAKJ,cAAC,IAAKa,KAAN,CAAWb,UAAU,aAArB,8DAKF,eAAC,IAAKI,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC,IAAKK,MAAN,kCACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLO,MAAOzG,GACP0G,YAAY,sCACZP,SAAU,SAAC1B,GAAD,OAAOlB,GAAQkB,EAAE2B,OAAOK,QAClCF,QAAkB,KAATvG,IAAeA,GAAK2G,QAAU,IACvCL,UAAoB,KAATtG,IAAeA,GAAK2G,OAAS,MAEzC3G,GAAK2G,OAAS,KACb,8BACE,cAAC,IAAKH,KAAN,CAAWb,UAAU,cAArB,yBAGJ,cAAC,IAAKa,KAAN,CAAWb,UAAU,aAArB,8DAKF,eAAC,IAAKI,MAAN,CAAYJ,UAAU,YAAtB,UACE,cAAC,IAAKK,MAAN,UACE,4DAEF,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLO,MAAO1D,EACPoD,SAAU,SAAC1B,GAEPA,EAAE2B,OAAOK,MAAMG,MAAM,aACrBC,SAASpC,EAAE2B,OAAOK,QAAU,EAE5BzD,EAAgByB,EAAE2B,OAAOK,OAEzBzD,EAAgB,WAItB,cAAC,IAAKwD,KAAN,CAAWb,UAAU,aAArB,4EAKF,eAAC,IAAKI,MAAN,CAAYJ,UAAU,OAAtB,UACE,eAAC,IAAKK,MAAN,WACE,+DACE,IAAMZ,KAAKC,MAAiB,GAAV3F,EAAgB,KAAO,IAAIoH,QAAQ,GACrD,OAEJ,cAAC,IAAKC,MAAN,CACEN,MAAO/G,EACPyG,SAAU,SAAC1B,GAAD,OAAOxB,EAAWwB,EAAE2B,OAAOK,UAEvC,cAAC,IAAKD,KAAN,CAAWb,UAAU,aAArB,uEAKF,sBAAKC,MAAO,CAAEoB,UAAW,UAAzB,UACe,OAAZtD,KAAgC,IAAZF,IACnB,cAAC,IAAD,CACEmC,UAAU,yBACVsB,QAAQ,UACRf,KAAK,SACLgB,SACc,OAAZtH,GACiB,KAAjBiD,GACa,OAAZhD,GAAqC,KAAjBwD,EAPzB,wBAaW,OAAZK,KAAgC,IAAZF,IACnB,gCACE,cAAC,IAAD,CAAS2D,UAAU,WACnB,uDAEE,uBAFF,kCAOS,IAAZzD,IACC,8BACE,oDAEE,uBAFF,oDAUG,IAAZA,IACC,sBAAKkC,MAAO,CAAEoB,UAAW,UAAzB,UACG,IACD,8CACA,8CACe,4BAAIlI,QAEnB,qBAAK8G,MAAO,CAAEoB,UAAW,UAAzB,SACE,mBAAGI,KAAM,QAAUtI,GAAnB,SACE,cAAC,IAAD,CAAQ6G,UAAU,oBAAoBsB,QAAQ,UAA9C,2CAWd,cAAC,IAAD,CACEI,KAAMxD,GACNyD,OAAQ,kBAAMxD,IAAiB,Y,gfCxVjCyD,EAAM,SAAC5J,GACX,IAAMG,EAAa,IAAIC,gBAEvB,OADAC,YAAW,kBAAMF,EAAWG,UAAS,KAC9BC,MAAMP,EAAM,CACjBQ,iBAAiB,EACjBC,OAAQ,MACRC,OAAQP,EAAWO,UAIjBmJ,EAAO,uCAAG,WAAO1I,GAAP,eAAAjB,EAAA,sEACS0J,EAAI,GAAD,OAjBR,kDAiBQ,YAAmBzI,IAD/B,UAEU,OADlB2I,EADQ,QAEDC,OAFC,yCAGLD,EAAS9I,QAHJ,gCAKL,MALK,2CAAH,sDASPgJ,EAAiB,SAAC7I,GACtB,MAAM,GAAN,OAzBqB,qDAyBrB,YAA4BA,EAA5B,SAGI8I,EAAQ,uCAAG,WAAO9I,GAAP,eAAAjB,EAAA,sEACQ0J,EAAI,GAAD,OA5BP,mDA4BO,YAAoBzI,IAD/B,UAES,OADlB2I,EADS,QAEFC,OAFE,yCAGND,EAAS9I,QAHH,gCAKN,MALM,2CAAH,sDASRkJ,EAAU,uCAAG,WAAO3H,GAAP,eAAArC,EAAA,sEACM0J,EAAI,GAAD,OApCL,qDAoCK,YAAsBrH,IAD/B,UAEO,OADlBuH,EADW,QAEJC,OAFI,yCAGRD,EAAS9I,QAHD,gCAKR,MALQ,2CAAH,sDASVmJ,EAAa,uCAAG,WAAO9G,GAAP,eAAAnD,EAAA,sEACG0J,EAAI,GAAD,OA5CF,wDA4CE,YAAyBvG,IAD/B,UAEI,OADlByG,EADc,QAEPC,OAFO,yCAGXD,EAAS9I,QAHE,gCAKX,MALW,2CAAH,sD,wCC0CJoJ,MA/Ef,SAAiBC,GACf,IAAMC,EAASvF,IAAMwF,SACrB,EAAgCxF,IAAMC,UAAS,GAA/C,mBAAOwF,EAAP,KAAkBC,EAAlB,KACA,EAAsC1F,IAAMC,SAAS,MAArD,mBAAO0F,EAAP,KAAoBC,EAApB,KACA,EAAwB5F,IAAMC,SAAS,MAAvC,mBAAO7C,EAAP,KAAaoD,EAAb,KACA,EAA0BR,IAAMC,SAAS,MAAzC,mBAAO4F,EAAP,KAAcC,EAAd,KAgCA,OA9BA9F,IAAMqB,WAAU,WACd,IAAM0E,EAAW,IAAIC,sBAAqB,SAACC,GACzCA,EAAQC,SAAQ,SAACC,GACXA,EAAMC,gBACRV,GAAW,SAKjB,OADAK,EAASM,QAAQd,EAAOe,SACjB,WACL,IACEP,EAASQ,UAAUhB,EAAOe,SAC1B,cAEH,IAEHtG,IAAMqB,WAAU,WACd,sBAAC,gCAAAlG,EAAA,0DACKsK,EADL,iCAEsBX,EAAQQ,EAAMlJ,SAFpC,cAESoK,EAFT,gBAG6BvB,EAAeK,EAAMlJ,SAHlD,cAGSuJ,EAHT,gBAIuBT,EAASI,EAAMlJ,SAJtC,OAISqK,EAJT,OAMGb,EAAeD,GACfnF,EAAiB,OAATgG,EAAgB,KAAOA,EAAKpJ,MACpC0I,EAAmB,OAAVW,EAAiB,KAAOA,EAAMZ,OAR1C,2CAAD,KAWC,CAACP,EAAMlJ,QAASqJ,IAGjB,eAACiB,EAAA,EAAD,CACEzD,UAAU,mDACV0D,IAAKpB,EAFP,UAIE,sBAAKtC,UAAU,aAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,8BAA8B2D,KAAK,aAGpD,cAACF,EAAA,EAAKG,IAAN,CAAUtC,QAAQ,MAAMuC,IAAKnB,EAAaoB,QAAQ,YAEpD,uBACA,eAACL,EAAA,EAAKM,KAAN,WACE,cAACN,EAAA,EAAKO,MAAN,CAAYhE,UAAU,aAAtB,SACY,OAAT7F,EAAgB,IAAe,KAATA,EAAc,cAAgBA,IAEvD,cAACsJ,EAAA,EAAKQ,SAAN,CAAejE,UAAU,wBAAzB,SAAkDqC,EAAMlJ,UACxD,eAACsK,EAAA,EAAK5C,KAAN,WACE,sBAAMb,UAAU,aAAhB,SACa,OAAV4C,EAAiB,IAAM9K,YAAsB8K,EAAMlJ,SAEtD,uBACA,sBAAMsG,UAAU,sBAAhB,yBAGJ,uBACA,sBAAKA,UAAU,2BAAf,UACE,uBAAMA,UAAU,eAAhB,UACE,cAAC,IAAD,CAAiBkE,KAAMC,MAAmB,IAC/B,OAAVvB,EAAiB,IAAM9K,YAAsB8K,EAAMwB,gBAHxD,eAME,uBAAMpE,UAAU,eAAhB,UACE,cAAC,IAAD,CAAiBkE,KAAMG,MAAkB,IAC9B,OAAVzB,EAAiB,IAAMA,EAAM0B,qB,gBCgBzBC,MAtFf,SAAwBlC,GACtB,IAAMC,EAASvF,IAAMwF,SACrB,EAAgCxF,IAAMC,UAAS,GAA/C,mBAAOwF,EAAP,KAAkBC,EAAlB,KACA,EAAsC1F,IAAMC,SAAS,MAArD,mBAAO0F,EAAP,KAAoBC,EAApB,KACA,EAAoC5F,IAAMC,SAAS,MAAnD,mBAAOwH,EAAP,KAAmBC,EAAnB,KACA,EAA0B1H,IAAMC,SAAS,MAAzC,mBAAO4F,EAAP,KAAcC,EAAd,KAkCA,OAhCA9F,IAAMqB,WAAU,WACd,IAAM0E,EAAW,IAAIC,sBAAqB,SAACC,GACzCA,EAAQC,SAAQ,SAACC,GACXA,EAAMC,gBACRV,GAAW,SAKjB,OADAK,EAASM,QAAQd,EAAOe,SACjB,WACL,IACEP,EAASQ,UAAUhB,EAAOe,SAC1B,cAEH,IAEHtG,IAAMqB,WAAU,WACd,sBAAC,8BAAAlG,EAAA,0DACKsK,EADL,iCAE4BL,EAAcE,EAAMhH,QAFhD,UAESmJ,EAFT,OAGGC,EAAcD,GAEK,OAAfA,EALP,wBAMK7B,EAAeX,EAAewC,EAAW9I,YAN9C,SAQyBN,YAAmB,CAAEC,OAAQgH,EAAMhH,SAR5D,OAQWuH,EARX,OASKC,EAASD,GATd,2CAAD,KAaC,CAACJ,EAAWH,EAAMhH,SAGnB,eAACqJ,EAAA,EAAD,CAAW1E,UAAU,yBAAyB0D,IAAKpB,EAAnD,UACkB,OAAfkC,GACY,OAAV5B,GACC,qBAAK5C,UAAU,qCAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBACEA,UAAU,8BACV2D,KAAK,iBAMD,OAAfa,GAAiC,OAAV5B,GACtB,sBAAK5C,UAAU,qCAAf,UACE,qBAAKA,UAAU,oBAAoB6D,IAAKnB,IACxC,sBAAM1C,UAAU,gBAAhB,SACkB,OAAfwE,GAAuBA,EAAWrK,OAErC,sBAAM6F,UAAU,kCAAhB,SACkB,OAAfwE,GAAuBA,EAAWpK,cAErC,oBAAI4F,UAAU,YACd,sBAAKA,UAAU,2CAAf,UACE,uBAAMA,UAAU,UAAhB,UACE,cAAC,IAAD,CAAiBkE,KAAMS,MAAW,IACvB,OAAV/B,EAAiB,IAAMA,EAAMgC,SAHlC,eAME,iCACE,cAAC,IAAD,CAAiBV,KAAMC,MAAmB,IAC/B,OAAVvB,EAAiB,IAAMlL,YAAekL,EAAMwB,gBARjD,eAWE,uBAAMpE,UAAU,UAAhB,UACE,cAAC,IAAD,CAAiBkE,KAAMG,MAAkB,IAC9B,OAAVzB,EAAiB,IAAMA,EAAM0B,wBC+F7BO,MAnLf,SAA+BxC,GAC7B,MAAsCtF,IAAMC,SAAS,MAArD,mBAAO8H,EAAP,KAAoBC,EAApB,KACA,EAAkChI,IAAMC,SAAS,MAAjD,mBAAOtB,EAAP,KAAkBsJ,EAAlB,KACA,EAAwBjI,IAAMC,SAAS,IAAvC,mBAAO7C,EAAP,KAAaoD,EAAb,KACA,EAA4BR,IAAMC,SAAS,IAA3C,mBAAO3B,EAAP,KAAe4J,EAAf,KACA,EAAsClI,IAAMC,SAAS,IAArD,mBAAO5C,EAAP,KAAoBoD,EAApB,KAoBA,OAlBAT,IAAMqB,WAAU,WACd,sBAAC,8BAAAlG,EAAA,8DACqBd,IAAhBiL,EAAM9H,OAAuC,OAAhB8H,EAAM9H,MADxC,iCAG8BC,YAAsB,CAAED,MAAO8H,EAAM9H,QAHnE,aAGSuK,EAHT,OAG6EI,QAAQC,WAClEnE,OAAS,GAJ5B,iCAKmC5E,QAAQgJ,IACpCN,EAAYO,IAAZ,uCAAgB,WAAOlO,GAAP,SAAAe,EAAA,sEACA2J,EAAQ1K,GADR,uCACYgD,MADZ,2CAAhB,wDANP,OAKWmL,EALX,OAUKP,EAAeD,EAAYO,KAAI,SAAClO,EAAGoO,GAAJ,MAAU,CAACpO,EAAGmO,EAAgBC,QAC7DP,EAAaF,EAAY,IAX9B,2CAAD,KAeC,CAACzC,EAAM9H,QAGR,eAACiL,EAAA,EAAD,CAAOnH,KAAK,KAAKoH,UAAQ,EAAC/D,KAAMW,EAAMX,KAAMC,OAAQU,EAAMV,OAA1D,UACE,cAAC6D,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,EAAA,EAAMxB,MAAP,UAAc3B,EAAMuD,UAEtB,cAACJ,EAAA,EAAMzB,KAAP,UACE,eAAC8B,EAAA,EAAD,CACE7F,UAAU,MACVG,SAAU,SAACrB,GACTA,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAES,OAAnBmD,EAAMlC,eAAwC/I,IAAnBiL,EAAMlC,UACnCkC,EAAMlC,SAAS,CACbzE,UAAWA,EACXvB,KAAMA,EACNkB,OAAQA,EACRjB,YAAaA,KAZrB,UAiBE,eAACyL,EAAA,EAAKzF,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC6F,EAAA,EAAKxF,MAAN,UACE,8DAEe,OAAhByE,GACC,gCACE,cAACe,EAAA,EAAKC,OAAN,CAAavE,UAAQ,IACrB,cAACsE,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAAcW,WAAW,EAA9C,uEAKa,OAAhBmE,GACC,gCACE,cAACe,EAAA,EAAKC,OAAN,CACElF,SAAS,EACTE,MAAOpF,EACP8E,SAAU,SAAC1B,GAAD,OAAOkG,EAAalG,EAAE2B,OAAOK,QAHzC,SAKGgE,EAAYO,KAAI,SAAClO,GAAD,OACf,wBAAmB2J,MAAO3J,EAAE,GAA5B,SACGA,EAAE,IADQA,EAAE,SAKnB,cAAC0O,EAAA,EAAKhF,KAAN,CAAWb,UAAU,aAArB,qHAON,eAAC6F,EAAA,EAAKzF,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC6F,EAAA,EAAKxF,MAAN,UACE,8DAEF,cAACwF,EAAA,EAAKvF,QAAN,CACEC,KAAK,OACLQ,YAAY,oBACZD,MAAO3G,EACPqG,SAAU,SAAC1B,GAAD,OAAOvB,EAAQuB,EAAE2B,OAAOK,QAClCF,QAAkB,KAATzG,GAAeA,EAAK6G,QAAU,GACvCL,UAAoB,KAATxG,GAAeA,EAAK6G,OAAS,KAEhC,KAAT7G,GACC,8BACE,cAAC0L,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAArB,6BAGM,KAAT7F,GAAeA,EAAK6G,OAAS,IAC5B,8BACE,cAAC6E,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAArB,gCAIN,eAAC6F,EAAA,EAAKzF,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC6F,EAAA,EAAKxF,MAAN,UACE,gEAEF,cAACwF,EAAA,EAAKvF,QAAN,CACEC,KAAK,OACLQ,YAAY,oBACZD,MAAOzF,EACPmF,SAAU,SAAC1B,GAAD,OAAOmG,EAAUnG,EAAE2B,OAAOK,QACpCF,QAAoB,KAAXvF,GAAiBA,EAAO2F,QAAU,GAC3CL,UAAsB,KAAXtF,GAAiBA,EAAO2F,OAAS,KAElC,KAAX3F,GACC,8BACE,cAACwK,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAArB,+BAGQ,KAAX3E,GAAiBA,EAAO2F,OAAS,IAChC,8BACE,cAAC6E,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAArB,+BAGQ,KAAX3E,IAAkBA,EAAO4F,MAAM,kBAC9B,8BACE,cAAC4E,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAArB,wFAMJ,cAAC6F,EAAA,EAAKhF,KAAN,CAAWb,UAAU,aAArB,2GAKF,eAAC6F,EAAA,EAAKzF,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC6F,EAAA,EAAKxF,MAAN,gDACA,cAACwF,EAAA,EAAKvF,QAAN,CACEC,KAAK,OACLQ,YAAY,qBACZD,MAAO1G,EACPoG,SAAU,SAAC1B,GAAD,OAAOtB,EAAesB,EAAE2B,OAAOK,QACzCF,QAAyB,KAAhBxG,GAAsBA,EAAY4G,QAAU,IACrDL,UAA2B,KAAhBvG,GAAsBA,EAAY4G,OAAS,MAEvC,KAAhB5G,GAAsBA,EAAY4G,OAAS,KAC1C,8BACE,cAAC6E,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAArB,uCAMN,qBAAKA,UAAU,cAAf,SACE,cAAC+F,EAAA,EAAD,CACE/F,UAAU,YACVsB,QAAQ,UACRf,KAAK,SACLgB,SACgB,OAAd7F,GACS,KAATvB,GACAA,EAAK6G,OAAS,IACH,KAAX3F,GACAA,EAAO2F,OAAS,IAChB5G,EAAY4G,OAAS,IAVzB,+BCXGgF,MAlJf,SAA4B3D,GAC1B,MAAsCtF,IAAMC,SAAS,MAArD,mBAAO8H,EAAP,KAAoBC,EAApB,KACA,EAA4ChI,IAAMC,SAAS,MAA3D,mBAAOiJ,EAAP,KAAuBC,EAAvB,KACA,EAAwBnJ,IAAMC,SAAS,IAAvC,mBAAO7C,EAAP,KAAaoD,EAAb,KACA,EAAsCR,IAAMC,SAAS,IAArD,mBAAO5C,EAAP,KAAoBoD,EAApB,KAyBA,OAvBAT,IAAMqB,WAAU,WACd,sBAAC,kCAAAlG,EAAA,8DACsBd,IAAjBiL,EAAMhH,QAAyC,OAAjBgH,EAAMhH,OADzC,iCAE4B8G,EAAcE,EAAMhH,QAFhD,cAESmJ,EAFT,OAGGjH,EAAQiH,EAAWrK,MACnBqD,EAAegH,EAAWpK,aAJ7B,SAM8BI,YAAsB,CAAED,MAAOiK,EAAWjK,QANxE,aAMSuK,EANT,OAMkFI,QAAQC,WACvEnE,OAAS,GAP5B,kCAQmC5E,QAAQgJ,IACpCN,EAAYO,IAAZ,uCAAgB,WAAOlO,GAAP,SAAAe,EAAA,sEACA2J,EAAQ1K,GADR,uCACYgD,MADZ,2CAAhB,wDATP,QAQWmL,EARX,OAaKP,EAAeD,EAAYO,KAAI,SAAClO,EAAGoO,GAAJ,MAAU,CAACpO,EAAGmO,EAAgBC,QAEvDY,EAAwBrB,EAAYO,KAAI,SAAClO,EAAGoO,GAAJ,MAAU,CAACpO,EAAGoO,MAAIa,MAAK,SAACjP,GAAD,OAAOA,EAAE,KAAOqN,EAAW9I,aAChGwK,EAAkBC,EAAsB,IAhB7C,2CAAD,KAoBC,CAAC9D,EAAMhH,SAGR,eAACmK,EAAA,EAAD,CAAOnH,KAAK,KAAKoH,UAAQ,EAAC/D,KAAMW,EAAMX,KAAMC,OAAQU,EAAMV,OAA1D,UACE,cAAC6D,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,EAAA,EAAMxB,MAAP,UAAc3B,EAAMuD,UAEtB,cAACJ,EAAA,EAAMzB,KAAP,UACE,eAAC8B,EAAA,EAAD,CACE7F,UAAU,MACVG,SAAU,SAACrB,GACTA,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAES,OAAnBmD,EAAMlC,eAAwC/I,IAAnBiL,EAAMlC,UACnCkC,EAAMlC,SAAS,CACbzE,UAAWoJ,EAAYmB,GAAgB,GACvC9L,KAAMA,EACNkB,OAAQgH,EAAMhH,OACdjB,YAAaA,KAZrB,UAiBE,eAACyL,EAAA,EAAKzF,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC6F,EAAA,EAAKxF,MAAN,UACE,8DAEe,OAAhByE,GACC,gCACE,cAACe,EAAA,EAAKC,OAAN,CAAavE,UAAQ,IACrB,cAACsE,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAAcqG,WAAW,EAA9C,uEAKa,OAAhBvB,GAA2C,OAAnBmB,GACvB,gCACE,cAACJ,EAAA,EAAKC,OAAN,CACElF,SAAS,EACTE,MAAOmF,EACPzF,SAAU,SAAC1B,GAAD,OAAOoH,EAAkBpH,EAAE2B,OAAOK,QAH9C,SAKGgE,EAAYO,KAAI,SAAClO,EAAGoO,GAAJ,OACf,wBAAgBzE,MAAOyE,EAAvB,SACGpO,EAAE,IADQoO,QAKjB,cAACM,EAAA,EAAKhF,KAAN,CAAWb,UAAU,aAArB,qHAON,eAAC6F,EAAA,EAAKzF,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC6F,EAAA,EAAKxF,MAAN,UACE,8DAEF,cAACwF,EAAA,EAAKvF,QAAN,CACEC,KAAK,OACLQ,YAAY,oBACZD,MAAO3G,EACPqG,SAAU,SAAC1B,GAAD,OAAOvB,EAAQuB,EAAE2B,OAAOK,QAClCF,QAAkB,KAATzG,GAAeA,EAAK6G,QAAU,GACvCL,UAAoB,KAATxG,GAAeA,EAAK6G,OAAS,KAEhC,KAAT7G,GACC,8BACE,cAAC0L,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAArB,6BAGM,KAAT7F,GAAeA,EAAK6G,OAAS,IAC5B,8BACE,cAAC6E,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAArB,gCAIN,eAAC6F,EAAA,EAAKzF,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC6F,EAAA,EAAKxF,MAAN,gDACA,cAACwF,EAAA,EAAKvF,QAAN,CACEC,KAAK,OACLQ,YAAY,qBACZD,MAAO1G,EACPoG,SAAU,SAAC1B,GAAD,OAAOtB,EAAesB,EAAE2B,OAAOK,QACzCF,QAAyB,KAAhBxG,GAAsBA,EAAY4G,QAAU,IACrDL,UAA2B,KAAhBvG,GAAsBA,EAAY4G,OAAS,MAEvC,KAAhB5G,GAAsBA,EAAY4G,OAAS,KAC1C,8BACE,cAAC6E,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAArB,uCAMN,qBAAKA,UAAU,cAAf,SACE,cAAC+F,EAAA,EAAD,CACE/F,UAAU,YACVsB,QAAQ,UACRf,KAAK,SACLgB,SACqB,OAAnB0E,GACS,KAAT9L,GACAA,EAAK6G,OAAS,IACd5G,EAAY4G,OAAS,IARzB,+B,QC2xBGsF,MAl3Bf,WACE,MAAyDC,cAAjDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,iBAAkBC,EAA1C,EAA0CA,WACpCC,EAAWC,cACXC,OACezP,IAAnBoP,EACIG,EAASG,SAASC,SAAS,UACzB,eACA,eACmB3P,IAArBqP,EACA,kBACerP,IAAfsP,EACA,MACA,UAGN,EAA8C3J,IAAMC,SAAS,MAA7D,mBAAOgK,EAAP,KAAwBC,EAAxB,KACA,EAA8BlK,IAAMC,SAAS,MAA7C,mBAAOkK,EAAP,KAAgBC,EAAhB,KAGA,EAAwDpK,IAAMC,UAAS,GAAvE,mBAAOoK,EAAP,KAA6BC,EAA7B,KACA,EAAsCtK,IAAMC,SAAS,MAArD,mBAAOsK,EAAP,KAAoBC,EAApB,KACA,EAA4CxK,IAAMC,SAAS,MAA3D,mBAAOwK,EAAP,KAAuBC,GAAvB,KACA,GAAwC1K,IAAMC,SAAS,MAAvD,qBAAO0K,GAAP,MAAqBC,GAArB,MAGA,GAAoC5K,IAAMC,SAAS,MAAnD,qBAAOwH,GAAP,MAAmBC,GAAnB,MACA,GAA8C1H,IAAMC,SAAS,MAA7D,qBAAO4K,GAAP,MAAwBC,GAAxB,MACA,GAAoD9K,IAAMC,UAAS,GAAnE,qBAAO8K,GAAP,MAA2BC,GAA3B,MAGA,GAA8BhL,IAAMC,SAAS,MAA7C,qBAAOgL,GAAP,MAAgBC,GAAhB,MACA,GAAgClL,IAAMC,SAAS,MAA/C,qBAAOkL,GAAP,MAAiBC,GAAjB,MACA,GAAkDpL,IAAMC,cAAS5F,GAAjE,qBAAOgR,GAAP,MAA0BC,GAA1B,MACA,GAAgCtL,IAAMC,cAAS5F,GAA/C,qBAAOkR,GAAP,MAAiBC,GAAjB,MACA,GAA8BxL,IAAMC,cAAS5F,GAA7C,qBAAOoR,GAAP,MAAgBC,GAAhB,MACA,GAAsC1L,IAAMC,SAAS,IAArD,qBAAO0L,GAAP,MAAoBC,GAApB,MACA,GAAgD5L,IAAMC,SAAS,IAA/D,qBAAO4L,GAAP,MAAyBC,GAAzB,MACA,GAAkC9L,IAAMC,SAAS,MAAjD,qBAAO8L,GAAP,MAAkBC,GAAlB,MACA,GAAwChM,IAAMC,SAAS,MAAvD,qBAAOgM,GAAP,MAAqBC,GAArB,MAEA,GAA8ClM,IAAMC,SAAS,IAA7D,qBAAOkM,GAAP,MAAwBC,GAAxB,MACMC,GAAqBrM,IAAMsM,YACjC,GAA0CtM,IAAMC,UAAS,GAAzD,qBAAOkB,GAAP,MAAsBC,GAAtB,MAGApB,IAAMqB,WAAU,WACD,YAATyI,GACF,sBAAC,gCAAA3O,EAAA,sEAEqBgK,EAAWsE,GAFhC,cAGiB,QADZU,EAFL,UAIGA,EAAU,IAEZA,EAAQ/N,QAAUqN,EAClBW,EAAWD,GAPZ,SAU2B5L,YAAuB,CAC/Cf,MAAOiM,IAXV,cAaqB,QAHdc,EAVP,SAcGC,EAAeD,EAAYnC,WAd9B,UAkB8B3J,YAA2B,CACtDjB,MAAOiM,IAnBV,QAkBOgB,EAlBP,OAqBCC,GAAkBD,EAAerC,WArBlC,2CAAD,KAwBD,IAGHpI,IAAMqB,WAAU,WACD,iBAATyI,GACF,sBAAC,4BAAA3O,EAAA,sEAEqBgK,EAAWsE,GAFhC,cAGiB,QADZU,EAFL,UAIGA,EAAU,IAEZA,EAAQ/N,QAAUqN,EAClBW,EAAWD,GAPZ,KASCS,GATD,SAWWnN,YAAsB,CAAED,MAAOiM,IAX1C,0BAYKtB,QAAQC,UAZb,UAcW1K,YAAoB,CAAEF,MAAOiM,IAdxC,2BAeKtB,QAAQC,UAfb,UAiBWzK,YAAyB,CAAEH,MAAOiM,IAjB7C,oBAkBKtB,QAAQC,UAlBb,MAUGL,YAVH,KAaGwE,UAbH,KAgBGC,eAhBH,gEAAD,KAsBD,IAGHxM,IAAMqB,WAAU,WACd,sBAAC,8BAAAlG,EAAA,yDACc,eAAT2O,EADL,iCAE4B1E,EAAcsE,GAF1C,cAESjC,EAFT,QAGcnJ,OAASoL,EACpBhC,GAAcD,GAJjB,SAKuBtC,EAAWsC,EAAWjK,OAL7C,cAMmB,QADZ2M,EALP,UAOKA,EAAU,IAEZA,EAAQ/N,QAAUqL,EAAWjK,MAC7B4M,EAAWD,GAVd,KAWGW,GAXH,UAYYhM,YAAmB,CAAER,OAAQoL,IAZzC,oBAY8DtB,WAZ9D,yDAAD,KAgBC,IAGHpI,IAAMqB,WAAU,WACd,sBAAC,sCAAAlG,EAAA,yDACc,QAAT2O,EADL,iCAEyBhF,EAAQ6E,GAFjC,cAESsB,EAFT,OAGGC,GAAWD,GAHd,SAI0B/F,EAASyE,GAJnC,cAISwB,EAJT,OAKGC,GAAYD,GALf,UAQWpM,YAAkB,CACtB3C,QAASuN,IAThB,WAYmC,QAL1B8C,EAPT,OAWKnO,QAXL,iBAaKgN,GAAqB,MAb1B,yCAe8BlG,EAAc,CACrC9G,OAAQmO,IAhBf,QAeWhF,EAfX,OAkBK6D,GAAqB7D,GAlB1B,WAqBoB,OAAb0D,GAAqBA,EAAS3N,QAAU2N,EAASuB,QArBxD,kCAsB0BvH,EAAWgG,EAAS3N,OAtB9C,QAuBsB,QADb+N,EAtBT,UAwBOA,EAAW,IAEbA,EAASnP,QAAU+O,EAAS3N,MAC5BgO,GAAYD,GA3BjB,wBA6BKC,GAAY,MA7BjB,WAgCoB,OAAbL,GAAiC,OAAZF,EAhC5B,kCAiCyB9F,EAAWgG,EAASuB,SAjC7C,QAkCqB,QADZvC,EAjCT,UAmCOA,EAAU,IAEZA,EAAQ/N,QAAU+O,EAASuB,QAC3BtC,EAAWD,GAtChB,oBAyCGuB,GAzCH,UAyCoBvP,YAAQ,CAAEC,QAASuN,IAzCvC,8EAAD,KA4CC,IAGH3J,IAAMqB,WAAU,WACM,KAAhBsK,GACFG,GAAoB,yBACE,OAAbX,IAEP5Q,OAAOJ,YAAUwR,KACjBpR,OAAO,IAAMA,OAAO4Q,GAAStF,MAAMlJ,OAEnCmP,GAAoB,sDAOtBA,GAAoB,MAErB,CAACH,GAAaR,KAEjB,IAAMwB,GAAmB,uCAAG,WAAO5K,GAAP,mBAAA5G,EAAA,yDAC1B4G,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,gCAEO9H,IAAjB+H,OAAOC,MALe,uBAMxBjB,IAAiB,GANO,iCAUpBwL,EAAU,CACdpQ,UAAWqQ,KAAKC,MAChBtP,MAAOiM,EACPrM,KACsB,OAApB+O,IAAgD,KAApBA,GACxB,KACAA,IAEFY,EAAUhR,KAAKC,UAAU4Q,GAlBL,UAoBDxK,OAAOC,MAAM2K,YACpC1K,IAAItG,UAAUuG,IAAOwK,KArBG,gBAuBD1S,KAHnB4S,EApBoB,QAuBXnN,MAvBW,0DA0B1B8M,EAAQnQ,UAAYwQ,EAAW5Q,OA1BL,UA4BCkB,YAAcqP,GA5Bf,aA6BtB,UA7BsB,2DAiC1BxK,OAAOwH,SAASsD,QAAO,GAjCG,4CAAH,sDAoCnBC,GAAwB,uCAAG,WAAO1F,GAAP,mBAAAtM,EAAA,6DAEzByR,EAAU,CACdpQ,UAAWqQ,KAAKC,MAChBtP,MAAOiM,EACPnL,OAAQmJ,EAAWnJ,OACnBlB,KAAMqK,EAAWrK,KACjBuB,UAAW8I,EAAW9I,UACtBtB,YAAaoK,EAAWpK,aAEpB0P,EAAUhR,KAAKC,UAAU4Q,GAVA,SAaNxK,OAAOC,MAAM2K,YACpC1K,IAAItG,UAAUuG,IAAOwK,KAdQ,eAgBN1S,KAHnB4S,EAbyB,QAgBhBnN,MAhBgB,wDAmB/B8M,EAAQnQ,UAAYwQ,EAAW5Q,OAnBA,UAsBJqC,YAAiBkO,GAtBb,aAuB3B,UAvB2B,2DA2B/BxK,OAAOwH,SAASsD,QAAO,GA3BQ,4CAAH,sDA8BxBE,GAAsB,uCAAG,WAAO3F,GAAP,mBAAAtM,EAAA,6DAEvByR,EAAU,CACdpQ,UAAWqQ,KAAKC,MAChBxO,OAAQmJ,EAAWnJ,OACnBlB,KAAMqK,EAAWrK,KACjBuB,UAAW8I,EAAW9I,UACtBtB,YAAaoK,EAAWpK,aAEpB0P,EAAUhR,KAAKC,UAAU4Q,GATF,SAYJxK,OAAOC,MAAM2K,YACpC1K,IAAItG,UAAUuG,IAAOwK,KAbM,eAeJ1S,KAHnB4S,EAZuB,QAednN,MAfc,wDAkB7B8M,EAAQnQ,UAAYwQ,EAAW5Q,OAlBF,UAqBFuC,YAAiBgO,GArBf,aAsBzB,UAtByB,2DA0B7BxK,OAAOwH,SAASsD,QAAO,GA1BM,4CAAH,sDA6BtBG,GAAM,uCAAG,WAAOjR,EAASkC,GAAhB,mBAAAnD,EAAA,6DAEPyR,EAAU,CACdpQ,UAAWqQ,KAAKC,MAChB1Q,QAASA,EACTkC,OAAQA,GAEJyO,EAAUhR,KAAKC,UAAU4Q,GAPlB,SAUYxK,OAAOC,MAAM2K,YACpC1K,IAAItG,UAAUuG,IAAOwK,KAXV,eAaY1S,KAHnB4S,EAVO,QAaEnN,MAbF,wDAgBb8M,EAAQnQ,UAAYwQ,EAAW5Q,OAhBlB,UAmBcwC,YAAkB+N,GAnBhC,aAoBT,UApBS,2DAwBbxK,OAAOwH,SAASsD,QAAO,GAxBV,4CAAH,wDA2BNI,GAAU,uCAAG,WAAOvL,GAAP,qBAAA5G,EAAA,yDACjB4G,EAAEC,iBACFD,EAAEE,uBAEmB5H,IAAjB+H,OAAOC,MAJM,uBAKfjB,IAAiB,GALF,iCASX5E,EAAYqQ,KAAKC,MACjBC,EAVW,UAUEpD,EAVF,YAUgBnN,GAVhB,SAWQ4F,OAAOC,MAAM2K,YACpC1K,IAAItG,UAAUuG,IAAOwK,KAZN,eAcQ1S,KAHnB4S,EAXW,QAcFnN,MAdE,oEAkBIvD,YAAW,CAC9BH,QAASuN,EACTnN,UAAWA,EACXC,UAAWwQ,EAAW5Q,SArBP,WAuBF,QALTA,EAlBW,cAuBuBhC,IAAjBgC,EAAOyD,MAvBb,wDA2BMzF,IAAnBgC,EAAOa,SACTgP,GAAgB7P,EAAOa,SA5BR,4CAAH,sDAgCVqQ,GAAK,uCAAG,WAAOxL,GAAP,uBAAA5G,EAAA,yDACZ4G,EAAEC,iBACFD,EAAEE,uBAEmB5H,IAAjB+H,OAAOC,MAJC,uBAKVjB,IAAiB,GALP,0CASkB1E,YAAkB,CAC9CN,QAASuN,EACThN,MAAOxC,YAAUwR,MAXP,uBASJ6B,EATI,EASJA,KAAM1K,EATF,EASEA,MATF,UAaUV,OAAOC,MAAMQ,uBAAuB2K,EAAM1K,GAbpD,WAeG,QAFTC,EAbM,OAcT1G,cAC+BhC,IAAX0I,EAfX,oEAmBSnG,YAAmB,CAAEC,YAAakG,IAnB3C,QAmBN1G,EAnBM,OAoBZ2P,GAAa3P,GApBD,4CAAH,sDAuBX,OACE,sBAAK4G,UAAU,mDAAf,UACE,eAAC0E,EAAA,EAAD,YACa,YAATmC,GAA+B,iBAATA,IAAwC,OAAZK,GAClD,cAACsD,EAAA,EAAD,UACE,sBAAKxK,UAAU,2CAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,oBACVyK,QAAS,kBAAMxD,GAAmB,IAFpC,UAIE,cAAC,IAAD,CAAiBjH,UAAU,OAAOkE,KAAMwG,MAJ1C,aAOF,oBAAI1K,UAAU,gBAAd,SACe,OAAZkH,EACG,IACiB,KAAjBA,EAAQ/M,MACS,OAAjB+M,EAAQ/M,WACS/C,IAAjB8P,EAAQ/M,KACR,kBACA+M,EAAQ/M,OAEd,qBAAK6F,UAAU,gBAAf,SACE,sBAAMA,UAAU,aAAhB,SAA8BkH,EAAQ/N,YAExC,uBACA,eAACwR,EAAA,EAAD,CAAKrJ,QAAQ,OAAOtB,UAAU,kBAA9B,UACE,cAAC2K,EAAA,EAAIC,KAAL,UACE,cAACD,EAAA,EAAIE,KAAL,CACEC,SAAS,YACTC,OACW,YAATlE,GACS,eAATA,GACS,QAATA,EAEFpF,KAAI,mBAAcyF,EAAQ/N,QAAtB,KAPN,6BAYF,cAACwR,EAAA,EAAIC,KAAL,UACE,cAACD,EAAA,EAAIE,KAAL,CACEC,SAAS,aACTC,OAAiB,iBAATlE,EACRpF,KAAI,mBAAcyF,EAAQ/N,QAAtB,UAHN,kCAaA,YAAT0N,GACC,cAAC2D,EAAA,EAAD,UACE,sBAAKxK,UAAU,4CAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,sBAAMA,UAAU,+BAAhB,yBAGA,uBACEA,UAAU,YACVyK,QAAS,kBAAMpD,GAAwB,IAFzC,UAIE,cAAC,IAAD,CAAiBrH,UAAU,OAAOkE,KAAM8G,MAJ1C,oBAOe,OAAhB1D,GAAwBA,EAAYtG,OAAS,GAC5C,oBAAIhB,UAAU,kCAAd,SACGsH,EAAYjC,KAAI,SAAClO,GAAD,OACf,mBAAWsK,KAAI,sBAAiBtK,GAAhC,SACE,cAAC,EAAD,CAAgBkE,OAAQlE,KADlBA,QAMG,OAAhBmQ,GAA+C,IAAvBA,EAAYtG,QACnC,qBAAKhB,UAAU,4BAAf,SACE,sBAAMA,UAAU,qBAAhB,2CASA,YAAT6G,GACoB,OAAnBW,GACAA,EAAexG,OAAS,GACtB,cAACwJ,EAAA,EAAD,UACE,sBAAKxK,UAAU,4CAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,sBAAMA,UAAU,+BAAhB,+BAIF,oBAAIA,UAAU,uBAAd,SACGwH,EAAenC,KAAI,SAAClO,GAAD,OAClB,gCACE,mBAAGsK,KAAI,eAAUtK,GAAjB,SACE,cAAC,EAAD,CAASgC,QAAShC,MAEpB,cAAC8T,EAAA,EAAD,CACEjL,UAAU,iBACV4F,MAAM,qBAFR,SAImB,OAAhB0B,GACCA,EAAYjC,KAAI,SAAC6F,GAAD,OACd,cAACC,EAAA,EAASP,KAAV,CAAuBH,QAAS,kBAAML,GAAOjT,EAAG+T,IAAhD,SACGA,GADiBA,UAVlB/T,aAsBZ,iBAAT0P,GACkB,OAAjBa,IACAA,GAAa4B,UAAU8B,QACrB,SAACjU,GAAD,OAAQuQ,GAAa5C,YAAYuG,MAAK,SAACH,GAAD,OAAOA,IAAM/T,QACnD6J,OAAS,GACT,cAACwJ,EAAA,EAAD,UACE,sBAAKxK,UAAU,4CAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,sBAAMA,UAAU,+BAAhB,0BAIF,oBAAIA,UAAU,uBAAd,SACG0H,GAAa4B,UACX8B,QACC,SAACjU,GAAD,OAAQuQ,GAAa5C,YAAYuG,MAAK,SAACH,GAAD,OAAOA,IAAM/T,QAEpDkO,KAAI,SAAClO,GAAD,OACH,mBAAWsK,KAAI,eAAUtK,GAAzB,SACE,cAAC,EAAD,CAASgC,QAAShC,KADZA,aASZ,iBAAT0P,GACkB,OAAjBa,IACAA,GAAa6B,eACV6B,QAAO,SAACjU,GAAD,OAAQuQ,GAAa5C,YAAYuG,MAAK,SAACH,GAAD,OAAOA,IAAM/T,QAC1DiU,QAAO,SAACjU,GAAD,OAAQuQ,GAAa4B,UAAU+B,MAAK,SAACH,GAAD,OAAOA,IAAM/T,QACxD6J,OAAS,GACV,cAACwJ,EAAA,EAAD,UACE,sBAAKxK,UAAU,4CAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,sBAAMA,UAAU,+BAAhB,qCAIF,oBAAIA,UAAU,uBAAd,SACG0H,GAAa6B,eACX6B,QACC,SAACjU,GAAD,OAAQuQ,GAAa5C,YAAYuG,MAAK,SAACH,GAAD,OAAOA,IAAM/T,QAEpDiU,QAAO,SAACjU,GAAD,OAAQuQ,GAAa4B,UAAU+B,MAAK,SAACH,GAAD,OAAOA,IAAM/T,QACxDkO,KAAI,SAAClO,GAAD,OACH,mBAAWsK,KAAI,eAAUtK,GAAzB,SACE,cAAC,EAAD,CAASgC,QAAShC,KADZA,aASZ,eAAT0P,GAAwC,OAAfrC,IACxB,cAACgG,EAAA,EAAD,UACE,sBAAKxK,UAAU,4CAAf,UACe,OAAZkH,GACC,sBAAKlH,UAAU,iCAAf,UACE,sBACEA,UAAU,wBACVC,MAAO,CAAEqL,QAAS,UAFpB,UAIE,uBAAMtL,UAAU,uBAAhB,2BACiB,OAEjB,mBACEA,UAAU,cACVyB,KAAI,mBAAcyF,EAAQ/N,QAAtB,KAFN,SAIoB,KAAjB+N,EAAQ/M,MACQ,OAAjB+M,EAAQ/M,WACS/C,IAAjB8P,EAAQ/M,KACJ+M,EAAQ/N,QACR+N,EAAQ/M,UAGhB,sBACE6F,UAAU,oBACVyK,QAAS,kBAAM1C,IAAsB,IAFvC,SAIE,iCACE,cAAC,IAAD,CAAiB/H,UAAU,OAAOkE,KAAMwG,MAD1C,gBAMN,qBAAK1K,UAAU,kBAAf,SACE,oBAAIA,UAAU,+CAAd,SACE,cAAC,EAAD,CAAgB3E,OAAQoL,aAMxB,eAATI,GAAwC,OAAfrC,IACxB,cAACgG,EAAA,EAAD,UACE,qBAAKxK,UAAU,4CAAf,SACE,oBAAIA,UAAU,uBAAd,SACuB,OAApB4H,IACCA,GAAgBvC,KAAI,SAAClO,GAAD,OAClB,mBAAWsK,KAAI,eAAUtK,GAAzB,SACE,cAAC,EAAD,CAASgC,QAAShC,KADZA,YASV,QAAT0P,GACa,OAAZmB,SACsB5Q,IAAtBgR,SACahR,IAAbkR,IACE,cAACkC,EAAA,EAAD,UACE,sBAAKxK,UAAU,4CAAf,UACE,sBAAKA,UAAU,iCAAf,UACyB,OAAtBoI,IAA0C,OAAZlB,GAC7B,sBAAKlH,UAAU,gBAAf,UACE,sBAAMA,UAAU,uBAAhB,0BACA,mBACEA,UAAU,cACVyB,KACc,OAAZyF,GAAA,mBAAgCA,EAAQ/N,QAAxC,KAHJ,SAMoB,KAAjB+N,EAAQ/M,MACQ,OAAjB+M,EAAQ/M,WACS/C,IAAjB8P,EAAQ/M,KACJ+M,EAAQ/N,QACR+N,EAAQ/M,UAIK,OAAtBiO,IACC,sBAAKpI,UAAU,gBAAf,UACE,uBAAMA,UAAU,uBAAhB,2BACiB,OAEjB,mBACEA,UAAU,cACVyB,KACc,OAAZyF,GAAA,sBACekB,GAAkB/M,OADjC,KAHJ,SAOG+M,GAAkBjO,aAK3B,gCACE,oBAAI6F,UAAU,uBAAd,SACE,cAAC,EAAD,CAAS7G,QAASuN,MAEN,OAAb4B,IACC,sBAAKtI,UAAU,mBAAf,UACE,sBAAMA,UAAU,uBAAhB,SACE,6CAEF,mBACEA,UAAU,cACVyB,KAAI,mBAAc6G,GAASnP,QAAvB,UAFN,SAIqB,KAAlBmP,GAASnO,MACQ,OAAlBmO,GAASnO,WACS/C,IAAlBkR,GAASnO,KACLmO,GAASnP,QACTmP,GAASnO,UAIM,OAAxB6N,GAAQ5N,aAAgD,KAAxB4N,GAAQ5N,aACvC,8BACE,mBAAG4F,UAAU,8BAAb,SACE,4BAAIgI,GAAQ5N,kBAKhB,sBAAK4F,UAAU,uBAAf,UACE,sBAAMA,UAAU,iBAAhB,SACE,kDAFJ,OAKoB,OAAjBgJ,IACC,sBACEhJ,UAAU,oBACVyK,QAASJ,GAFX,8BAOgB,OAAjBrB,IACC,mBAAGhJ,UAAU,sBAAsByB,KAAMuH,GAAcvI,OAAO,SAAS8K,IAAI,aAA3E,6BAWN,QAAT1E,GAA8B,OAAZmB,SAA0C5Q,IAAtBgR,IACrC,cAACoC,EAAA,EAAD,UACE,sBAAKxK,UAAU,4CAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,sBAAMA,UAAU,+BAAhB,4BAIF,qCACe5I,IAAZoR,IAAqC,OAAZA,IACxB,sBAAKxI,UAAU,mBAAf,UACG,IACD,0CACA,8BACE,mBACEA,UAAU,cACVyB,KACE,6CACA+G,GAAQgD,KAEVD,IAAI,aACJ9K,OAAO,SAPT,2BAUK,IAXP,6CAY4C,uBAZ5C,gDAiBSrJ,IAAZoR,IACa,OAAZA,IACc,OAAdM,IACE,sBAAK9I,UAAU,qBAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,eAAC6F,EAAA,EAAKzF,MAAN,WACE,cAACyF,EAAA,EAAKxF,MAAN,UACE,wDAEF,cAACwF,EAAA,EAAKvF,QAAN,CACEC,KAAK,OACLO,MAAO4H,GACPlI,SAAU,SAAC1B,GACLA,EAAE2B,OAAOK,MAAMG,MAAM,aACvB0H,GAAe7J,EAAE2B,OAAOK,QAG5Bb,MAAO,CAAEoB,UAAW,UACpBV,UAAgC,KAArBiI,KAEZA,IACC,8BACE,cAAC/C,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAArB,SACG4I,OAIP,cAAC/C,EAAA,EAAKhF,KAAN,CAAWb,UAAU,aAArB,8EAMJ,qBAAKA,UAAU,kBAAf,SACE,cAAC+F,EAAA,EAAD,CACE/F,UAAU,iCACVC,MAAO,CAAEtB,MAAO,QAChB4C,SAA+B,KAArBqH,GACV6B,QAASH,GAJX,qCAWO,OAAdxB,SAA0C1R,IAApB0R,GAAUjM,OAC/B,sBAAKmD,UAAU,mBAAf,UACG,IACD,wDACA,gDACkB,IAChB,mBACEA,UAAU,cACVyB,KACE,6CACAqH,GAAU0C,KAEZD,IAAI,aACJ9K,OAAO,SAPT,SASGqI,GAAU0C,OAEb,uBAbF,wEAmBW,OAAd1C,SAA0C1R,IAApB0R,GAAUjM,OAC/B,sBAAKoD,MAAO,CAAEoB,UAAW,UAAYrB,UAAU,OAA/C,UACG,IACD,qDACA,yFAEE,uBAFF,kEAYd,eAACwF,EAAA,EAAD,CACEnH,KAAK,KACLoH,UAAQ,EACR/D,KAAMsF,EACNrF,OAAQ,kBAAMsF,GAAmB,IACjCwE,UAAW,kBAAMrC,GAAmB/F,QAAQqI,SAL9C,UAOE,cAAClG,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,EAAA,EAAMxB,MAAP,6BAEF,cAACwB,EAAA,EAAMzB,KAAP,UACE,eAAC8B,EAAA,EAAD,CAAM1F,SAAUuJ,GAAhB,UACE,eAAC7D,EAAA,EAAKzF,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC6F,EAAA,EAAKxF,MAAN,sDACA,cAACwF,EAAA,EAAKvF,QAAN,CACEC,KAAK,OACLO,MAAOoI,GACPnI,YAAY,oBACZP,SAAU,SAAC1B,GAAD,OAAOqK,GAAmBrK,EAAE2B,OAAOK,QAC7CF,QAA6B,KAApBsI,IAA0BA,GAAgBlI,QAAU,GAC7DL,UACsB,KAApBuI,IAA0BA,GAAgBlI,OAAS,GAErD0C,IAAK0F,KAENF,GAAgBlI,OAAS,IACxB,8BACE,cAAC6E,EAAA,EAAKhF,KAAN,CAAWb,UAAU,cAArB,gCAKN,qBAAKC,MAAO,CAAEoB,UAAW,UAAzB,SACE,cAAC0E,EAAA,EAAD,CACE/F,UAAU,8BACVsB,QAAQ,UACRf,KAAK,SAHP,iDAYR,cAACoL,EAAA,EAAD,CACEjK,KAAMxD,GACNyD,OAAQ,kBAAMxD,IAAiB,MAGvB,YAAT0I,GACC,cAAC,EAAD,CACEjB,MAAM,wBACNlE,KAAM0F,EACN7M,MAAOiM,EACP7E,OAAQ,kBAAM0F,GAAwB,IACtClH,SAAU+J,KAIJ,eAATrD,GAAwC,OAAfrC,IACxB,cAACoH,EAAD,CACEhG,MAAM,kBACNlE,KAAMoG,GACNzM,OAAQmJ,GAAWnJ,OACnBsG,OAAQ,kBAAMoG,IAAsB,IACpC5H,SAAUgK,S,oCCvjBL0B,MA9Tf,WACE,IAAMlF,EAAWC,cACbC,EAAOF,EAASG,SAASnK,MAAM,KAAKmP,MACxCjF,EAAO,CAAC,MAAO,WAAY,MAAO,UAAUkF,SAASlF,GACjDA,EACA,WAGJ,MAA4B9J,IAAMC,SAAS,IAA3C,mBAAO/B,EAAP,KAAe+Q,EAAf,KACA,EAA0CjP,IAAMC,SAAS,MAAzD,mBAAOiP,EAAP,KAAsBC,EAAtB,KACA,EAAkDnP,IAAMC,SAAS,MAAjE,mBAAOmP,EAAP,KAA0BC,EAA1B,KACA,EAAoCrP,IAAMC,SAAS,MAAnD,mBAAOqP,EAAP,KAAmBC,EAAnB,KAGA,EAA4CvP,IAAMC,SAAS,MAA3D,mBAAOuP,EAAP,KAAuBC,EAAvB,KACA,EAA8BzP,IAAMC,SAAS,MAA7C,mBAAOyP,EAAP,KAAgBC,EAAhB,KACA,EAAoC3P,IAAMC,UAAS,GAAnD,mBAAO2P,EAAP,KAAmBC,EAAnB,KACA,EAAkC7P,IAAMC,SAAS,gBAAjD,mBAAO6P,EAAP,KAAkBC,EAAlB,KAEA,GAA8C/P,IAAMC,UAAS,GAA7D,qBAAO+P,GAAP,MAAwBC,GAAxB,MAEAjQ,IAAMqB,WAAU,WACd,sBAAC,kCAAAlG,EAAA,yDACc,aAAT2O,EADL,gCAEmB9K,cAFnB,OAESkR,EAFT,OAGGT,EAAkBS,EAAE/H,SAHvB,0BAIqB,QAAT2B,EAJZ,kCAKmB7K,cALnB,QAKSiR,EALT,OAMGT,EAAkBS,EAAE/H,SANvB,2BAOqB,aAAT2B,EAPZ,kCAQmB5K,cARnB,QAQSgR,EART,OASGT,EAAkBS,EAAE/H,SATvB,2BAUqB,QAAT2B,EAVZ,kCAWoB3L,YAAiB,CAAEC,SAAU,OAXjD,SAWS8R,EAXT,OAW0D/H,SACjDlE,OAAS,KACb4L,GAAc,GAEhBF,EAAWO,GAfd,2BAgBqB,WAATpG,EAhBZ,wBAiBGmF,EAAU,IAAIkB,gBAAgBvG,EAAS1L,QAAQ2G,IAAI,UAjBtD,UAkBSuL,GAAsB,QAlB/B,2CAAD,KAqBC,IAEH,IAAMC,GAAQ,uCAAG,WAAOtO,GAAP,SAAA5G,EAAA,sDACf4G,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAEQ,KAAlBjE,EAAOoS,QACTlO,OAAOwH,SAAS2G,OAAhB,gCAAgDrS,EAAOoS,SAN1C,2CAAH,sDAURF,GAAqB,uCAAG,WAAOI,GAAP,eAAArV,EAAA,yDAEtB+C,EAAS,IAAIiS,gBAAgBvG,EAAS1L,QAAQ2G,IAAI,SAExDsK,EAAiBqB,GAED,gBAAZA,GAAmD,OAAtBpB,EANL,4BAO1BC,EAP0B,SAQjB7Q,YAAwB,CAAEN,OAAQA,IARjB,mBAQ4BiK,SAR5B,wBAWZ,SAAZqI,GAAqC,OAAflB,EAXE,6BAY1BC,EAZ0B,UAYLtR,YAAiB,CAAEC,OAAQA,IAZtB,oBAYiCiK,SAZjC,0DAAH,sDAgBrBsI,GAAa,uCAAG,WAAO1C,EAAU2C,GAAjB,yBAAAvV,EAAA,2DACK4S,EAASnO,MAAM,KADpB,mBACb/B,EADa,KACRC,EADQ,KAEpBiS,EAAaW,EAAMhN,OAAOiN,WAE1Bd,GAAc,GACF,eAARhS,EALgB,iCAMDM,YAAiB,CAAEC,SAAU,OAN5B,QAMZ8R,EANY,OAMqC/H,SACjDlE,OAAS,KACb4L,GAAc,GAEhBF,EAAWO,GACXD,IAAmB,GAXD,yCAaFrS,YAAS,CACvBC,IAAKA,EACLC,UAAWA,EACXE,MAAO,IACPD,OAAQ,IAjBQ,QAaZmS,EAbY,OAmBlBP,EACEO,EAAE/H,QAAQG,KAAI,SAAClO,GACb,MAAO,CACLgC,QAAShC,OAIf6V,IAAmB,GA1BD,4CAAH,wDA8BbW,GAAU,uCAAG,4BAAAzV,EAAA,sEAETgD,YAAiB,CAAEC,SAAUsR,EAAQA,EAAQzL,OAAS,GAAG4M,KAFhD,QACXX,EADW,OAGf/H,SACIlE,OAAS,KACb4L,GAAc,GAEhBF,EAAWD,EAAQoB,OAAOZ,IAPT,2CAAH,qDAUhB,OACE,sBAAKjN,UAAU,qBAAf,UACE,sBACEA,UAAU,qDACVC,MAAO,CAAEC,SAAU,QAASvB,MAAO,QAFrC,UAIE,yCACA,cAACkH,EAAA,EAAD,CAAM1F,SAAUiN,GAAhB,SACE,eAACU,EAAA,EAAD,CAAY9N,UAAU,OAAtB,UACE,cAAC8N,EAAA,EAAWjN,KAAZ,CAAiB+M,GAAG,eAApB,SACE,cAAC,IAAD,CAAiB1J,KAAM6J,QAEb,OAAX9S,GACC,cAAC+S,EAAA,EAAD,CACEhO,UAAU,aACVe,YAAa,qCACbD,MAAO7F,EACPuF,SAAU,SAAC1B,GACLA,EAAE2B,OAAOK,MAAME,QAAU,IAC3BgL,EAAUlN,EAAE2B,OAAOK,UAKf,KAAX7F,GACC,cAAC8K,EAAA,EAAD,CAAQzE,QAAQ,UAAUf,KAAK,SAA/B,SACE,cAAC,IAAD,CAAiB2D,KAAM+J,gBAMvB,WAATpH,GACC,eAACqH,EAAA,EAAIxJ,UAAL,CACEkJ,GAAG,oBACHO,UAAWlC,EACXmC,SAAUjB,GAHZ,UAKE,eAAC3C,EAAA,EAAD,WACE,eAACG,EAAA,EAAD,CAAKrJ,QAAQ,OAAOtB,UAAU,uBAA9B,UACE,cAAC2K,EAAA,EAAIC,KAAL,CAAU5K,UAAU,UAApB,SACE,eAAC2K,EAAA,EAAIE,KAAL,CAAUC,SAAS,OAAnB,UACE,cAAC,IAAD,CAAiB5G,KAAMS,IAAQ3E,UAAU,SAD3C,YAKF,cAAC2K,EAAA,EAAIC,KAAL,CAAU5K,UAAU,UAApB,SACE,eAAC2K,EAAA,EAAIE,KAAL,CAAUC,SAAS,cAAnB,UACE,cAAC,IAAD,CAAiB5G,KAAMmK,IAAQrO,UAAU,SAD3C,sBAMJ,oBAAIA,UAAU,oBAEhB,cAACwK,EAAA,EAAD,UACE,eAAC0D,EAAA,EAAII,QAAL,WACE,cAACJ,EAAA,EAAIK,KAAL,CAAUzD,SAAS,OAAnB,SACE,qBAAI9K,UAAU,uBAAd,UACkB,OAAfqM,GACC,qBAAKrM,UAAU,kBAAf,SACE,cAACwO,EAAA,EAAD,CAASxO,UAAU,UAAUwB,UAAU,aAG3B,OAAf6K,GACCA,EAAWhH,KAAI,SAAClO,GAAD,OACb,mBAAmBsK,KAAI,eAAUtK,GAAjC,SACE,cAAC,EAAD,CAASgC,QAAShC,KADZA,EAAEgC,YAIE,OAAfkT,GAA6C,IAAtBA,EAAWrL,QACjC,qBAAKhB,UAAU,kBAAf,SACE,mBAAGA,UAAU,qBAAqBwB,UAAU,SAA5C,qCAOR,cAAC0M,EAAA,EAAIK,KAAL,CAAUzD,SAAS,cAAnB,SACE,qBAAI9K,UAAU,kCAAd,UACyB,OAAtBmM,GACC,qBAAKnM,UAAU,kBAAf,SACE,cAACwO,EAAA,EAAD,CAASxO,UAAU,UAAUwB,UAAU,aAGpB,OAAtB2K,GACCA,EAAkB9G,KAAI,SAAClO,GAAD,OACpB,mBAAWsK,KAAI,sBAAiBtK,GAAhC,SACE,cAAC,EAAD,CAAgBkE,OAAQlE,KADlBA,MAIW,OAAtBgV,GAC8B,IAA7BA,EAAkBnL,QAChB,qBAAKhB,UAAU,kBAAf,SACE,mBAAGA,UAAU,qBAAqBwB,UAAU,SAA5C,mDAWjB,CAAC,WAAY,MAAO,WAAY,OAAOuK,SAASlF,IAC/C,eAACqH,EAAA,EAAIxJ,UAAL,CAAekJ,GAAG,oBAAoBa,iBAAiB,QAAvD,UACE,eAACjE,EAAA,EAAD,WACE,eAACG,EAAA,EAAD,CAAKrJ,QAAQ,OAAOtB,UAAU,uBAA9B,UACE,cAAC2K,EAAA,EAAIC,KAAL,CAAU5K,UAAU,sBAAsBC,MAAO,CAAEtB,MAAO,QAA1D,SACE,eAACgM,EAAA,EAAIE,KAAL,CAAUpJ,KAAK,YAAYsJ,OAAiB,aAATlE,EAAnC,UACE,cAAC,IAAD,CAAiB3C,KAAMmK,IAAQrO,UAAU,SAD3C,gBAKF,cAAC2K,EAAA,EAAIC,KAAL,CAAU5K,UAAU,cAAcC,MAAO,CAAEtB,MAAO,QAAlD,SACE,eAACgM,EAAA,EAAIE,KAAL,CAAUpJ,KAAK,eAAesJ,OAAiB,QAATlE,EAAtC,UACE,cAAC,IAAD,CAAiB3C,KAAMwK,IAAQ1O,UAAU,SAD3C,WAKF,cAAC2K,EAAA,EAAIC,KAAL,CAAU5K,UAAU,cAAcC,MAAO,CAAEtB,MAAO,QAAlD,SACE,eAACgM,EAAA,EAAIE,KAAL,CAAUpJ,KAAK,oBAAoBsJ,OAAiB,aAATlE,EAA3C,UACE,cAAC,IAAD,CAAiB3C,KAAMyK,IAAO3O,UAAU,SAD1C,gBAKF,cAAC2K,EAAA,EAAIC,KAAL,CAAU5K,UAAU,sBAAsBC,MAAO,CAAEtB,MAAO,QAA1D,SACE,eAACgM,EAAA,EAAIE,KAAL,CAAUpJ,KAAK,eAAesJ,OAAiB,QAATlE,EAAtC,UACE,cAAC,IAAD,CAAiB3C,KAAMS,IAAQ3E,UAAU,SAD3C,mBAMJ,oBAAIA,UAAU,oBAEhB,eAACwK,EAAA,EAAD,WACG,CAAC,WAAY,MAAO,YAAYuB,SAASlF,IACrB,OAAnB0F,GACE,cAAC2B,EAAA,EAAII,QAAL,UACE,oBAAItO,UAAU,kCAAd,SACsB,OAAnBuM,GACCA,EAAelH,KAAI,SAAClO,GAAD,OACjB,mBAAWsK,KAAI,sBAAiBtK,GAAhC,SACE,cAAC,EAAD,CAAgBkE,OAAQlE,KADlBA,UAOV,QAAT0P,GACC,eAACqH,EAAA,EAAII,QAAL,WACE,eAACnD,EAAA,EAAD,CACEiD,SAAUZ,GACVvN,MAAO,CAAEoB,UAAW,UAFtB,UAIE,cAAC8J,EAAA,EAASyD,OAAV,CAAiB5O,UAAU,YAA3B,SACG6M,IAEH,eAAC1B,EAAA,EAAS0D,KAAV,WACE,cAAC1D,EAAA,EAASP,KAAV,CAAeE,SAAS,kBAAxB,0BAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,mBAAxB,2BAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,aAAxB,2BAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,YAAxB,0BAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,kBAAxB,iCAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,iBAAxB,gCAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,mBAAxB,kCAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,kBAAxB,uCAKJ,qBAAI9K,UAAU,uBAAd,UACe,OAAZyM,GACCA,EAAQpH,KAAI,SAAClO,GAAD,OACV,mBAAmBsK,KAAI,eAAUtK,EAAEgC,SAAnC,SACE,cAAC,EAAD,CAASA,QAAShC,EAAEgC,WADdhC,EAAEgC,YAIb4T,IAA+B,OAAZN,IAAqBE,GACvC,cAAC5G,EAAA,EAAD,CAAQ0E,QAASkD,GAAjB,uC,SCpVL,MAA0B,sC,yBC6G1BmB,MAjGf,WACE,MAA4B/R,IAAMC,SAAS,IAA3C,mBAAO/B,EAAP,KAAe+Q,EAAf,KACMoB,EAAQ,uCAAG,WAAOtO,GAAP,SAAA5G,EAAA,sDACf4G,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAEQ,KAAlBjE,EAAOoS,QACTlO,OAAOwH,SAAS2G,OAAhB,gCAAgDrS,EAAOoS,SAN1C,2CAAH,sDAUd,OACE,8BACE,wBAAQrN,UAAU,YAAY4N,GAAG,OAAjC,SACE,qBAAK5N,UAAU,sBAAf,SACE,eAAC0E,EAAA,EAAD,CAAW1E,UAAU,cAArB,UACE,cAACwK,EAAA,EAAD,UACE,cAACuE,EAAA,EAAD,UACE,qBAAK/O,UAAU,mBAAf,SACE,qBAAKA,UAAU,oBAIrB,eAACwK,EAAA,EAAD,WACE,oBAAIxK,UAAU,cAAd,oCACA,mBAAGA,UAAU,OAAb,4CAEF,cAACwK,EAAA,EAAD,CAAKxK,UAAU,kBAAf,SACE,cAAC6F,EAAA,EAAD,CAAM7F,UAAU,oBAAoBG,SAAUiN,EAAUnN,MAAO,CAACC,SAAU,SAA1E,SACE,eAAC4N,EAAA,EAAD,WACE,cAACA,EAAA,EAAWjN,KAAZ,CAAiB+M,GAAG,eAApB,SACE,cAAC,IAAD,CAAiB1J,KAAM6J,QAEb,OAAX9S,GACC,cAAC+S,EAAA,EAAD,CACEgB,WAAW,EACXhP,UAAU,aACVe,YAAa,qCACbD,MAAO7F,EACPuF,SAAU,SAAC1B,GACLA,EAAE2B,OAAOK,MAAME,QAAU,IAC3BgL,EAAUlN,EAAE2B,OAAOK,UAKf,KAAX7F,GACC,cAAC8K,EAAA,EAAD,CAAQzE,QAAQ,UAAUf,KAAK,SAA/B,SACE,cAAC,IAAD,CAAiB2D,KAAM+J,eAMjC,qBAAKjO,UAAU,YAAf,SACE,cAACiP,EAAA,EAAD,MAEF,eAACzE,EAAA,EAAD,CAAKxK,UAAU,YAAf,UACE,cAAC+O,EAAA,EAAD,UACE,sBAAK/O,UAAU,uBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAiBA,UAAU,SAASkE,KAAMgL,QAE5C,iDACA,4DAA+B,UAA/B,oBAGJ,cAACH,EAAA,EAAD,UACE,sBAAK/O,UAAU,uBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CACEA,UAAU,SACVkE,KAAMiL,QAGV,kDACA,oFAGJ,cAACJ,EAAA,EAAD,UACE,sBAAK/O,UAAU,uBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAiBA,UAAU,SAASkE,KAAMkL,QAE5C,0DACA,sGCiDHC,OAzHf,WACE,MAAgCtS,IAAMC,SAAS,MAA/C,mBAAO2J,EAAP,KAAiB2I,EAAjB,KACAvS,IAAMqB,WAAU,WACdkR,EAAYnQ,OAAOwH,SAASG,YAC3B,IACH/J,IAAMqB,WAAU,cAAU,CAACuI,IAE3B,MAAsC5J,IAAMC,SAAS,IAArD,mBAAOuS,EAAP,KAAoBC,EAApB,KACA,EAA8CzS,IAAMC,SAAS,MAA7D,mBAAOyS,EAAP,KAAwBC,EAAxB,KAEMtC,EAAQ,uCAAG,WAAOtO,GAAP,SAAA5G,EAAA,sDACf4G,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAEa,KAAvBqQ,EAAYlC,QACdlO,OAAOwH,SAAS2G,OAAhB,gCAAgDiC,EAAYlC,SAN/C,2CAAH,sDAUd,OACE,sBAAKrN,UAAU,MAAf,UACE,cAAC2P,EAAA,EAAD,CAAQ3P,UAAU,SAAS4P,GAAG,OAAOC,OAAO,KAAKC,OAAO,MAAxD,SACE,eAACpL,EAAA,EAAD,WACE,eAACiL,EAAA,EAAOI,MAAR,CAActO,KAAK,IAAIzB,UAAU,kCAAjC,UACE,qBAAKgQ,IAAI,GAAGnM,IAAKoM,IACjB,6CACA,sBAAMjQ,UAAU,wBAAhB,8BAEF,cAAC2P,EAAA,EAAOf,OAAR,CAAe,gBAAc,qBAC7B,eAACe,EAAA,EAAOO,SAAR,WACE,eAACvF,EAAA,EAAD,CACE3K,UAAU,UACVC,MAAO,CAAEkQ,aAAc,SAAU9O,UAAW,UAF9C,UAIE,cAACsJ,EAAA,EAAIE,KAAL,CAAUpJ,KAAK,WAAf,qBACA,cAACkJ,EAAA,EAAIE,KAAL,CAAUpJ,KAAK,UAAf,uBAEF,cAACoE,EAAA,EAAD,CAAM7F,UAAU,SAASG,SAAUiN,EAAnC,SACE,eAACU,EAAA,EAAD,CACE7N,MAAO,CACLmQ,SAAU,SAFd,UAKE,cAACpC,EAAA,EAAD,CACEhO,UAAU,aACVe,YAAY,qCACZD,MAAOyO,EACP/O,SAAU,SAAC1B,GACLA,EAAE2B,OAAOK,MAAME,QAAU,IAC3BwO,EAAe1Q,EAAE2B,OAAOK,UAIb,KAAhByO,GACC,cAACxJ,EAAA,EAAD,CAAQzE,QAAQ,YAAYf,KAAK,SAAjC,SACE,cAAC,IAAD,CAAiB2D,KAAMmM,qBASrC,yBAASrQ,UAAU,kBAAnB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsQ,OAAK,EAACC,QAAS,cAAC,EAAD,MACtB,eAAC,IAAD,CAAOC,KAAK,WAAZ,UACE,cAAC,IAAD,CAAOA,KAAK,kBAAkBD,QAAS,cAAC,EAAD,MACvC,cAAC,IAAD,CACEC,KAAK,wBACLD,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CAAOC,KAAK,kBAAkBD,QAAS,cAAC,EAAD,SAEzC,cAAC,IAAD,CACEC,KAAK,gCACLD,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CAAOC,KAAK,mBAAmBD,QAAS,cAAC,EAAD,MACxC,eAAC,IAAD,CAAOC,KAAK,WAAWD,QAAS,cAAC,EAAD,IAAhC,UACE,cAAC,IAAD,CAAOC,KAAK,MAAMD,QAAS,cAAC,EAAD,MAC3B,cAAC,IAAD,CAAOC,KAAK,WAAWD,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOC,KAAK,MAAMD,QAAS,cAAC,EAAD,MAC3B,cAAC,IAAD,CAAOC,KAAK,SAASD,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CAAOC,KAAK,UAAUD,QAAS,cAACzT,EAAA,EAAD,MAC/B,cAAC,IAAD,CAAOyT,QAAS,cAAC,IAAD,CAAUE,GAAG,eAInC,kCACE,qBAAKzQ,UAAU,2DAAf,SACE,oFAIJ,eAACwF,EAAA,EAAD,CACEnH,KAAK,KACLoH,UAAQ,EACR/D,KAAM+N,EACN9N,OAAQ,kBAAM+N,GAAmB,IAJnC,UAME,cAAClK,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,EAAA,EAAMxB,MAAP,sCAEF,cAACwB,EAAA,EAAMzB,KAAP,UACE,eAACW,EAAA,EAAD,CAAW1E,UAAU,mBAArB,UACE,kDACA,cAAC+F,EAAA,EAAD,CAAQ/F,UAAU,OAAOyK,QAAS,kBAAMiF,GAAmB,IAA3D,+BCrIZgB,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,U,gCCN1B,2BAgBe5B,IAZf,WACE,OACE,sBAAKjP,UAAU,iBAAf,UACE,qBAAKA,UAAU,kCACf,qBAAKA,UAAU,gCAAf,SACE,cAAC,IAAD,CAAiBkE,KAAM4M,QAEzB,qBAAK9Q,UAAU,uC,gCCXrB,4CA+Be2L,IA5Bf,SAAwBtJ,GACtB,OACE,eAAC,IAAD,CACEhE,KAAK,KACLoH,UAAQ,EACR/D,KAAMW,EAAMX,KACZC,OAAQU,EAAMV,OAJhB,UAME,cAAC,IAAM+D,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAM3B,MAAP,wCAIF,cAAC,IAAMD,KAAP,UACE,eAAC,IAAD,CAAW/D,UAAU,mBAArB,UACE,8EAAgD,uBAAhD,sCACA,mBAAGyB,KAAK,gCAAgChB,OAAO,SAAS8K,IAAI,aAA5D,SACE,cAAC,IAAD,CAAQvL,UAAU,OAAlB,iCAEF,mBAAGyB,KAAK,gCAAgChB,OAAO,SAAS8K,IAAI,aAA5D,SACE,cAAC,IAAD,CAAQvL,UAAU,OAAlB,6C","file":"static/js/main.e90e773a.chunk.js","sourcesContent":["/* global BigInt */\n\nimport Web3Utils from \"web3-utils\";\n\nconst toSatoshi = (x) => {\n  if (x === null || x === undefined || typeof x !== \"string\" || x === \"\") {\n    throw new Error(\"Expected string input\");\n  }\n  return (BigInt(Web3Utils.toWei(x, \"gwei\")) / 10n).toString();\n};\n\nconst toLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = BigInt(x).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst satoshiToLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = (BigInt(x) / 100000000n).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst post = async (link, data) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 3000);\n  return (\n    await fetch(link, {\n      withCredentials: true,\n      method: \"POST\",\n      signal: controller.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n  ).json();\n};\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 3000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nexport { toSatoshi, toLocaleString, satoshiToLocaleString, post, get };\n","import { post } from \"./utils\";\n\nconst API_URL = \"https://nftp0.dingocoin.io\";\n\nconst getBusy = async (data) => {\n  const result = await post(`${API_URL}/nft/getBusy`, {\n    address: data.address,\n  });\n  if (result === null) {\n    return null;\n  } else {\n    return result.busy;\n  }\n};\n\nconst getContent = (data) => {\n  return post(`${API_URL}/nft/getContent`, {\n    address: data.address,\n    timestamp: data.timestamp,\n    signature: data.signature,\n  });\n};\n\nconst getBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/getBuyTransaction`, {\n    address: data.address,\n    price: data.price,\n  });\n};\n\nconst sendBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/sendBuyTransaction`, {\n    transaction: data.transaction,\n  });\n};\n\nconst getListTransaction = (data) => {\n  return post(`${API_URL}/nft/getListTransaction`, {\n    contentHash: data.contentHash,\n    price: data.price,\n    royalty: data.royalty,\n  });\n};\n\nconst sendListTransaction = (data) => {\n  return post(`${API_URL}/nft/sendListTransaction`, {\n    content: data.content,\n    preview: data.preview,\n    name: data.name,\n    description: data.description,\n    tags: data.tags,\n    transaction: data.transaction,\n  });\n};\n\nconst updateProfile = (data) => {\n  return post(`${API_URL}/profile/update`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    name: data.name,\n    signature: data.signature,\n  });\n};\n\nconst getProfileCreatedNfts = (data) => {\n  return post(`${API_URL}/profile/getCreatedNfts`, {\n    owner: data.owner\n  });\n};\n\nconst getProfileOwnedNfts = (data) => {\n  return post(`${API_URL}/profile/getOwnedNfts`, {\n    owner: data.owner\n  });\n};\n\nconst getProfileHistoricalNfts = (data) => {\n  return post(`${API_URL}/profile/getHistoricalNfts`, {\n    owner: data.owner\n  });\n};\n\nconst queryNft = (data) => {\n  return post(`${API_URL}/nft/query`, {\n    key: data.key,\n    direction: data.direction,\n    offset: data.offset,\n    limit: data.limit,\n  });\n};\n\nconst queryNftBySearch = (data) => {\n  return post(`${API_URL}/nft/queryBySearch`, {\n    search: data.search\n  });\n};\n\nconst queryNftByNewest = (data) => {\n  return post(`${API_URL}/nft/queryByNewest`, {\n    beforeId: data.beforeId\n  });\n};\n\nconst getCollectionStats = (data) => {\n  return post(`${API_URL}/collection/getStats`, {\n    handle: data.handle,\n  });\n};\n\nconst queryCollectionByOwner = (data) => {\n  return post(`${API_URL}/collection/queryByOwner`, {\n    owner: data.owner,\n  });\n};\n\nconst queryCollectionBySearch = (data) => {\n  return post(`${API_URL}/collection/queryBySearch`, {\n    search: data.search\n  });\n};\n\nconst queryUnassignedNftsByOwner = (data) => {\n  return post(`${API_URL}/collection/queryUnassignedNftsByOwner`, {\n    owner: data.owner,\n  });\n};\n\nconst createCollection = (data) => {\n  return post(`${API_URL}/collection/create`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    handle: data.handle,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    description: data.description,\n    signature: data.signature,\n  });\n};\n\nconst updateCollection = (data) => {\n  return post(`${API_URL}/collection/update`, {\n    timestamp: data.timestamp,\n    handle: data.handle,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    description: data.description,\n    signature: data.signature,\n  });\n};\n\nconst setCollectionItem = (data) => {\n  return post(`${API_URL}/collection/setItem`, {\n    timestamp: data.timestamp,\n    address: data.address,\n    handle: data.handle,\n    signature: data.signature,\n  });\n};\n\nconst getCollectionItems = (data) => {\n  return post(`${API_URL}/collection/getItems`, {\n    handle: data.handle,\n  });\n};\n\nconst getItemCollection = (data) => {\n  return post(`${API_URL}/collection/getItemCollection`, {\n    address: data.address,\n  });\n};\n\nconst queryCollectionByTradeCountScaled = () => {\n  return post(`${API_URL}/collection/queryByTradeCountScaled`, {});\n};\n\nconst queryCollectionByTradeVolumeScaled = () => {\n  return post(`${API_URL}/collection/queryByTradeVolumeScaled`, {});\n};\n\nconst queryCollectionByTradeVolume = () => {\n  return post(`${API_URL}/collection/queryByTradeVolume`, {});\n};\n\nconst queryCollectionByValuable = () => {\n  return post(`${API_URL}/collection/queryByValuable`, {});\n};\n\nexport {\n  getBusy,\n  getContent,\n  getBuyTransaction,\n  sendBuyTransaction,\n  getListTransaction,\n  sendListTransaction,\n  updateProfile,\n  getProfileCreatedNfts,\n  getProfileOwnedNfts,\n  getProfileHistoricalNfts,\n  queryNft,\n  queryNftBySearch,\n  queryNftByNewest,\n  createCollection,\n  updateCollection,\n  getCollectionStats,\n  queryCollectionByOwner,\n  queryCollectionBySearch,\n  queryUnassignedNftsByOwner,\n  setCollectionItem,\n  getCollectionItems,\n  getItemCollection,\n  queryCollectionByTradeCountScaled,\n  queryCollectionByTradeVolumeScaled,\n  queryCollectionByTradeVolume,\n  queryCollectionByValuable\n};\n","import { Container, Row, Button, Col, Form, Spinner } from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport isPng from \"is-png\";\nimport sizeOf from \"buffer-image-size\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport { sendListTransaction, getListTransaction } from \"./api\";\nimport { toSatoshi } from \"./utils\";\n\nconst MAX_CONTENT_SIZE = 10 * 1e6; // 1 MB.\nconst MAX_PREVIEW_SIZE = 100 * 1e5; // 1 kB.\n\nconst toBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(\",\")[1]);\n    reader.onerror = (error) => reject(error);\n  });\n\nfunction CreateController() {\n  const [content, setContent] = React.useState(null);\n  const [contentError, setContentError] = React.useState(\"\");\n  const [listingPrice, setListingPrice] = React.useState(\"1000\");\n  const [royalty, setRoyalty] = React.useState(0);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [preview, setPreview] = React.useState(null);\n  const [previewError, setPreviewError] = React.useState(\"\");\n  const [tags, setTags] = React.useState(\"\");\n\n  const [pending, setPending] = React.useState(false);\n  const [success, setSuccess] = React.useState(null);\n  const [address, setAddress] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  React.useEffect(() => {\n    if (content === null) {\n      setContentError(\"NFT content required\");\n      return;\n    } else if (content.size > MAX_CONTENT_SIZE) {\n      setContentError(\"NFT content size limit exceeded (max 10 MB)\");\n      return;\n    } else {\n      setContentError(\"\");\n    }\n  }, [content]);\n\n  React.useEffect(() => {\n    (async () => {\n      if (preview !== null) {\n        const f = Buffer.from(await toBase64(preview), \"base64\");\n        if (!isPng(f)) {\n          setPreviewError(\"Cover image must be a PNG\");\n        } else if (preview.size > MAX_PREVIEW_SIZE) {\n          setPreviewError(\"Cover file size limit exceeded (max 100 KB)\");\n        } else if (sizeOf(f).width !== 256 || sizeOf(f).height !== 256) {\n          setPreviewError(\"Cover image must have dimension 256x256\");\n        } else {\n          setPreviewError(\"\");\n        }\n      } else {\n        setPreviewError(\"Cover image required\");\n      }\n    })();\n  }, [preview]);\n\n  const doSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const getListTransactionResponse = await getListTransaction({\n      // CryptoJS expects inputs to be a utf8 string. So we encode our data\n      // into that.\n      contentHash: Hex.stringify(Sha256(Base64.parse(await toBase64(content)))),\n      price: toSatoshi(listingPrice),\n      royalty: 25 + Math.floor((royalty * 75) / 100),\n    });\n    if (\n      getListTransactionResponse === null ||\n      \"error\" in getListTransactionResponse\n    ) {\n      return;\n    }\n\n    const signed = (\n      await window.dingo.requestSignTransaction(\n        [],\n        getListTransactionResponse.vouts\n      )\n    ).result;\n\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    setPending(true);\n    const sendListTransactionResponse = await sendListTransaction({\n      content: await toBase64(content),\n      preview: preview === null ? null : await toBase64(preview),\n      name: name,\n      description: description,\n      tags: tags,\n      transaction: signed,\n    });\n    if (\n      sendListTransactionResponse === null ||\n      sendListTransactionResponse.error !== undefined\n    ) {\n      setSuccess(false);\n      return;\n    }\n\n    setPending(false);\n    setSuccess(true);\n    setAddress(sendListTransactionResponse.address);\n  };\n\n  return (\n    <div>\n      <Container className=\"App-header\">\n        <Row>\n          <h1 className=\"mt-4\">Create NFT</h1>\n          <CustomDivider />\n        </Row>\n      </Container>\n      <Container style={{ maxWidth: \"900px\" }}>\n        <Row>\n          <Col>\n            {(success === null || success === false) && (\n              <Form onSubmit={doSubmit}>\n                <Form.Group className=\"mb-3 mt-4\">\n                  <Form.Label>\n                    <b>Cover image (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setPreview(e.target.files[0])}\n                    isInvalid={previewError !== null && previewError !== \"\"}\n                    isValid={previewError === \"\"}\n                  />\n                  {previewError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {previewError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    A 256x256 PNG cover image for your NFT (max 100 KB). You\n                    can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Content (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setContent(e.target.files[0])}\n                    isInvalid={contentError !== null && contentError !== \"\"}\n                    isValid={contentError === \"\"}\n                  />\n                  {contentError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {contentError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    The NFT will be locked uniquely to this file (max 10 MB).\n                    You can only use it once. Only the current owner of the NFT\n                    can download this file. It does not have to be the same as\n                    the cover. You can use any file you want, of any type.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Name (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={name}\n                    placeholder=\"Max 40 characters\"\n                    onChange={(e) => setName(e.target.value)}\n                    isValid={name !== \"\" && name.length <= 40}\n                    isInvalid={name !== \"\" && name.length > 40}\n                  />\n                  {name.length > 40 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Name too long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Description (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={description}\n                    placeholder=\"Max 500 characters\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    isValid={description !== \"\" && description.length <= 500}\n                    isInvalid={description !== \"\" && description.length > 500}\n                  />\n                  {description.length > 500 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Description long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Tags (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={tags}\n                    placeholder=\"Max 100 characters; space separated\"\n                    onChange={(e) => setTags(e.target.value)}\n                    isValid={tags !== \"\" && tags.length <= 100}\n                    isInvalid={tags !== \"\" && tags.length > 100}\n                  />\n                  {tags.length > 100 && (\n                    <div>\n                      <Form.Text className=\"input-error\">Tags long</Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3 mt-2\">\n                  <Form.Label>\n                    <b>Listing price (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={listingPrice}\n                    onChange={(e) => {\n                      if (\n                        e.target.value.match(/^[0-9]+$/) &&\n                        parseInt(e.target.value) >= 1\n                      ) {\n                        setListingPrice(e.target.value);\n                      } else {\n                        setListingPrice(\"1000\");\n                      }\n                    }}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Initial selling price for your NFT in DINGO (min. 1 DINGO).\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Creator royalty (*required): </b>\n                    {(2.5 + Math.floor((royalty * 75) / 100) / 10).toFixed(1) +\n                      \"%\"}\n                  </Form.Label>\n                  <Form.Range\n                    value={royalty}\n                    onChange={(e) => setRoyalty(e.target.value)}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Royalty paid to you for every transaction of this NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <div style={{ textAlign: \"center\" }}>\n                  {success === null && pending === false && (\n                    <Button\n                      className=\"popup-button mt-4 px-4\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                      disabled={\n                        content === null ||\n                        contentError !== \"\" ||\n                        (preview !== null && previewError !== \"\")\n                      }\n                    >\n                      Create NFT\n                    </Button>\n                  )}\n                  {success === null && pending === true && (\n                    <div>\n                      <Spinner animation=\"border\" />\n                      <p>\n                        Transaction pending...\n                        <br />\n                        (DO NOT CLOSE THIS PAGE)\n                      </p>\n                    </div>\n                  )}\n                  {success === false && (\n                    <div>\n                      <p>\n                        Transaction failed!\n                        <br />\n                        Please reload this page and try again\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </Form>\n            )}\n            {success === true && (\n              <div style={{ textAlign: \"center\" }}>\n                {\" \"}\n                <h3>NFT Created!</h3>\n                <p>\n                  NFT Address: <b>{address}</b>\n                </p>\n                <div style={{ textAlign: \"center\" }}>\n                  <a href={\"/nft/\" + address}>\n                    <Button className=\"popup-button px-4\" variant=\"primary\">\n                      View NFT ►\n                    </Button>\n                  </a>\n                </div>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n    </div>\n  );\n}\n\nexport default CreateController;\n","const META_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-meta\";\nconst PREVIEW_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-preview\";\nconst STATE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-state\";\nconst PROFILE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-profile\";\nconst COLLECTION_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-collection\";\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 5000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nconst getMeta = async (address) => {\n  const response = await get(`${META_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getPreviewLink = (address) => {\n  return `${PREVIEW_BUCKET}/${address}.png`;\n};\n\nconst getState = async (address) => {\n  const response = await get(`${STATE_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getProfile = async (owner) => {\n  const response = await get(`${PROFILE_BUCKET}/${owner}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getCollection = async (handle) => {\n  const response = await get(`${COLLECTION_BUCKET}/${handle}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nexport { getMeta, getPreviewLink, getState, getProfile, getCollection };\n","import React from \"react\";\nimport { getMeta, getPreviewLink, getState } from \"./storage\";\nimport { Card } from \"react-bootstrap\";\nimport { satoshiToLocaleString } from \"./utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCashRegister,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction NFTCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [name, setName] = React.useState(null);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const meta = await getMeta(props.address);\n        const previewLink = await getPreviewLink(props.address);\n        const state = await getState(props.address);\n\n        setPreviewLink(previewLink);\n        setName(meta === null ? null : meta.name);\n        setStats(state === null ? null : state.stats);\n      }\n    })();\n  }, [props.address, isVisible]);\n\n  return (\n    <Card\n      className=\"nft-card floating-borders floating-borders-press\"\n      ref={domRef}\n    >\n      <div className=\"header-box\">\n        <div className=\"spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n          </div>\n        </div>\n        <Card.Img variant=\"top\" src={previewLink} loading=\"lazy\"></Card.Img>\n      </div>\n      <hr />\n      <Card.Body>\n        <Card.Title className=\"text-start\">\n          {name === null ? \"-\" : name === \"\" ? \"Unnamed NFT\" : name}\n        </Card.Title>\n        <Card.Subtitle className=\"text-start text-muted\">{props.address}</Card.Subtitle>\n        <Card.Text>\n          <span className=\"card-price\">\n            {stats === null ? \"-\" : satoshiToLocaleString(stats.price)}\n          </span>\n          <br />\n          <span className=\"card-price-subtitle\">DINGO</span>\n        </Card.Text>\n      </Card.Body>\n      <hr />\n      <div className=\"card-sub-body text-muted\">\n        <span className=\"align-middle\">\n          <FontAwesomeIcon icon={faCashRegister} />{\" \"}\n          {stats === null ? \"-\" : satoshiToLocaleString(stats.tradeVolume)}\n        </span>\n        &nbsp;&nbsp;&nbsp;\n        <span className=\"align-middle\">\n          <FontAwesomeIcon icon={faExchangeAlt} />{\" \"}\n          {stats === null ? \"-\" : stats.tradeCount}\n        </span>\n      </div>\n    </Card>\n  );\n}\n\nexport default NFTCard;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { getCollection, getPreviewLink } from \"./storage\";\nimport { getCollectionStats } from \"./api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faCashRegister,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { toLocaleString } from \"./utils\";\n\nfunction CollectionCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [collection, setCollection] = React.useState(null);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const collection = await getCollection(props.handle);\n        setCollection(collection);\n\n        if (collection !== null) {\n          setPreviewLink(getPreviewLink(collection.thumbnail));\n\n          const stats = await getCollectionStats({ handle: props.handle });\n          setStats(stats);\n        }\n      }\n    })();\n  }, [isVisible, props.handle]);\n\n  return (\n    <Container className=\"collection-card-holder\" ref={domRef}>\n      {collection === null ||\n        (stats === null && (\n          <div className=\"collection-card d-flex flex-column\">\n            <div className=\"d-flex flex-row my-auto\">\n              <div className=\"spinner mx-auto\">\n                <div\n                  className=\"spinner-border text-primary\"\n                  role=\"status\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {collection !== null && stats !== null && (\n        <div className=\"collection-card d-flex flex-column\">\n          <img className=\"mx-auto mt-4 mb-3\" src={previewLink} />\n          <span className=\"mx-auto title\">\n            {collection !== null && collection.name}\n          </span>\n          <span className=\"truncate text-muted description\">\n            {collection !== null && collection.description}\n          </span>\n          <hr className=\"mt-auto\" />\n          <div className=\"d-flex flex-row text-muted card-sub-body\">\n            <span className=\"ms-auto\">\n              <FontAwesomeIcon icon={faList} />{\" \"}\n              {stats === null ? \"-\" : stats.count}\n            </span>\n            &nbsp;&nbsp;&nbsp;\n            <span>\n              <FontAwesomeIcon icon={faCashRegister} />{\" \"}\n              {stats === null ? \"-\" : toLocaleString(stats.tradeVolume)}\n            </span>\n            &nbsp;&nbsp;&nbsp;\n            <span className=\"me-auto\">\n              <FontAwesomeIcon icon={faExchangeAlt} />{\" \"}\n              {stats === null ? \"-\" : stats.tradeCount}\n            </span>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default CollectionCard;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getMeta } from \"./storage\";\nimport { getProfileCreatedNfts } from \"./api\";\n\nfunction CreateCollectionModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnail, setThumbnail] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const [handle, setHandle] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.owner !== undefined && props.owner !== null) {\n\n        const createdNfts = (await getProfileCreatedNfts({ owner: props.owner })).results.reverse();\n        if (createdNfts.length > 0) {\n          const createdNftNames = await Promise.all(\n            createdNfts.map(async (x) => {\n              return (await getMeta(x)).name;\n            })\n          );\n          setCreatedNfts(createdNfts.map((x, i) => [x, createdNftNames[i]]));\n          setThumbnail(createdNfts[0]);\n        }\n      }\n    })();\n  }, [props.owner]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                thumbnail: thumbnail,\n                name: name,\n                handle: handle,\n                description: description,\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Thumbnail image (*required)</b>\n            </Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isInvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnail}\n                  onChange={(e) => setThumbnail(e.target.value)}\n                >\n                  {createdNfts.map((x) => (\n                    <option key={x[0]} value={x[0]}>\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection name (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name !== \"\" && name.length <= 40}\n              isInvalid={name === \"\" || name.length > 40}\n            />\n            {name === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Name required</Form.Text>\n              </div>\n            )}\n            {name !== \"\" && name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection handle (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={handle}\n              onChange={(e) => setHandle(e.target.value)}\n              isValid={handle !== \"\" && handle.length <= 40}\n              isInvalid={handle === \"\" || handle.length > 40}\n            />\n            {handle === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Handle required</Form.Text>\n              </div>\n            )}\n            {handle !== \"\" && handle.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Handle too long</Form.Text>\n              </div>\n            )}\n            {handle !== \"\" && !handle.match(/^([a-z0-9])+$/) && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Incorrect handle format (only lowercase alphanumeric\n                  characters allowed)\n                </Form.Text>\n              </div>\n            )}\n            <Form.Text className=\"text-muted\">\n              Used for your collection's permalink. You can't change this after\n              creating the collection.\n            </Form.Text>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Collection description (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 500 characters\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              isValid={description !== \"\" && description.length <= 500}\n              isInvalid={description !== \"\" && description.length > 500}\n            />\n            {description !== \"\" && description.length > 500 && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Description too long\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                thumbnail === null ||\n                name === \"\" ||\n                name.length > 40 ||\n                handle === \"\" ||\n                handle.length > 40 ||\n                description.length > 500\n              }\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default CreateCollectionModal;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getProfileCreatedNfts } from \"./api\";\nimport { getMeta, getCollection } from \"./storage\";\n\nfunction EditCollectonModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnailIndex, setThumbnailIndex] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.handle !== undefined && props.handle !== null) {\n        const collection = await getCollection(props.handle);\n        setName(collection.name);\n        setDescription(collection.description);\n\n        const createdNfts = (await getProfileCreatedNfts({ owner: collection.owner })).results.reverse();\n        if (createdNfts.length > 0) {\n          const createdNftNames = await Promise.all(\n            createdNfts.map(async (x) => {\n              return (await getMeta(x)).name;\n            })\n          );\n          setCreatedNfts(createdNfts.map((x, i) => [x, createdNftNames[i]]));\n\n          const currentThumbnailEntry = createdNfts.map((x, i) => [x, i]).find((x) => x[0] === collection.thumbnail);\n          setThumbnailIndex(currentThumbnailEntry[1]);\n        }\n      }\n    })();\n  }, [props.handle]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                thumbnail: createdNfts[thumbnailIndex][0],\n                name: name,\n                handle: props.handle,\n                description: description\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Thumbnail image (*required)</b>\n            </Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isinvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && thumbnailIndex !== null && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnailIndex}\n                  onChange={(e) => setThumbnailIndex(e.target.value)}\n                >\n                  {createdNfts.map((x, i) => (\n                    <option key={i} value={i} >\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection name (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name !== \"\" && name.length <= 40}\n              isInvalid={name === \"\" || name.length > 40}\n            />\n            {name === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Name required</Form.Text>\n              </div>\n            )}\n            {name !== \"\" && name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Collection description (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 500 characters\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              isValid={description !== \"\" && description.length <= 500}\n              isInvalid={description !== \"\" && description.length > 500}\n            />\n            {description !== \"\" && description.length > 500 && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Description too long\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                thumbnailIndex === null ||\n                name === \"\" ||\n                name.length > 40 ||\n                description.length > 500\n              }\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default EditCollectonModal;\n","/* global BigInt */\n\nimport {\n  Modal,\n  Container,\n  Row,\n  Button,\n  Form,\n  Nav,\n  Dropdown,\n  DropdownButton,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport { getMeta, getState, getProfile } from \"./storage\";\nimport { toSatoshi } from \"./utils\";\nimport NFTCard from \"./NFTCard\";\nimport {\n  getContent,\n  updateProfile,\n  getProfileCreatedNfts,\n  getProfileOwnedNfts,\n  getProfileHistoricalNfts,\n  createCollection,\n  updateCollection,\n  queryCollectionByOwner,\n  queryUnassignedNftsByOwner,\n  getBusy,\n  getCollectionItems,\n  setCollectionItem,\n  getItemCollection,\n  getBuyTransaction,\n  sendBuyTransaction,\n} from \"./api\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport CollectionCard from \"./CollectionCard\";\nimport CreateCollectionModal from \"./CreateCollectionModal\";\nimport EditCollectionModal from \"./EditCollectionModal\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { getCollection } from \"./storage\";\nimport { faPlus, faPen } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ProfileController() {\n  const { profileAddress, collectionHandle, nftAddress } = useParams();\n  const location = useLocation();\n  const view =\n    profileAddress !== undefined\n      ? location.pathname.endsWith(\"/owned\")\n        ? \"profileOwned\"\n        : \"profile\"\n      : collectionHandle !== undefined\n      ? \"collection\"\n      : nftAddress !== undefined\n      ? \"nft\"\n      : \"unknown\";\n\n  // Variables always required.\n  const [editProfileShow, setEditProfileShow] = React.useState(null);\n  const [profile, setProfile] = React.useState(null);\n\n  // For profile view.\n  const [createCollectionShow, setCreateCollectionShow] = React.useState(false);\n  const [collections, setCollections] = React.useState(null);\n  const [unassignedList, setUnassignedList] = React.useState(null);\n  const [profileLists, setProfileLists] = React.useState(null);\n\n  // For collection view.\n  const [collection, setCollection] = React.useState(null);\n  const [collectionItems, setCollectionItems] = React.useState(null);\n  const [editCollectionShow, setEditCollectionShow] = React.useState(false);\n\n  // For NFT view.\n  const [nftMeta, setNftMeta] = React.useState(null);\n  const [nftState, setNftState] = React.useState(null);\n  const [nftItemCollection, setNftItemCollection] = React.useState(undefined);\n  const [nftOwner, setNftOwner] = React.useState(undefined);\n  const [nftBusy, setNftBusy] = React.useState(undefined);\n  const [resellPrice, setResellPrice] = React.useState(\"\");\n  const [resellPriceError, setResellPriceError] = React.useState(\"\");\n  const [buyResult, setBuyResult] = React.useState(null);\n  const [downloadLink, setDownloadLink] = React.useState(null);\n\n  const [editProfileName, setEditProfileName] = React.useState(\"\");\n  const editProfileNameRef = React.createRef();\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  // Initialize for profile view.\n  React.useEffect(() => {\n    if (view === \"profile\") {\n      (async () => {\n        // Retrieve and set profile.\n        let profile = await getProfile(profileAddress);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = profileAddress;\n        setProfile(profile);\n\n        // Retrieve and set collections.\n        const collections = await queryCollectionByOwner({\n          owner: profileAddress,\n        });\n        if (collections !== null) {\n          setCollections(collections.reverse());\n        }\n\n        // Retrieve and set unassigned list.\n        const unassignedList = await queryUnassignedNftsByOwner({\n          owner: profileAddress,\n        });\n        setUnassignedList(unassignedList.reverse());\n      })();\n    }\n  }, []);\n\n  // Initialize for profileOwned view.\n  React.useEffect(() => {\n    if (view === \"profileOwned\") {\n      (async () => {\n        // Retrieve and set profile.\n        let profile = await getProfile(profileAddress);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = profileAddress;\n        setProfile(profile);\n\n        setProfileLists({\n          createdNfts: (\n            await getProfileCreatedNfts({ owner: profileAddress })\n          ).results.reverse(),\n          ownedNfts: (\n            await getProfileOwnedNfts({ owner: profileAddress })\n          ).results.reverse(),\n          historicalNfts: (\n            await getProfileHistoricalNfts({ owner: profileAddress })\n          ).results.reverse(),\n        });\n      })();\n    }\n  }, []);\n\n  // Initialize for collection view.\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"collection\") {\n        const collection = await getCollection(collectionHandle);\n        collection.handle = collectionHandle;\n        setCollection(collection);\n        let profile = await getProfile(collection.owner);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = collection.owner;\n        setProfile(profile);\n        setCollectionItems(\n          (await getCollectionItems({ handle: collectionHandle })).reverse()\n        );\n      }\n    })();\n  }, []);\n\n  // Initialize for nft view.\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"nft\") {\n        const nftMeta = await getMeta(nftAddress);\n        setNftMeta(nftMeta);\n        const nftState = await getState(nftAddress);\n        setNftState(nftState);\n\n        const nftItemCollectionHandle = (\n          await getItemCollection({\n            address: nftAddress,\n          })\n        ).handle;\n        if (nftItemCollectionHandle === null) {\n          setNftItemCollection(null);\n        } else {\n          const collection = await getCollection({\n            handle: nftItemCollectionHandle,\n          });\n          setNftItemCollection(collection);\n        }\n\n        if (nftState !== null && nftState.owner !== nftState.creator) {\n          let nftOwner = await getProfile(nftState.owner);\n          if (nftOwner === null) {\n            nftOwner = {};\n          }\n          nftOwner.address = nftState.owner;\n          setNftOwner(nftOwner);\n        } else {\n          setNftOwner(null);\n        }\n\n        if (nftState !== null && nftMeta !== null) {\n          let profile = await getProfile(nftState.creator);\n          if (profile === null) {\n            profile = {};\n          }\n          profile.address = nftState.creator;\n          setProfile(profile);\n        }\n\n        setNftBusy(await getBusy({ address: nftAddress }));\n      }\n    })();\n  }, []);\n\n  // Effect for NFT view.\n  React.useEffect(() => {\n    if (resellPrice === \"\") {\n      setResellPriceError(\"Resell price required\");\n    } else if (nftState !== null) {\n      if (\n        BigInt(toSatoshi(resellPrice)) >\n        BigInt(10) * BigInt(nftState.stats.price)\n      ) {\n        setResellPriceError(\n          `Resell price must be at most 10x the current price`\n        );\n      } else {\n        setResellPriceError(\"\");\n      }\n    } else {\n      setResellPriceError(\"\");\n    }\n  }, [resellPrice, nftState]);\n\n  const doEditProfileSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const payload = {\n      timestamp: Date.now(),\n      owner: profileAddress,\n      name:\n        editProfileName === null || editProfileName === \"\"\n          ? null\n          : editProfileName,\n    };\n    const message = JSON.stringify(payload);\n\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    const updateResult = await updateProfile(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doCreateCollectionSubmit = async (collection) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      owner: profileAddress,\n      handle: collection.handle,\n      name: collection.name,\n      thumbnail: collection.thumbnail,\n      description: collection.description,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await createCollection(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doEditCollectionSubmit = async (collection) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      handle: collection.handle,\n      name: collection.name,\n      thumbnail: collection.thumbnail,\n      description: collection.description,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await updateCollection(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doMove = async (address, handle) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      address: address,\n      handle: handle,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await setCollectionItem(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doDownload = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const timestamp = Date.now();\n    const message = `${nftAddress}|${timestamp}`;\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n\n    const result = await getContent({\n      address: nftAddress,\n      timestamp: timestamp,\n      signature: signResult.result,\n    });\n    if (result === null || result.error !== undefined) {\n      return;\n    }\n\n    if (result.content !== undefined) {\n      setDownloadLink(result.content);\n    }\n  };\n\n  const doBuy = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const { vins, vouts } = await getBuyTransaction({\n      address: nftAddress,\n      price: toSatoshi(resellPrice),\n    });\n    const signed = (await window.dingo.requestSignTransaction(vins, vouts))\n      .result;\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    const result = await sendBuyTransaction({ transaction: signed });\n    setBuyResult(result);\n  };\n\n  return (\n    <div className=\"profile-container justify-content-center mx-auto\">\n      <Container>\n        {(view === \"profile\" || view === \"profileOwned\") && profile !== null && (\n          <Row>\n            <div className=\"profile-section profile-header mt-3 pt-3\">\n              <div className=\"d-flex flex-row\">\n                <span\n                  className=\"clickable ms-auto\"\n                  onClick={() => setEditProfileShow(true)}\n                >\n                  <FontAwesomeIcon className=\"me-1\" icon={faPen} /> Edit\n                </span>\n              </div>\n              <h3 className=\"text-truncate\">\n                {profile === null\n                  ? \"-\"\n                  : profile.name === \"\" ||\n                    profile.name === null ||\n                    profile.name === undefined\n                  ? \"Unnamed Profile\"\n                  : profile.name}\n              </h3>\n              <div className=\"text-truncate\">\n                <span className=\"text-muted\">{profile.address}</span>\n              </div>\n              <hr />\n              <Nav variant=\"tabs\" className=\"custom-nav-tabs\">\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"creations\"\n                    active={\n                      view === \"profile\" ||\n                      view === \"collection\" ||\n                      view === \"nft\"\n                    }\n                    href={`/profile/${profile.address}/`}\n                  >\n                    NFT creations\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"unassigned\"\n                    active={view === \"profileOwned\"}\n                    href={`/profile/${profile.address}/owned`}\n                  >\n                    Owned NFTs\n                  </Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </div>\n          </Row>\n        )}\n\n        {view === \"profile\" && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                <span className=\"me-auto content-title accent\">\n                  Collections\n                </span>\n                <span\n                  className=\"clickable\"\n                  onClick={() => setCreateCollectionShow(true)}\n                >\n                  <FontAwesomeIcon className=\"me-1\" icon={faPlus} /> Create new\n                </span>\n              </div>\n              {collections !== null && collections.length > 0 && (\n                <ul className=\"collection-cards-container mt-4\">\n                  {collections.map((x) => (\n                    <a key={x} href={`/collection/${x}`}>\n                      <CollectionCard handle={x} />\n                    </a>\n                  ))}\n                </ul>\n              )}\n              {collections !== null && collections.length === 0 && (\n                <div className=\"d-flex flex-row mt-2 mb-2\">\n                  <span className=\"mx-auto text-muted\">\n                    User has no collection\n                  </span>\n                </div>\n              )}\n            </div>\n          </Row>\n        )}\n\n        {view === \"profile\" &&\n          unassignedList !== null &&\n          unassignedList.length > 0 && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Unassigned NFTs\n                  </span>\n                </div>\n                <ul className=\"cards-container mt-4\">\n                  {unassignedList.map((x) => (\n                    <div key={x}>\n                      <a href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                      <DropdownButton\n                        className=\"mt-2 mb-4 px-4\"\n                        title=\"Move to collection\"\n                      >\n                        {collections !== null &&\n                          collections.map((y) => (\n                            <Dropdown.Item key={y} onClick={() => doMove(x, y)}>\n                              {y}\n                            </Dropdown.Item>\n                          ))}\n                      </DropdownButton>\n                    </div>\n                  ))}\n                </ul>\n              </div>\n            </Row>\n          )}\n\n        {view === \"profileOwned\" &&\n          profileLists !== null &&\n          profileLists.ownedNfts.filter(\n            (x) => !profileLists.createdNfts.some((y) => y === x)\n          ).length > 0 && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Owned NFTs\n                  </span>\n                </div>\n                <ul className=\"cards-container mt-4\">\n                  {profileLists.ownedNfts\n                    .filter(\n                      (x) => !profileLists.createdNfts.some((y) => y === x)\n                    )\n                    .map((x) => (\n                      <a key={x} href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                    ))}\n                </ul>\n              </div>\n            </Row>\n          )}\n\n        {view === \"profileOwned\" &&\n          profileLists !== null &&\n          profileLists.historicalNfts\n            .filter((x) => !profileLists.createdNfts.some((y) => y === x))\n            .filter((x) => !profileLists.ownedNfts.some((y) => y === x))\n            .length > 0 && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Previously owned NFTs\n                  </span>\n                </div>\n                <ul className=\"cards-container mt-4\">\n                  {profileLists.historicalNfts\n                    .filter(\n                      (x) => !profileLists.createdNfts.some((y) => y === x)\n                    )\n                    .filter((x) => !profileLists.ownedNfts.some((y) => y === x))\n                    .map((x) => (\n                      <a key={x} href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                    ))}\n                </ul>\n              </div>\n            </Row>\n          )}\n\n        {view === \"collection\" && collection !== null && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              {profile !== null && (\n                <div className=\"d-flex flex-row content-header\">\n                  <div\n                    className=\"text-truncate me-auto\"\n                    style={{ display: \"inline\" }}\n                  >\n                    <span className=\"content-title accent\">\n                      Collection by:{\" \"}\n                    </span>\n                    <a\n                      className=\"simple-link\"\n                      href={`/profile/${profile.address}/`}\n                    >\n                      {profile.name === \"\" ||\n                      profile.name === null ||\n                      profile.name === undefined\n                        ? profile.address\n                        : profile.name}\n                    </a>\n                  </div>\n                  <span\n                    className=\"clickable ms-auto\"\n                    onClick={() => setEditCollectionShow(true)}\n                  >\n                    <nobr>\n                      <FontAwesomeIcon className=\"me-1\" icon={faPen} /> Edit\n                    </nobr>\n                  </span>\n                </div>\n              )}\n              <div className=\"d-flex flex-row\">\n                <ul className=\"collection-cards-container mt-4 mx-auto mb-4\">\n                  <CollectionCard handle={collectionHandle} />\n                </ul>\n              </div>\n            </div>\n          </Row>\n        )}\n        {view === \"collection\" && collection !== null && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <ul className=\"cards-container mt-4\">\n                {collectionItems !== null &&\n                  collectionItems.map((x) => (\n                    <a key={x} href={`/nft/${x}`}>\n                      <NFTCard address={x} />\n                    </a>\n                  ))}\n              </ul>\n            </div>\n          </Row>\n        )}\n\n        {view === \"nft\" &&\n          nftMeta !== null &&\n          nftItemCollection !== undefined &&\n          nftOwner !== undefined && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  {nftItemCollection === null && profile !== null && (\n                    <div className=\"text-truncate\">\n                      <span className=\"content-title accent\">Created by: </span>\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          profile !== null && `/profile/${profile.address}/`\n                        }\n                      >\n                        {profile.name === \"\" ||\n                        profile.name === null ||\n                        profile.name === undefined\n                          ? profile.address\n                          : profile.name}\n                      </a>\n                    </div>\n                  )}\n                  {nftItemCollection !== null && (\n                    <div className=\"text-truncate\">\n                      <span className=\"content-title accent\">\n                        In collection:{\" \"}\n                      </span>\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          profile !== null &&\n                          `/collection/${nftItemCollection.handle}/`\n                        }\n                      >\n                        {nftItemCollection.name}\n                      </a>\n                    </div>\n                  )}\n                </div>\n                <div>\n                  <ul className=\"cards-container mt-4\">\n                    <NFTCard address={nftAddress} />\n                  </ul>\n                  {nftOwner !== null && (\n                    <div className=\"text-center mt-4\">\n                      <span className=\"content-title accent\">\n                        <b>Owned by: </b>\n                      </span>\n                      <a\n                        className=\"simple-link\"\n                        href={`/profile/${nftOwner.address}/owned`}\n                      >\n                        {nftOwner.name === \"\" ||\n                        nftOwner.name === null ||\n                        nftOwner.name === undefined\n                          ? nftOwner.address\n                          : nftOwner.name}\n                      </a>\n                    </div>\n                  )}\n                  {nftMeta.description !== null && nftMeta.description !== \"\" && (\n                    <div>\n                      <p className=\"text-center mt-4 text-break\">\n                        <i>{nftMeta.description}</i>\n                      </p>\n                    </div>\n                  )}\n                  {\n                    <div className=\"d-flex flex-row mt-4\">\n                      <span className=\"ms-auto accent\">\n                        <b>Hidden content:</b>\n                      </span>\n                      &nbsp;\n                      {downloadLink === null && (\n                        <span\n                          className=\"me-auto clickable\"\n                          onClick={doDownload}\n                        >\n                          Verify ownership\n                        </span>\n                      )}\n                      {downloadLink !== null && (\n                        <a className=\"simple-link me-auto\" href={downloadLink} target=\"_blank\" rel=\"noreferrer\">\n                          Link\n                        </a>\n                      )}\n                    </div>\n                  }\n                </div>\n              </div>\n            </Row>\n          )}\n\n        {view === \"nft\" && nftMeta !== null && nftItemCollection !== undefined && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                <span className=\"me-auto content-title accent\">\n                  Buy this NFT\n                </span>\n              </div>\n              <div>\n                {nftBusy !== undefined && nftBusy !== null && (\n                  <div className=\"mt-4 text-center\">\n                    {\" \"}\n                    <h5>NFT busy</h5>\n                    <p>\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          \"https://openchains.info/coin/dingocoin/tx/\" +\n                          nftBusy.txid\n                        }\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                      >\n                        A transaction\n                      </a>{\" \"}\n                      is currenly being confirmed for this NFT. <br />\n                      Please try again in a few minutes.\n                    </p>\n                  </div>\n                )}\n                {nftBusy !== undefined &&\n                  nftBusy === null &&\n                  buyResult === null && (\n                    <div className=\"d-flex flex-column\">\n                      <div className=\"mt-4 text-center px-4\">\n                        <Form.Group>\n                          <Form.Label>\n                            <b>Resell at (*required)</b>\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={resellPrice}\n                            onChange={(e) => {\n                              if (e.target.value.match(/^[0-9]*$/)) {\n                                setResellPrice(e.target.value);\n                              }\n                            }}\n                            style={{ textAlign: \"center\" }}\n                            isInvalid={resellPriceError !== \"\"}\n                          />\n                          {resellPriceError && (\n                            <div>\n                              <Form.Text className=\"input-error\">\n                                {resellPriceError}\n                              </Form.Text>\n                            </div>\n                          )}\n                          <Form.Text className=\"text-muted\">\n                            New price you want to sell this NFT for (min. 1\n                            Dingocoin).\n                          </Form.Text>\n                        </Form.Group>\n                      </div>\n                      <div className=\"d-flex flex-row\">\n                        <Button\n                          className=\"popup-button mt-4 mx-auto px-4\"\n                          style={{ width: \"auto\" }}\n                          disabled={resellPriceError !== \"\"}\n                          onClick={doBuy}\n                        >\n                          Buy and resell NFT\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                {buyResult !== null && buyResult.error === undefined && (\n                  <div className=\"mt-4 text-center\">\n                    {\" \"}\n                    <h4>Transaction submitted!</h4>\n                    <p>\n                      Transaction ID:{\" \"}\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          \"https://openchains.info/coin/dingocoin/tx/\" +\n                          buyResult.txid\n                        }\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                      >\n                        {buyResult.txid}\n                      </a>\n                      <br />\n                      It may take a few minutes for your transaction to be\n                      confirmed.\n                    </p>\n                  </div>\n                )}\n                {buyResult !== null && buyResult.error !== undefined && (\n                  <div style={{ textAlign: \"center\" }} className=\"mt-4\">\n                    {\" \"}\n                    <h4>Transaction failed!</h4>\n                    <p>\n                      - Make sure that your wallet has no pending transaction.\n                      <br />- You can't buy this NFT as its owner/creator.\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </Row>\n        )}\n      </Container>\n\n      <Modal\n        size=\"lg\"\n        centered\n        show={editProfileShow}\n        onHide={() => setEditProfileShow(false)}\n        onEntered={() => editProfileNameRef.current.focus()}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Edit profile</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={doEditProfileSubmit}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Profile name (leave blank if no change)</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={editProfileName}\n                placeholder=\"Max 40 characters\"\n                onChange={(e) => setEditProfileName(e.target.value)}\n                isValid={editProfileName !== \"\" && editProfileName.length <= 40}\n                isInvalid={\n                  editProfileName !== \"\" && editProfileName.length > 40\n                }\n                ref={editProfileNameRef}\n              />\n              {editProfileName.length > 40 && (\n                <div>\n                  <Form.Text className=\"input-error\">Name too long</Form.Text>\n                </div>\n              )}\n            </Form.Group>\n\n            <div style={{ textAlign: \"center\" }}>\n              <Button\n                className=\"popup-button mb-3 mt-3 px-4\"\n                variant=\"primary\"\n                type=\"submit\"\n              >\n                Verify and update profile\n              </Button>\n            </div>\n          </Form>\n        </Modal.Body>\n      </Modal>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n\n      {view === \"profile\" && (\n        <CreateCollectionModal\n          title=\"Create new collection\"\n          show={createCollectionShow}\n          owner={profileAddress}\n          onHide={() => setCreateCollectionShow(false)}\n          onSubmit={doCreateCollectionSubmit}\n        />\n      )}\n\n      {view === \"collection\" && collection !== null && (\n        <EditCollectionModal\n          title=\"Edit collection\"\n          show={editCollectionShow}\n          handle={collection.handle}\n          onHide={() => setEditCollectionShow(false)}\n          onSubmit={doEditCollectionSubmit}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ProfileController;\n","import {\n  Row,\n  Tab,\n  Nav,\n  Button,\n  Dropdown,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryCollectionByTradeCountScaled,\n  queryCollectionByTradeVolume,\n  queryNftByNewest,\n  queryNft,\n  queryNftBySearch,\n  queryCollectionBySearch,\n  queryCollectionByValuable,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport CollectionCard from \"./CollectionCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBolt,\n  faFire,\n  faList,\n  faSearch,\n  faArrowRight,\n  faGem,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NFTCard from \"./NFTCard\";\n\nfunction ExploreController() {\n  const location = useLocation();\n  let view = location.pathname.split(\"/\").pop();\n  view = [\"top\", \"valuable\", \"all\", \"search\"].includes(view)\n    ? view\n    : \"trending\";\n\n  // For search view.\n  const [search, setSearch] = React.useState(\"\");\n  const [searchSubView, setSearchSubView] = React.useState(null);\n  const [searchCollections, setSearchCollections] = React.useState(null);\n  const [searchNfts, setSearchNfts] = React.useState(null);\n\n  // For explore view.\n  const [collectionList, setCollectionList] = React.useState(null);\n  const [nftList, setNftList] = React.useState(null);\n  const [nftListEnd, setNftListEnd] = React.useState(false);\n  const [queryText, setQueryText] = React.useState(\"Newly listed\");\n\n  const [viewMoreEnabled, setViewMoreEnabled] = React.useState(true);\n\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"trending\") {\n        const l = await queryCollectionByTradeCountScaled();\n        setCollectionList(l.results);\n      } else if (view === \"top\") {\n        const l = await queryCollectionByTradeVolume();\n        setCollectionList(l.results);\n      } else if (view === \"valuable\") {\n        const l = await queryCollectionByValuable();\n        setCollectionList(l.results);\n      } else if (view === \"all\") {\n        const l = (await queryNftByNewest({ beforeId: null })).results;\n        if (l.length < 100) {\n          setNftListEnd(true);\n        }\n        setNftList(l);\n      } else if (view === \"search\") {\n        setSearch(new URLSearchParams(location.search).get(\"query\"));\n        await doChangeSearchSubview(\"nfts\");\n      }\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/explore/search?query=${search.trim()}`);\n    }\n  };\n\n  const doChangeSearchSubview = async (subview) => {\n    // TODO: Figure out a more elegant way to retrieve this from the existing react state.\n    const search = new URLSearchParams(location.search).get(\"query\");\n\n    setSearchSubView(subview);\n\n    if (subview === \"collections\" && searchCollections === null) {\n      setSearchCollections(\n        (await queryCollectionBySearch({ search: search })).results\n      );\n    }\n    if (subview === \"nfts\" && searchNfts === null) {\n      setSearchNfts((await queryNftBySearch({ search: search })).results);\n    }\n  };\n\n  const doChangeQuery = async (eventKey, event) => {\n    const [key, direction] = eventKey.split(\"|\");\n    setQueryText(event.target.innerText);\n\n    setNftListEnd(false);\n    if (key === \"listHeight\") {\n      const l = (await queryNftByNewest({ beforeId: null })).results;\n      if (l.length < 100) {\n        setNftListEnd(true);\n      }\n      setNftList(l);\n      setViewMoreEnabled(true);\n    } else {\n      const l = await queryNft({\n        key: key,\n        direction: direction,\n        limit: 100,\n        offset: 0,\n      });\n      setNftList(\n        l.results.map((x) => {\n          return {\n            address: x,\n          };\n        })\n      );\n      setViewMoreEnabled(false);\n    }\n  };\n\n  const onViewMore = async () => {\n    const l = (\n      await queryNftByNewest({ beforeId: nftList[nftList.length - 1].id })\n    ).results;\n    if (l.length < 100) {\n      setNftListEnd(true);\n    }\n    setNftList(nftList.concat(l));\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Explore</h1>\n        <Form onSubmit={doSearch}>\n          <InputGroup className=\"mt-4\">\n            <InputGroup.Text id=\"basic-addon1\">\n              <FontAwesomeIcon icon={faSearch} />\n            </InputGroup.Text>\n            {search !== null && (\n              <FormControl\n                className=\"search-box\"\n                placeholder={\"Search all collections and NFTs...\"}\n                value={search}\n                onChange={(e) => {\n                  if (e.target.value.length <= 50) {\n                    setSearch(e.target.value);\n                  }\n                }}\n              />\n            )}\n            {search !== \"\" && (\n              <Button variant=\"primary\" type=\"submit\">\n                <FontAwesomeIcon icon={faArrowRight} />\n              </Button>\n            )}\n          </InputGroup>\n        </Form>\n      </div>\n      {view === \"search\" && (\n        <Tab.Container\n          id=\"left-tabs-example\"\n          activeKey={searchSubView}\n          onSelect={doChangeSearchSubview}\n        >\n          <Row>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4\">\n              <Nav.Item className=\"ms-auto\">\n                <Nav.Link eventKey=\"nfts\">\n                  <FontAwesomeIcon icon={faList} className=\"me-2\" />\n                  NFTs\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto\">\n                <Nav.Link eventKey=\"collections\">\n                  <FontAwesomeIcon icon={faBolt} className=\"me-2\" />\n                  Collections\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </Row>\n          <Row>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"nfts\">\n                <ul className=\"cards-container mt-4\">\n                  {searchNfts === null && (\n                    <div className=\"d-flex flex-row\">\n                      <Spinner className=\"mx-auto\" animation=\"border\" />\n                    </div>\n                  )}\n                  {searchNfts !== null &&\n                    searchNfts.map((x) => (\n                      <a key={x.address} href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                    ))}\n                  {searchNfts !== null && searchNfts.length === 0 && (\n                    <div className=\"d-flex flex-row\">\n                      <p className=\"mx-auto text-muted\" animation=\"border\">\n                        No matching NFTs\n                      </p>\n                    </div>\n                  )}\n                </ul>\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"collections\">\n                <ul className=\"collection-cards-container mt-4\">\n                  {searchCollections === null && (\n                    <div className=\"d-flex flex-row\">\n                      <Spinner className=\"mx-auto\" animation=\"border\" />\n                    </div>\n                  )}\n                  {searchCollections !== null &&\n                    searchCollections.map((x) => (\n                      <a key={x} href={`/collection/${x}`}>\n                        <CollectionCard handle={x} />\n                      </a>\n                    ))}\n                  {searchCollections !== null &&\n                    searchCollections.length === 0 && (\n                      <div className=\"d-flex flex-row\">\n                        <p className=\"mx-auto text-muted\" animation=\"border\">\n                          No matching collection\n                        </p>\n                      </div>\n                    )}\n                </ul>\n              </Tab.Pane>\n            </Tab.Content>\n          </Row>\n        </Tab.Container>\n      )}\n      {[\"trending\", \"top\", \"valuable\", \"all\"].includes(view) && (\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <Row>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4\">\n              <Nav.Item className=\"ms-auto text-center\" style={{ width: \"8rem\" }}>\n                <Nav.Link href=\"/explore/\" active={view === \"trending\"}>\n                  <FontAwesomeIcon icon={faBolt} className=\"me-2\" />\n                  Trending\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"text-center\" style={{ width: \"8rem\" }}>\n                <Nav.Link href=\"/explore/top\" active={view === \"top\"}>\n                  <FontAwesomeIcon icon={faFire} className=\"me-2\" />\n                  Top\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"text-center\" style={{ width: \"8rem\" }}>\n                <Nav.Link href=\"/explore/valuable\" active={view === \"valuable\"}>\n                  <FontAwesomeIcon icon={faGem} className=\"me-2\" />\n                  Valuable\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto text-center\" style={{ width: \"8rem\" }}>\n                <Nav.Link href=\"/explore/all\" active={view === \"all\"}>\n                  <FontAwesomeIcon icon={faList} className=\"me-2\" />\n                  All NFTs\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </Row>\n          <Row>\n            {[\"trending\", \"top\", \"valuable\"].includes(view) &&\n              collectionList !== null && (\n                <Tab.Content>\n                  <ul className=\"collection-cards-container mt-4\">\n                    {collectionList !== null &&\n                      collectionList.map((x) => (\n                        <a key={x} href={`/collection/${x}`}>\n                          <CollectionCard handle={x} />\n                        </a>\n                      ))}\n                  </ul>\n                </Tab.Content>\n              )}\n            {view === \"all\" && (\n              <Tab.Content>\n                <Dropdown\n                  onSelect={doChangeQuery}\n                  style={{ textAlign: \"center\" }}\n                >\n                  <Dropdown.Toggle className=\"px-4 mt-4\">\n                    {queryText}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"listHeight|DESC\">\n                      Newly listed\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeHeight|DESC\">\n                      Recently sold\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"price|DESC\">\n                      Highest price\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"price|ASC\">\n                      Lowest price\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeCount|DESC\">\n                      Highest trade count\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeCount|ASC\">\n                      Lowest trade count\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeVolume|DESC\">\n                      Highest trade volume\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeVolume|ASC\">\n                      Lowest trade volume\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                <ul className=\"cards-container mt-4\">\n                  {nftList !== null &&\n                    nftList.map((x) => (\n                      <a key={x.address} href={`/nft/${x.address}`}>\n                        <NFTCard address={x.address} />\n                      </a>\n                    ))}\n                  {viewMoreEnabled && nftList !== null && !nftListEnd && (\n                    <Button onClick={onViewMore}>View more</Button>\n                  )}\n                </ul>\n              </Tab.Content>\n            )}\n          </Row>\n        </Tab.Container>\n      )}\n    </div>\n  );\n}\n\nexport default ExploreController;\n","export default __webpack_public_path__ + \"static/media/dingocoin.15331900.png\";","import { Form, InputGroup, FormControl, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLock,\n  faPiggyBank,\n  faHandHoldingUsd,\n  faArrowRight,\n  faSearch\n} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\n\nfunction Main() {\n  const [search, setSearch] = React.useState(\"\");\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/explore/search?query=${search.trim()}`);\n    }\n  };\n\n  return (\n    <div>\n      <header className=\"section-a\" id=\"home\">\n        <div className=\"particles-container\">\n          <Container className=\"text-center\">\n            <Row>\n              <Col>\n                <div className=\"isometric-holder\">\n                  <div className=\"isometric\"></div>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <h1 className=\"mt-5 accent\">Dingocoin NFT Platform</h1>\n              <p className=\"mb-4\">The next generation of NFTs</p>\n            </Row>\n            <Row className=\"d-flex flex-row\">\n              <Form className=\"mx-auto mt-3 mb-4\" onSubmit={doSearch} style={{maxWidth: \"584px\"}}>\n                <InputGroup>\n                  <InputGroup.Text id=\"basic-addon1\">\n                    <FontAwesomeIcon icon={faSearch} />\n                  </InputGroup.Text>\n                  {search !== null && (\n                    <FormControl\n                      autoFocus={true}\n                      className=\"search-box\"\n                      placeholder={\"Search all collections and NFTs...\"}\n                      value={search}\n                      onChange={(e) => {\n                        if (e.target.value.length <= 50) {\n                          setSearch(e.target.value);\n                        }\n                      }}\n                    />\n                  )}\n                  {search !== \"\" && (\n                    <Button variant=\"primary\" type=\"submit\">\n                      <FontAwesomeIcon icon={faArrowRight} />\n                    </Button>\n                  )}\n                </InputGroup>\n              </Form>\n            </Row>\n            <div className=\"mt-4 mb-2\">\n              <CustomDivider/>\n            </div>\n            <Row className=\"pt-3 pb-2\">\n              <Col>\n                <div className=\"project-card mx-auto\">\n                  <div className=\"logo-holder\">\n                    <FontAwesomeIcon className=\"faicon\" icon={faPiggyBank} />\n                  </div>\n                  <h5>Ultra-low Costs</h5>\n                  <p>Create and trade NFTs with {\"<$0.001\"} gas fees</p>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"project-card mx-auto\">\n                  <div className=\"logo-holder\">\n                    <FontAwesomeIcon\n                      className=\"faicon\"\n                      icon={faHandHoldingUsd}\n                    />\n                  </div>\n                  <h5>On-chain Trading</h5>\n                  <p>You receive earnings and royalties immediately</p>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"project-card mx-auto\">\n                  <div className=\"logo-holder\">\n                    <FontAwesomeIcon className=\"faicon\" icon={faLock} />\n                  </div>\n                  <h5>Cryptographically Unique</h5>\n                  <p>The same content can never be reused in another NFT</p>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Main;\n","import \"./App.scss\";\nimport CreateController from \"./CreateController\";\nimport ProfileController from \"./ProfileController\";\nimport ExploreController from \"./ExploreController\";\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Form,\n  FormControl,\n  Button,\n  Modal,\n  InputGroup,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport DingocoinLogo from \"./assets/img/dingocoin.png\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from \"react-router-dom\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const [location, setLocation] = React.useState(null);\n  React.useEffect(() => {\n    setLocation(window.location.pathname);\n  }, []);\n  React.useEffect(() => {}, [location]);\n\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [searchErrorShow, setSearchErrorShow] = React.useState(null);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (searchQuery.trim() !== \"\") {\n      window.location.assign(`/explore/search?query=${searchQuery.trim()}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"navbar\" bg=\"dark\" expand=\"lg\" sticky=\"top\">\n        <Container>\n          <Navbar.Brand href=\"/\" className=\"navbar-brand align-items-center\">\n            <img alt=\"\" src={DingocoinLogo} />\n            <span>DINGOCOIN</span>\n            <span className=\"navbar-brand-subtitle\"> NFT Platform</span>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse>\n            <Nav\n              className=\"ms-auto\"\n              style={{ paddingRight: \"1.5rem\", textAlign: \"center\" }}\n            >\n              <Nav.Link href=\"/explore\">Explore</Nav.Link>\n              <Nav.Link href=\"/create\">Create</Nav.Link>\n            </Nav>\n            <Form className=\"d-flex\" onSubmit={doSearch}>\n              <InputGroup\n                style={{\n                  minWidth: \"20rem\",\n                }}\n              >\n                <FormControl\n                  className=\"search-box\"\n                  placeholder=\"Search all collections and NFTs...\"\n                  value={searchQuery}\n                  onChange={(e) => {\n                    if (e.target.value.length <= 50) {\n                      setSearchQuery(e.target.value);\n                    }\n                  }}\n                />\n                {searchQuery !== \"\" && (\n                  <Button variant=\"secondary\" type=\"submit\">\n                    <FontAwesomeIcon icon={faAngleRight}></FontAwesomeIcon>\n                  </Button>\n                )}\n              </InputGroup>\n            </Form>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <section className=\"section-content\">\n        <Router>\n          <Routes>\n            <Route index element={<Main />} />\n            <Route path=\"/profile\">\n              <Route path=\":profileAddress\" element={<ProfileController />} />\n              <Route\n                path=\":profileAddress/owned\"\n                element={<ProfileController />}\n              />\n              <Route path=\":profileAddress\" element={<ProfileController />} />\n            </Route>\n            <Route\n              path=\"/collection/:collectionHandle\"\n              element={<ProfileController />}\n            />\n            <Route path=\"/nft/:nftAddress\" element={<ProfileController />} />\n            <Route path=\"/explore\" element={<ExploreController />}>\n              <Route path=\"top\" element={<ExploreController />} />\n              <Route path=\"valuable\" element={<ExploreController />} />\n              <Route path=\"all\" element={<ExploreController />} />\n              <Route path=\"search\" element={<ExploreController />} />\n            </Route>\n            <Route path=\"/create\" element={<CreateController />} />\n            <Route element={<Navigate to=\"/\" />} />\n          </Routes>\n        </Router>\n      </section>\n      <section>\n        <div className=\"justify-content-center section-footer align-items-center\">\n          <h6>Copyright © The Dingocoin Project 2021-2022</h6>\n        </div>\n      </section>\n\n      <Modal\n        size=\"md\"\n        centered\n        show={searchErrorShow}\n        onHide={() => setSearchErrorShow(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>NFT/profile not found</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container className=\"text-center my-2\">\n            <p>No results found.</p>\n            <Button className=\"mx-2\" onClick={() => setSearchErrorShow(false)}>\n              Close\n            </Button>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n","// Assets.\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CustomDivider() {\n  return (\n    <div className=\"divider-custom\">\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n      <div className=\"divider-custom-icon mt-2 mb-2\">\n        <FontAwesomeIcon icon={faAngleDown} />\n      </div>\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n    </div>\n  );\n}\n\nexport default CustomDivider;\n","import { Modal, Container, Button } from \"react-bootstrap\";\nimport React from \"react\";\n\nfunction GetWalletModal(props) {\n  return (\n    <Modal\n      size=\"md\"\n      centered\n      show={props.show}\n      onHide={props.onHide}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Browser Wallet required\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container className=\"text-center my-2\">\n          <p>You need a Dingocoin browser wallet for this.<br/>Set it up in less than a minute.</p>\n          <a href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Chrome wallet</Button>\n          </a>\n          <a href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Firefox wallet</Button>\n          </a>\n        </Container>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default GetWalletModal;\n"],"sourceRoot":""}