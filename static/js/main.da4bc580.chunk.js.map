{"version":3,"sources":["api.js","utils.js","CreateController.jsx","CustomDivider.jsx","storage.js","NFTCard.jsx","CollectionCard.jsx","CreateCollectionModal.jsx","EditCollectionModal.jsx","EditProfileModal.jsx","ProfileCard.jsx","ProfileController.jsx","ExploreCollectionsController.jsx","ExploreNftsController.jsx","ExploreProfilesController.jsx","SearchController.jsx","assets/img/dingocoin.png","SideScroller.jsx","Main.jsx","App.jsx","index.jsx","GetWalletModal.jsx"],"names":["API_URL","getBusy","data","a","post","address","result","busy","getContent","timestamp","signature","getBuyTransaction","price","sendBuyTransaction","transaction","getListTransaction","contentHash","royalty","sendListTransaction","content","preview","name","description","tags","updateProfile","owner","thumbnail","getProfileCreatedNfts","getProfileOwnedNfts","getProfileHistoricalNfts","getProfileStats","getProfileCreatedCount","getProfileCollectionCount","getProfileHistoricalCount","queryProfileBySearch","search","queryProfileByTradeCount","queryProfileByEarnings","queryNft","key","direction","offset","limit","queryNftBySearch","queryNftByNewest","beforeId","getCollectionStats","handle","queryCollectionByOwner","queryCollectionBySearch","queryUnassignedNftsByOwner","createCollection","updateCollection","setCollectionItem","getCollectionItems","getItemCollection","queryCollectionByTradeCountScaled","queryCollectionByTradeVolume","toSatoshi","x","undefined","Error","BigInt","Web3Utils","toWei","toString","toLocaleString","isNegative","integer","replace","satoshiToLocaleString","link","controller","AbortController","setTimeout","abort","fetch","withCredentials","method","signal","headers","Accept","body","JSON","stringify","json","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","CreateController","React","useState","setContent","contentError","setContentError","listingPrice","setListingPrice","setRoyalty","setName","setDescription","setPreview","previewError","setPreviewError","setTags","pending","setPending","success","setSuccess","setAddress","getWalletShow","setGetWalletShow","useEffect","size","Buffer","f","from","isPng","buffer","length","sizeOf","width","height","doSubmit","e","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","window","dingo","Hex","Sha256","Base64","parse","Math","floor","getListTransactionResponse","requestSignTransaction","vouts","signed","sendListTransactionResponse","className","style","maxWidth","onSubmit","Group","Label","Control","type","onChange","target","files","isInvalid","isValid","Text","value","placeholder","match","parseInt","toFixed","Range","textAlign","variant","disabled","animation","href","show","onHide","CustomDivider","icon","faAngleDown","get","getMeta","response","status","getPreviewLink","getState","getProfile","getCollection","NFTCard","props","domRef","useRef","isVisible","setVisible","previewLink","setPreviewLink","stats","setStats","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","meta","state","Card","ref","role","Img","src","loading","Body","Title","Subtitle","faCashRegister","tradeVolume","faExchangeAlt","tradeCount","CollectionCard","collection","setCollection","Container","faList","count","CreateCollectionModal","createdNfts","setCreatedNfts","setThumbnail","setHandle","results","reverse","all","map","createdNftNames","i","Modal","centered","Header","closeButton","title","Form","Select","Button","EditCollectionModal","thumbnailIndex","setThumbnailIndex","currentThumbnailEntry","find","isinvalid","EditProfileModal","profile","concat","ProfileCard","setProfile","createdCount","collectionCount","historicalCount","faThLarge","faShoppingBag","ProfileController","useParams","profileAddress","collectionHandle","nftAddress","location","useLocation","view","pathname","endsWith","editProfileShow","setEditProfileShow","createCollectionShow","setCreateCollectionShow","collections","setCollections","unassignedList","setUnassignedList","profileLists","setProfileLists","profileStats","setProfileStats","collectionItems","setCollectionItems","editCollectionShow","setEditCollectionShow","nftMeta","setNftMeta","nftState","setNftState","nftItemCollection","setNftItemCollection","nftOwner","setNftOwner","nftBusy","setNftBusy","resellPrice","setResellPrice","resellPriceError","setResellPriceError","buyResult","setBuyResult","downloadLink","setDownloadLink","startsWith","ownedNfts","historicalNfts","console","log","nftItemCollectionHandle","creator","doEditProfileSubmit","payload","Date","now","message","requestSign","signResult","reload","doCreateCollectionSubmit","doEditCollectionSubmit","doMove","doDownload","doBuy","vins","Row","onClick","faPen","Nav","Item","Link","eventKey","active","faPlus","DropdownButton","y","Dropdown","filter","some","listCount","listSoldCount","royaltyVolume","buyVolume","sellVolume","display","rel","txid","GetWalletModal","ExploreCollectionsController","pop","includes","collectionList","setCollectionList","setSearch","searchEntries","setSearchEntries","l","queryParam","URLSearchParams","doSearch","trim","assign","Tab","id","defaultActiveKey","faBolt","faFire","faSearch","Content","InputGroup","FormControl","autoFocus","faArrowRight","Spinner","ExploreNftsController","nftList","setNftList","nftListEnd","setNftListEnd","queryText","setQueryText","viewMoreEnabled","setViewMoreEnabled","doChangeQuery","event","innerText","onViewMore","onSelect","Toggle","Menu","ExploreProfilesController","profileList","setProfileList","faBullseye","faCoins","SearchController","searchSubView","setSearchSubView","searchNfts","setSearchNfts","searchCollections","setSearchCollections","searchProfiles","setSearchProfiles","doChangeSearchSubview","subview","activeKey","faUserCircle","Pane","SideScroller","scrollContainerRef","createRef","itemsContainerRef","items","itemTemplate","containerWidth","offsetWidth","itemWidth","children","scrollCount","scrollBy","left","behavior","faAngleLeft","faAngleRight","Main","hotCollections","setHotCollections","newNfts","setNewNfts","recentNfts","setRecentNfts","App","setLocation","searchQuery","setSearchQuery","searchErrorShow","setSearchErrorShow","Navbar","bg","expand","sticky","Brand","alt","DingocoinLogo","Collapse","paddingRight","NavDropdown","minWidth","index","element","path","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da4bc580.chunk.js","sourcesContent":["import { post } from \"./utils\";\n\nconst API_URL = \"https://nftp0.dingocoin.io\";\n\nconst getBusy = async (data) => {\n  const result = await post(`${API_URL}/nft/getBusy`, {\n    address: data.address,\n  });\n  if (result === null) {\n    return null;\n  } else {\n    return result.busy;\n  }\n};\n\nconst getContent = (data) => {\n  return post(`${API_URL}/nft/getContent`, {\n    address: data.address,\n    timestamp: data.timestamp,\n    signature: data.signature,\n  });\n};\n\nconst getBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/getBuyTransaction`, {\n    address: data.address,\n    price: data.price,\n  });\n};\n\nconst sendBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/sendBuyTransaction`, {\n    transaction: data.transaction,\n  });\n};\n\nconst getListTransaction = (data) => {\n  return post(`${API_URL}/nft/getListTransaction`, {\n    contentHash: data.contentHash,\n    price: data.price,\n    royalty: data.royalty,\n  });\n};\n\nconst sendListTransaction = (data) => {\n  return post(`${API_URL}/nft/sendListTransaction`, {\n    content: data.content,\n    preview: data.preview,\n    name: data.name,\n    description: data.description,\n    tags: data.tags,\n    transaction: data.transaction,\n  });\n};\n\nconst updateProfile = (data) => {\n  return post(`${API_URL}/profile/update`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    signature: data.signature,\n  });\n};\n\nconst getProfileCreatedNfts = (data) => {\n  return post(`${API_URL}/profile/getCreatedNfts`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileOwnedNfts = (data) => {\n  return post(`${API_URL}/profile/getOwnedNfts`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileHistoricalNfts = (data) => {\n  return post(`${API_URL}/profile/getHistoricalNfts`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileStats = (data) => {\n  return post(`${API_URL}/profile/getStats`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileCreatedCount = (data) => {\n  return post(`${API_URL}/profile/getCreatedCount`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileCollectionCount = (data) => {\n  return post(`${API_URL}/profile/getCollectionCount`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileHistoricalCount = (data) => {\n  return post(`${API_URL}/profile/getHistoricalCount`, {\n    owner: data.owner,\n  });\n};\n\nconst queryProfileBySearch = (data) => {\n  return post(`${API_URL}/profile/queryBySearch`, {\n    search: data.search,\n  });\n};\n\nconst queryProfileByTradeCount = (data) => {\n  return post(`${API_URL}/profile/queryByTradeCount`, {});\n};\n\nconst queryProfileByEarnings = (data) => {\n  return post(`${API_URL}/profile/queryByEarnings`, {});\n};\n\nconst queryNft = (data) => {\n  return post(`${API_URL}/nft/query`, {\n    key: data.key,\n    direction: data.direction,\n    offset: data.offset,\n    limit: data.limit,\n  });\n};\n\nconst queryNftBySearch = (data) => {\n  return post(`${API_URL}/nft/queryBySearch`, {\n    search: data.search,\n  });\n};\n\nconst queryNftByNewest = (data) => {\n  return post(`${API_URL}/nft/queryByNewest`, {\n    beforeId: data.beforeId,\n  });\n};\n\nconst getCollectionStats = (data) => {\n  return post(`${API_URL}/collection/getStats`, {\n    handle: data.handle,\n  });\n};\n\nconst queryCollectionByOwner = (data) => {\n  return post(`${API_URL}/collection/queryByOwner`, {\n    owner: data.owner,\n  });\n};\n\nconst queryCollectionBySearch = (data) => {\n  return post(`${API_URL}/collection/queryBySearch`, {\n    search: data.search,\n  });\n};\n\nconst queryUnassignedNftsByOwner = (data) => {\n  return post(`${API_URL}/collection/queryUnassignedNftsByOwner`, {\n    owner: data.owner,\n  });\n};\n\nconst createCollection = (data) => {\n  return post(`${API_URL}/collection/create`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    handle: data.handle,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    description: data.description,\n    signature: data.signature,\n  });\n};\n\nconst updateCollection = (data) => {\n  return post(`${API_URL}/collection/update`, {\n    timestamp: data.timestamp,\n    handle: data.handle,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    description: data.description,\n    signature: data.signature,\n  });\n};\n\nconst setCollectionItem = (data) => {\n  return post(`${API_URL}/collection/setItem`, {\n    timestamp: data.timestamp,\n    address: data.address,\n    handle: data.handle,\n    signature: data.signature,\n  });\n};\n\nconst getCollectionItems = (data) => {\n  return post(`${API_URL}/collection/getItems`, {\n    handle: data.handle,\n  });\n};\n\nconst getItemCollection = (data) => {\n  return post(`${API_URL}/collection/getItemCollection`, {\n    address: data.address,\n  });\n};\n\nconst queryCollectionByTradeCountScaled = () => {\n  return post(`${API_URL}/collection/queryByTradeCountScaled`, {});\n};\n\nconst queryCollectionByTradeVolumeScaled = () => {\n  return post(`${API_URL}/collection/queryByTradeVolumeScaled`, {});\n};\n\nconst queryCollectionByTradeVolume = () => {\n  return post(`${API_URL}/collection/queryByTradeVolume`, {});\n};\n\nconst queryCollectionByValuable = () => {\n  return post(`${API_URL}/collection/queryByValuable`, {});\n};\n\nconst getPlatformStats = () => {\n  return post(`${API_URL}/getPlatformStats`, {});\n};\n\nexport {\n  getBusy,\n  getContent,\n  getBuyTransaction,\n  sendBuyTransaction,\n  getListTransaction,\n  sendListTransaction,\n  updateProfile,\n  getProfileCreatedNfts,\n  getProfileOwnedNfts,\n  getProfileHistoricalNfts,\n  getProfileStats,\n  getProfileCreatedCount,\n  getProfileCollectionCount,\n  getProfileHistoricalCount,\n  queryProfileBySearch,\n  queryProfileByTradeCount,\n  queryProfileByEarnings,\n  queryNft,\n  queryNftBySearch,\n  queryNftByNewest,\n  createCollection,\n  updateCollection,\n  getCollectionStats,\n  queryCollectionByOwner,\n  queryCollectionBySearch,\n  queryUnassignedNftsByOwner,\n  setCollectionItem,\n  getCollectionItems,\n  getItemCollection,\n  queryCollectionByTradeCountScaled,\n  queryCollectionByTradeVolumeScaled,\n  queryCollectionByTradeVolume,\n  queryCollectionByValuable,\n  getPlatformStats\n};\n","/* global BigInt */\n\nimport Web3Utils from \"web3-utils\";\n\nconst toSatoshi = (x) => {\n  if (x === null || x === undefined || typeof x !== \"string\" || x === \"\") {\n    throw new Error(\"Expected string input\");\n  }\n  return (BigInt(Web3Utils.toWei(x, \"gwei\")) / 10n).toString();\n};\n\nconst toLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = BigInt(x).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst satoshiToLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = (BigInt(x) / 100000000n).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst post = async (link, data) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 300000);\n  return (\n    await fetch(link, {\n      withCredentials: true,\n      method: \"POST\",\n      signal: controller.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n  ).json();\n};\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 300000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nexport { toSatoshi, toLocaleString, satoshiToLocaleString, post, get };\n","import { Container, Row, Button, Col, Form, Spinner } from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport isPng from \"is-png\";\nimport sizeOf from \"buffer-image-size\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport { sendListTransaction, getListTransaction } from \"./api\";\nimport { toSatoshi } from \"./utils\";\n\nconst isWebp = (buffer) => {\n  if (!buffer || buffer.length < 12) {\n    return false;\n  }\n\n  return (\n    buffer[0] === 0x52 &&\n    buffer[1] === 0x49 &&\n    buffer[2] === 0x46 &&\n    buffer[3] === 0x46 &&\n    buffer[8] === 0x57 &&\n    buffer[9] === 0x45 &&\n    buffer[10] === 0x42 &&\n    buffer[11] === 0x50\n  );\n};\n\nconst MAX_CONTENT_SIZE = 10 * 1e6; // 10 MB.\nconst MAX_PREVIEW_SIZE = 1 * 1e6; // 1 MB.\n\nconst toBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(\",\")[1]);\n    reader.onerror = (error) => reject(error);\n  });\n\nfunction CreateController() {\n  const [content, setContent] = React.useState(null);\n  const [contentError, setContentError] = React.useState(\"\");\n  const [listingPrice, setListingPrice] = React.useState(\"1000\");\n  const [royalty, setRoyalty] = React.useState(0);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [preview, setPreview] = React.useState(null);\n  const [previewError, setPreviewError] = React.useState(\"\");\n  const [tags, setTags] = React.useState(\"\");\n\n  const [pending, setPending] = React.useState(false);\n  const [success, setSuccess] = React.useState(null);\n  const [address, setAddress] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  React.useEffect(() => {\n    if (content === null) {\n      setContentError(\"NFT content required\");\n      return;\n    } else if (content.size > MAX_CONTENT_SIZE) {\n      setContentError(\"NFT content size limit exceeded (max 10 MB)\");\n      return;\n    } else {\n      setContentError(\"\");\n    }\n  }, [content]);\n\n  React.useEffect(() => {\n    (async () => {\n      if (preview !== null) {\n        const f = Buffer.from(await toBase64(preview), \"base64\");\n        if (!isPng(f) && !isWebp(f)) {\n          setPreviewError(\"Cover thumbnail must be a PNG or WEBP\");\n        } else if (preview.size > MAX_PREVIEW_SIZE) {\n          setPreviewError(\"Cover file size limit exceeded (max 1 MB)\");\n        } else if (sizeOf(f).width !== 256 || sizeOf(f).height !== 256) {\n          setPreviewError(\"Cover thumbnail must have dimension 256x256\");\n        } else {\n          setPreviewError(\"\");\n        }\n      } else {\n        setPreviewError(\"Cover thumbnail required\");\n      }\n    })();\n  }, [preview]);\n\n  const doSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const getListTransactionResponse = await getListTransaction({\n      // CryptoJS expects inputs to be a utf8 string. So we encode our data\n      // into that.\n      contentHash: Hex.stringify(Sha256(Base64.parse(await toBase64(content)))),\n      price: toSatoshi(listingPrice),\n      royalty: 25 + Math.floor((royalty * 75) / 100),\n    });\n    if (\n      getListTransactionResponse === null ||\n      \"error\" in getListTransactionResponse\n    ) {\n      return;\n    }\n\n    const signed = (\n      await window.dingo.requestSignTransaction(\n        [],\n        getListTransactionResponse.vouts\n      )\n    ).result;\n\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    setPending(true);\n    const sendListTransactionResponse = await sendListTransaction({\n      content: await toBase64(content),\n      preview: preview === null ? null : await toBase64(preview),\n      name: name,\n      description: description,\n      tags: tags,\n      transaction: signed,\n    });\n    if (\n      sendListTransactionResponse === null ||\n      sendListTransactionResponse.error !== undefined\n    ) {\n      setSuccess(false);\n      return;\n    }\n\n    setPending(false);\n    setSuccess(true);\n    setAddress(sendListTransactionResponse.address);\n  };\n\n  return (\n    <div>\n      <Container className=\"App-header\">\n        <Row>\n          <h1 className=\"mt-4\">Create NFT</h1>\n          <CustomDivider />\n        </Row>\n      </Container>\n      <Container style={{ maxWidth: \"900px\" }}>\n        <Row>\n          <Col>\n            {(success === null || success === false) && (\n              <Form onSubmit={doSubmit}>\n                <Form.Group className=\"mb-3 mt-4\">\n                  <Form.Label>\n                    <b>Original content (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setContent(e.target.files[0])}\n                    isInvalid={contentError !== null && contentError !== \"\"}\n                    isValid={contentError === \"\"}\n                  />\n                  {contentError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {contentError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    Attach your original work in all it's glory. The NFT will be\n                    locked uniquely to this file (max 10 MB).\n                    <br />\n                    You can only use this file once. Only the current owner of\n                    the NFT can download this file.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Cover thumbnail (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setPreview(e.target.files[0])}\n                    isInvalid={previewError !== null && previewError !== \"\"}\n                    isValid={previewError === \"\"}\n                  />\n                  {previewError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {previewError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    Attach a thumbnail sized version for public display (256x256 PNG or WEBP; max 1 MB).\n                    <br />\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Name (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={name}\n                    placeholder=\"Max 40 characters\"\n                    onChange={(e) => setName(e.target.value)}\n                    isValid={name !== \"\" && name.length <= 40}\n                    isInvalid={name !== \"\" && name.length > 40}\n                  />\n                  {name.length > 40 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Name too long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Description (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={description}\n                    placeholder=\"Max 500 characters\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    isValid={description !== \"\" && description.length <= 500}\n                    isInvalid={description !== \"\" && description.length > 500}\n                  />\n                  {description.length > 500 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Description long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Tags (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={tags}\n                    placeholder=\"Max 100 characters; space separated\"\n                    onChange={(e) => setTags(e.target.value)}\n                    isValid={tags !== \"\" && tags.length <= 100}\n                    isInvalid={tags !== \"\" && tags.length > 100}\n                  />\n                  {tags.length > 100 && (\n                    <div>\n                      <Form.Text className=\"input-error\">Tags long</Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3 mt-2\">\n                  <Form.Label>\n                    <b>Listing price (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={listingPrice}\n                    onChange={(e) => {\n                      if (\n                        e.target.value.match(/^[0-9]+$/) &&\n                        parseInt(e.target.value) >= 1\n                      ) {\n                        setListingPrice(e.target.value);\n                      } else {\n                        setListingPrice(\"1000\");\n                      }\n                    }}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Initial selling price for your NFT in DINGO (min. 1 DINGO).\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Creator royalty (*required): </b>\n                    {(2.5 + Math.floor((royalty * 75) / 100) / 10).toFixed(1) +\n                      \"%\"}\n                  </Form.Label>\n                  <Form.Range\n                    value={royalty}\n                    onChange={(e) => setRoyalty(e.target.value)}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Royalty paid to you for every transaction of this NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <div style={{ textAlign: \"center\" }}>\n                  {success === null && pending === false && (\n                    <Button\n                      className=\"popup-button mt-4 px-4\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                      disabled={\n                        content === null ||\n                        contentError !== \"\" ||\n                        (preview !== null && previewError !== \"\")\n                      }\n                    >\n                      Create NFT\n                    </Button>\n                  )}\n                  {success === null && pending === true && (\n                    <div>\n                      <Spinner animation=\"border\" />\n                      <p>\n                        Transaction pending...\n                        <br />\n                        (DO NOT CLOSE THIS PAGE)\n                      </p>\n                    </div>\n                  )}\n                  {success === false && (\n                    <div>\n                      <p>\n                        Transaction failed!\n                        <br />\n                        Please reload this page and try again\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </Form>\n            )}\n            {success === true && (\n              <div style={{ textAlign: \"center\" }}>\n                {\" \"}\n                <h3>NFT Created!</h3>\n                <p>\n                  NFT Address: <b>{address}</b>\n                </p>\n                <div style={{ textAlign: \"center\" }}>\n                  <a href={\"/nft/\" + address}>\n                    <Button className=\"popup-button px-4\" variant=\"primary\">\n                      View NFT ►\n                    </Button>\n                  </a>\n                </div>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n    </div>\n  );\n}\n\nexport default CreateController;\n","// Assets.\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CustomDivider() {\n  return (\n    <div className=\"divider-custom\">\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n      <div className=\"divider-custom-icon mt-2 mb-2\">\n        <FontAwesomeIcon icon={faAngleDown} />\n      </div>\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n    </div>\n  );\n}\n\nexport default CustomDivider;\n","const META_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-meta\";\nconst PREVIEW_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-preview\";\nconst STATE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-state\";\nconst PROFILE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-profile\";\nconst COLLECTION_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-collection\";\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 5000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nconst getMeta = async (address) => {\n  const response = await get(`${META_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getPreviewLink = (address) => {\n  return `${PREVIEW_BUCKET}/${address}.png`;\n};\n\nconst getState = async (address) => {\n  const response = await get(`${STATE_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getProfile = async (owner) => {\n  const response = await get(`${PROFILE_BUCKET}/${owner}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getCollection = async (handle) => {\n  const response = await get(`${COLLECTION_BUCKET}/${handle}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nexport { getMeta, getPreviewLink, getState, getProfile, getCollection };\n","import React from \"react\";\nimport { getMeta, getPreviewLink, getState } from \"./storage\";\nimport { Card } from \"react-bootstrap\";\nimport { satoshiToLocaleString } from \"./utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCashRegister,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction NFTCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [name, setName] = React.useState(null);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const meta = await getMeta(props.address);\n        const previewLink = await getPreviewLink(props.address);\n        const state = await getState(props.address);\n\n        setPreviewLink(previewLink);\n        setName(meta === null ? null : meta.name);\n        setStats(state === null ? null : state.stats);\n      }\n    })();\n  }, [props.address, isVisible]);\n\n  return (\n    <Card\n      className=\"nft-card floating-borders floating-borders-press\"\n      ref={domRef}\n    >\n      <div className=\"header-box\">\n        <div className=\"spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n          </div>\n        </div>\n        <Card.Img variant=\"top\" src={previewLink} loading=\"lazy\"></Card.Img>\n      </div>\n      <hr />\n      <Card.Body>\n        <Card.Title className=\"text-start\">\n          {name === null ? \"-\" : name === \"\" ? \"Unnamed NFT\" : name}\n        </Card.Title>\n        <Card.Subtitle className=\"text-start text-muted\">{props.address}</Card.Subtitle>\n        <Card.Text>\n          <span className=\"card-price\">\n            {stats === null ? \"-\" : satoshiToLocaleString(stats.price)}\n          </span>\n          <br />\n          <span className=\"card-price-subtitle\">DINGO</span>\n        </Card.Text>\n      </Card.Body>\n      <hr />\n      <div className=\"card-sub-body text-muted\">\n        <span className=\"align-middle\">\n          <FontAwesomeIcon icon={faCashRegister} />{\" \"}\n          {stats === null ? \"-\" : satoshiToLocaleString(stats.tradeVolume)}\n        </span>\n        &nbsp;&nbsp;&nbsp;\n        <span className=\"align-middle\">\n          <FontAwesomeIcon icon={faExchangeAlt} />{\" \"}\n          {stats === null ? \"-\" : stats.tradeCount}\n        </span>\n      </div>\n    </Card>\n  );\n}\n\nexport default NFTCard;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { getCollection, getPreviewLink } from \"./storage\";\nimport { getCollectionStats } from \"./api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faCashRegister,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { toLocaleString } from \"./utils\";\n\nfunction CollectionCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [collection, setCollection] = React.useState(null);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const collection = await getCollection(props.handle);\n        setCollection(collection);\n\n        if (collection !== null) {\n          setPreviewLink(getPreviewLink(collection.thumbnail));\n\n          const stats = await getCollectionStats({ handle: props.handle });\n          setStats(stats);\n        }\n      }\n    })();\n  }, [isVisible, props.handle]);\n\n  return (\n    <Container className=\"collection-card-holder\" ref={domRef}>\n      {collection === null ||\n        (stats === null && (\n          <div className=\"collection-card d-flex flex-column\">\n            <div className=\"d-flex flex-row my-auto\">\n              <div className=\"spinner mx-auto\">\n                <div\n                  className=\"spinner-border text-primary\"\n                  role=\"status\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {collection !== null && stats !== null && (\n        <div className=\"collection-card d-flex flex-column\">\n          <img className=\"mx-auto mt-4 mb-3\" src={previewLink} />\n          <span className=\"mx-auto title\">\n            {collection !== null && collection.name}\n          </span>\n          <span className=\"truncate text-muted description\">\n            {collection !== null && collection.description}\n          </span>\n          <hr className=\"mt-auto\" />\n          <div className=\"d-flex flex-row text-muted card-sub-body\">\n            <span className=\"ms-auto\">\n              <FontAwesomeIcon icon={faList} />{\" \"}\n              {stats === null ? \"-\" : stats.count}\n            </span>\n            &nbsp;&nbsp;&nbsp;\n            <span>\n              <FontAwesomeIcon icon={faCashRegister} />{\" \"}\n              {stats === null ? \"-\" : toLocaleString(stats.tradeVolume)}\n            </span>\n            &nbsp;&nbsp;&nbsp;\n            <span className=\"me-auto\">\n              <FontAwesomeIcon icon={faExchangeAlt} />{\" \"}\n              {stats === null ? \"-\" : stats.tradeCount}\n            </span>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default CollectionCard;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getMeta } from \"./storage\";\nimport { getProfileCreatedNfts } from \"./api\";\n\nfunction CreateCollectionModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnail, setThumbnail] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const [handle, setHandle] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.owner !== undefined && props.owner !== null) {\n\n        const createdNfts = (await getProfileCreatedNfts({ owner: props.owner })).results.reverse();\n        if (createdNfts.length > 0) {\n          const createdNftNames = await Promise.all(\n            createdNfts.map(async (x) => {\n              return (await getMeta(x)).name;\n            })\n          );\n          setCreatedNfts(createdNfts.map((x, i) => [x, createdNftNames[i]]));\n          setThumbnail(createdNfts[0]);\n        }\n      }\n    })();\n  }, [props.owner]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                thumbnail: thumbnail,\n                name: name,\n                handle: handle,\n                description: description,\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Thumbnail image (*required)</b>\n            </Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isInvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnail}\n                  onChange={(e) => setThumbnail(e.target.value)}\n                >\n                  {createdNfts.map((x) => (\n                    <option key={x[0]} value={x[0]}>\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection name (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name !== \"\" && name.length <= 40}\n              isInvalid={name === \"\" || name.length > 40}\n            />\n            {name === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Name required</Form.Text>\n              </div>\n            )}\n            {name !== \"\" && name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection handle (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={handle}\n              onChange={(e) => setHandle(e.target.value)}\n              isValid={handle !== \"\" && handle.length <= 40}\n              isInvalid={handle === \"\" || handle.length > 40}\n            />\n            {handle === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Handle required</Form.Text>\n              </div>\n            )}\n            {handle !== \"\" && handle.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Handle too long</Form.Text>\n              </div>\n            )}\n            {handle !== \"\" && !handle.match(/^([a-z0-9])+$/) && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Incorrect handle format (only lowercase alphanumeric\n                  characters allowed)\n                </Form.Text>\n              </div>\n            )}\n            <Form.Text className=\"text-muted\">\n              Used for your collection's permalink. You can't change this after\n              creating the collection.\n            </Form.Text>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Collection description (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 500 characters\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              isValid={description !== \"\" && description.length <= 500}\n              isInvalid={description !== \"\" && description.length > 500}\n            />\n            {description !== \"\" && description.length > 500 && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Description too long\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                thumbnail === null ||\n                name === \"\" ||\n                name.length > 40 ||\n                handle === \"\" ||\n                handle.length > 40 ||\n                description.length > 500\n              }\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default CreateCollectionModal;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getProfileCreatedNfts } from \"./api\";\nimport { getMeta, getCollection } from \"./storage\";\n\nfunction EditCollectionModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnailIndex, setThumbnailIndex] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.handle !== undefined && props.handle !== null) {\n        const collection = await getCollection(props.handle);\n        setName(collection.name);\n        setDescription(collection.description);\n\n        const createdNfts = (await getProfileCreatedNfts({ owner: collection.owner })).results.reverse();\n        if (createdNfts.length > 0) {\n          const createdNftNames = await Promise.all(\n            createdNfts.map(async (x) => {\n              return (await getMeta(x)).name;\n            })\n          );\n          setCreatedNfts(createdNfts.map((x, i) => [x, createdNftNames[i]]));\n\n          const currentThumbnailEntry = createdNfts.map((x, i) => [x, i]).find((x) => x[0] === collection.thumbnail);\n          setThumbnailIndex(currentThumbnailEntry[1]);\n        }\n      }\n    })();\n  }, [props.handle]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                thumbnail: createdNfts[thumbnailIndex][0],\n                name: name,\n                handle: props.handle,\n                description: description\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Thumbnail image (*required)</b>\n            </Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isinvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && thumbnailIndex !== null && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnailIndex}\n                  onChange={(e) => setThumbnailIndex(e.target.value)}\n                >\n                  {createdNfts.map((x, i) => (\n                    <option key={i} value={i} >\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection name (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name !== \"\" && name.length <= 40}\n              isInvalid={name === \"\" || name.length > 40}\n            />\n            {name === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Name required</Form.Text>\n              </div>\n            )}\n            {name !== \"\" && name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Collection description (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 500 characters\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              isValid={description !== \"\" && description.length <= 500}\n              isInvalid={description !== \"\" && description.length > 500}\n            />\n            {description !== \"\" && description.length > 500 && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Description too long\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                thumbnailIndex === null ||\n                name === \"\" ||\n                name.length > 40 ||\n                description.length > 500\n              }\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default EditCollectionModal;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getProfileCreatedNfts } from \"./api\";\nimport { getMeta, getProfile } from \"./storage\";\n\nfunction EditProfileModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnailIndex, setThumbnailIndex] = React.useState(undefined);\n  const [name, setName] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.address !== undefined && props.address !== null) {\n        const profile = await getProfile(props.address);\n        if (profile === null) {\n          setName(\"\");\n        } else {\n          setName(profile.name);\n        }\n\n        const createdNfts = (\n          await getProfileCreatedNfts({ owner: props.address })\n        ).results.reverse();\n\n        let createdNftNames = await Promise.all(\n          createdNfts.map(async (x) => {\n            return (await getMeta(x)).name;\n          })\n        );\n        setCreatedNfts(\n          [[null, \"(No profile image)\"]].concat(\n            createdNfts.map((x, i) => [x, createdNftNames[i]])\n          )\n        );\n\n        const currentThumbnailEntry = [null]\n          .concat(createdNfts)\n          .map((x, i) => [x, i])\n          .find(\n            (x) =>\n              x[0] ===\n              (profile === null || profile.thumbnail === undefined\n                ? null\n                : profile.thumbnail)\n          );\n        setThumbnailIndex(currentThumbnailEntry[1]);\n      }\n    })();\n  }, [props.address]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                address: props.address,\n                thumbnail: createdNfts[thumbnailIndex][0],\n                name: name,\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Profile image (optional)</Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isinvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && thumbnailIndex !== undefined && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnailIndex}\n                  onChange={(e) => setThumbnailIndex(e.target.value)}\n                >\n                  {createdNfts.map((x, i) => (\n                    <option key={i} value={i}>\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Profile name (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name.length <= 40}\n              isInvalid={name.length > 40}\n            />\n            {name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={thumbnailIndex === null || name.length > 40}\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default EditProfileModal;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { getProfile, getPreviewLink } from \"./storage\";\nimport { getProfileCreatedCount, getProfileHistoricalCount, getProfileCollectionCount } from \"./api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faThLarge,\n  faShoppingBag\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ProfileCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [profile, setProfile] = React.useState(undefined);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible && props.address !== null) {\n        const profile = await getProfile(props.address);\n        setProfile(profile);\n\n        if (profile !== null && profile.thumbnail !== null && profile.thumbnail !== undefined) {\n          setPreviewLink(getPreviewLink(profile.thumbnail));\n        }\n\n        setStats( {\n          createdCount: await getProfileCreatedCount({owner: props.address}),\n          collectionCount: await getProfileCollectionCount({owner: props.address}),\n          historicalCount: await getProfileHistoricalCount({owner: props.address})\n        });\n      }\n    })();\n  }, [isVisible, props.address]);\n\n  return (\n    <Container className=\"profile-card-holder\" ref={domRef}>\n      {profile === undefined ||\n        (stats === null && (\n          <div className=\"profile-card d-flex flex-column\">\n            <div className=\"d-flex flex-row my-auto\">\n              <div className=\"spinner mx-auto\">\n                <div\n                  className=\"spinner-border text-primary\"\n                  role=\"status\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {profile !== undefined && stats !== null && (\n        <div className=\"profile-card d-flex flex-row\">\n          <img\n            className=\"my-auto ms-4 me-3\"\n            src={previewLink === null ? getPreviewLink('DP7CwNZ2AwbvYmFU5bQ8m49AUYLeTePsLt') : previewLink}\n          />\n          <div className=\"my-auto d-flex flex-column me-auto\">\n            <span className=\"title text-truncate text-start me-auto ms-0\">\n              {profile !== null && profile.name}\n              {profile === null && <span className=\"text-muted\">Unnamed profile</span>}\n            </span>\n            <div className=\"card-sub-body text-muted me-auto\">\n              <span className=\"ms-auto\">\n                <FontAwesomeIcon icon={faList} />{\" \"}\n                {stats === null ? \"-\" : stats.createdCount}\n              </span>\n              &nbsp;&nbsp;&nbsp;\n              <span>\n                <FontAwesomeIcon icon={faThLarge} />{\" \"}\n                {stats === null ? \"-\" : stats.collectionCount}\n              </span>\n              &nbsp;&nbsp;&nbsp;\n              <span className=\"me-auto\">\n                <FontAwesomeIcon icon={faShoppingBag} />{\" \"}\n                {stats === null ? \"-\" : stats.historicalCount - stats.createdCount}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default ProfileCard;\n","/* global BigInt */\n\nimport {\n  Container,\n  Row,\n  Button,\n  Form,\n  Nav,\n  Dropdown,\n  DropdownButton,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport { getMeta, getState, getProfile } from \"./storage\";\nimport { toSatoshi } from \"./utils\";\nimport NFTCard from \"./NFTCard\";\nimport {\n  getContent,\n  updateProfile,\n  getProfileCreatedNfts,\n  getProfileOwnedNfts,\n  getProfileHistoricalNfts,\n  createCollection,\n  updateCollection,\n  queryCollectionByOwner,\n  queryUnassignedNftsByOwner,\n  getBusy,\n  getCollectionItems,\n  setCollectionItem,\n  getItemCollection,\n  getBuyTransaction,\n  sendBuyTransaction,\n  getProfileStats,\n} from \"./api\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport CollectionCard from \"./CollectionCard\";\nimport CreateCollectionModal from \"./CreateCollectionModal\";\nimport EditCollectionModal from \"./EditCollectionModal\";\nimport EditProfileModal from \"./EditProfileModal\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { getCollection } from \"./storage\";\nimport { faPlus, faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport { satoshiToLocaleString } from \"./utils\";\nimport ProfileCard from \"./ProfileCard\";\n\nfunction ProfileController() {\n  const { profileAddress, collectionHandle, nftAddress } = useParams();\n  const location = useLocation();\n  const view =\n    profileAddress !== undefined\n      ? location.pathname.endsWith(\"/owned\")\n        ? \"profileOwned\"\n        : location.pathname.endsWith(\"/stats\")\n        ? \"profileStats\"\n        : \"profile\"\n      : collectionHandle !== undefined\n      ? \"collection\"\n      : nftAddress !== undefined\n      ? \"nft\"\n      : \"unknown\";\n\n  // Variables always required.\n  const [editProfileShow, setEditProfileShow] = React.useState(null);\n  const [profile, setProfile] = React.useState(null);\n\n  // For profile view.\n  const [createCollectionShow, setCreateCollectionShow] = React.useState(false);\n  const [collections, setCollections] = React.useState(null);\n  const [unassignedList, setUnassignedList] = React.useState(null);\n  const [profileLists, setProfileLists] = React.useState(null);\n  const [profileStats, setProfileStats] = React.useState(null);\n\n  // For collection view.\n  const [collection, setCollection] = React.useState(null);\n  const [collectionItems, setCollectionItems] = React.useState(null);\n  const [editCollectionShow, setEditCollectionShow] = React.useState(false);\n\n  // For NFT view.\n  const [nftMeta, setNftMeta] = React.useState(null);\n  const [nftState, setNftState] = React.useState(null);\n  const [nftItemCollection, setNftItemCollection] = React.useState(undefined);\n  const [nftOwner, setNftOwner] = React.useState(undefined);\n  const [nftBusy, setNftBusy] = React.useState(undefined);\n  const [resellPrice, setResellPrice] = React.useState(\"\");\n  const [resellPriceError, setResellPriceError] = React.useState(\"\");\n  const [buyResult, setBuyResult] = React.useState(null);\n  const [downloadLink, setDownloadLink] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  // Initialize for profile view, commons.\n  React.useEffect(() => {\n    if (view.startsWith(\"profile\")) {\n      (async () => {\n        // Retrieve and set profile.\n        let profile = await getProfile(profileAddress);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = profileAddress;\n        setProfile(profile);\n      })();\n    }\n  }, []);\n\n  // Initialize for profile view (cretions).\n  React.useEffect(() => {\n    if (view === \"profile\") {\n      (async () => {\n        // Retrieve and set collections.\n        const collections = await queryCollectionByOwner({\n          owner: profileAddress,\n        });\n        if (collections !== null) {\n          setCollections(collections.reverse());\n        }\n\n        // Retrieve and set unassigned list.\n        const unassignedList = await queryUnassignedNftsByOwner({\n          owner: profileAddress,\n        });\n        setUnassignedList(unassignedList.reverse());\n      })();\n    }\n  }, []);\n\n  // Initialize for profileOwned view.\n  React.useEffect(() => {\n    if (view === \"profileOwned\") {\n      (async () => {\n        setProfileLists({\n          createdNfts: (\n            await getProfileCreatedNfts({ owner: profileAddress })\n          ).results.reverse(),\n          ownedNfts: (\n            await getProfileOwnedNfts({ owner: profileAddress })\n          ).results.reverse(),\n          historicalNfts: (\n            await getProfileHistoricalNfts({ owner: profileAddress })\n          ).results.reverse(),\n        });\n      })();\n    }\n  }, []);\n\n  // Initialize for profileStats view.\n  React.useEffect(() => {\n    if (view === \"profileStats\") {\n      (async () => {\n        setProfileStats(await getProfileStats({ owner: profileAddress }));\n        console.log(await getProfileStats({ owner: profileAddress }));\n      })();\n    }\n  }, []);\n\n  // Initialize for collection view.\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"collection\") {\n        const collection = await getCollection(collectionHandle);\n        collection.handle = collectionHandle;\n        setCollection(collection);\n        let profile = await getProfile(collection.owner);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = collection.owner;\n        setProfile(profile);\n        setCollectionItems(\n          (await getCollectionItems({ handle: collectionHandle })).reverse()\n        );\n      }\n    })();\n  }, []);\n\n  // Initialize for nft view.\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"nft\") {\n        const nftMeta = await getMeta(nftAddress);\n        setNftMeta(nftMeta);\n        const nftState = await getState(nftAddress);\n        setNftState(nftState);\n\n        const nftItemCollectionHandle = (\n          await getItemCollection({\n            address: nftAddress,\n          })\n        ).handle;\n        if (nftItemCollectionHandle === null) {\n          setNftItemCollection(null);\n        } else {\n          const collection = await getCollection(nftItemCollectionHandle);\n          collection.handle = nftItemCollectionHandle;\n          setNftItemCollection(collection);\n        }\n\n        if (nftState !== null && nftState.owner !== nftState.creator) {\n          let nftOwner = await getProfile(nftState.owner);\n          if (nftOwner === null) {\n            nftOwner = {};\n          }\n          nftOwner.address = nftState.owner;\n          setNftOwner(nftOwner);\n        } else {\n          setNftOwner(null);\n        }\n\n        if (nftState !== null && nftMeta !== null) {\n          let profile = await getProfile(nftState.creator);\n          if (profile === null) {\n            profile = {};\n          }\n          profile.address = nftState.creator;\n          setProfile(profile);\n        }\n\n        setNftBusy(await getBusy({ address: nftAddress }));\n      }\n    })();\n  }, []);\n\n  // Effect for NFT view.\n  React.useEffect(() => {\n    if (resellPrice === \"\") {\n      setResellPriceError(\"Resell price required\");\n    } else if (nftState !== null) {\n      if (\n        BigInt(toSatoshi(resellPrice)) >\n        BigInt(10) * BigInt(nftState.stats.price)\n      ) {\n        setResellPriceError(\n          `Resell price must be at most 10x the current price`\n        );\n      } else {\n        setResellPriceError(\"\");\n      }\n    } else {\n      setResellPriceError(\"\");\n    }\n  }, [resellPrice, nftState]);\n\n  const doEditProfileSubmit = async (profile) => {\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const payload = {\n      timestamp: Date.now(),\n      owner: profileAddress,\n      name: profile.name,\n      thumbnail: profile.thumbnail,\n    };\n    const message = JSON.stringify(payload);\n\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    const updateResult = await updateProfile(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doCreateCollectionSubmit = async (collection) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      owner: profileAddress,\n      handle: collection.handle,\n      name: collection.name,\n      thumbnail: collection.thumbnail,\n      description: collection.description,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await createCollection(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doEditCollectionSubmit = async (collection) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      handle: collection.handle,\n      name: collection.name,\n      thumbnail: collection.thumbnail,\n      description: collection.description,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await updateCollection(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doMove = async (address, handle) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      address: address,\n      handle: handle,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await setCollectionItem(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doDownload = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const timestamp = Date.now();\n    const message = `${nftAddress}|${timestamp}`;\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n\n    const result = await getContent({\n      address: nftAddress,\n      timestamp: timestamp,\n      signature: signResult.result,\n    });\n    if (result === null || result.error !== undefined) {\n      return;\n    }\n\n    if (result.content !== undefined) {\n      setDownloadLink(result.content);\n    }\n  };\n\n  const doBuy = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const { vins, vouts } = await getBuyTransaction({\n      address: nftAddress,\n      price: toSatoshi(resellPrice),\n    });\n    const signed = (await window.dingo.requestSignTransaction(vins, vouts))\n      .result;\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    const result = await sendBuyTransaction({ transaction: signed });\n    setBuyResult(result);\n  };\n\n  return (\n    <div className=\"profile-container justify-content-center mx-auto\">\n      <Container>\n        {view.startsWith(\"profile\") && profile !== null && (\n          <Row>\n            <div className=\"profile-section profile-header mt-3 pt-3\">\n              <div className=\"d-flex flex-row\">\n                <span\n                  className=\"clickable ms-auto\"\n                  onClick={() => setEditProfileShow(true)}\n                >\n                  <FontAwesomeIcon className=\"me-1\" icon={faPen} /> Edit\n                </span>\n              </div>\n              <div className=\"d-flex flex-row\">\n                <ul className=\"profile-cards-container mt-4 mx-auto mb-4\">\n                  <ProfileCard address={profileAddress} />\n                </ul>\n              </div>\n              <hr />\n              <Nav variant=\"tabs\" className=\"custom-nav-tabs\">\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"creations\"\n                    active={\n                      view === \"profile\" ||\n                      view === \"collection\" ||\n                      view === \"nft\"\n                    }\n                    href={`/profile/${profile.address}/`}\n                  >\n                    NFT creations\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"unassigned\"\n                    active={view === \"profileOwned\"}\n                    href={`/profile/${profile.address}/owned`}\n                  >\n                    Owned NFTs\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"unassigned\"\n                    active={view === \"profileStats\"}\n                    href={`/profile/${profile.address}/stats`}\n                  >\n                    Stats\n                  </Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </div>\n          </Row>\n        )}\n\n        {view === \"profile\" && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                <span className=\"me-auto content-title accent\">\n                  Collections\n                </span>\n                <span\n                  className=\"clickable\"\n                  onClick={() => setCreateCollectionShow(true)}\n                >\n                  <FontAwesomeIcon className=\"me-1\" icon={faPlus} /> Create new\n                </span>\n              </div>\n              {collections !== null && collections.length > 0 && (\n                <ul className=\"collection-cards-container mt-4\">\n                  {collections.map((x) => (\n                    <a key={x} href={`/collection/${x}`}>\n                      <CollectionCard handle={x} />\n                    </a>\n                  ))}\n                </ul>\n              )}\n              {collections !== null && collections.length === 0 && (\n                <div className=\"d-flex flex-row mt-2 mb-2\">\n                  <span className=\"mx-auto text-muted\">\n                    User has no collection\n                  </span>\n                </div>\n              )}\n            </div>\n          </Row>\n        )}\n\n        {view === \"profile\" &&\n          unassignedList !== null &&\n          unassignedList.length > 0 && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Unassigned NFTs\n                  </span>\n                </div>\n                <ul className=\"cards-container mt-4\">\n                  {unassignedList.map((x) => (\n                    <div key={x}>\n                      <a href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                      <DropdownButton\n                        className=\"mt-2 mb-4 px-4\"\n                        title=\"Move to collection\"\n                      >\n                        {collections !== null &&\n                          collections.map((y) => (\n                            <Dropdown.Item key={y} onClick={() => doMove(x, y)}>\n                              {y}\n                            </Dropdown.Item>\n                          ))}\n                      </DropdownButton>\n                    </div>\n                  ))}\n                </ul>\n              </div>\n            </Row>\n          )}\n\n        {view === \"profileOwned\" &&\n          profileLists !== null &&\n          profileLists.ownedNfts.filter(\n            (x) => !profileLists.createdNfts.some((y) => y === x)\n          ).length > 0 && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Owned NFTs\n                  </span>\n                </div>\n                <ul className=\"cards-container mt-4\">\n                  {profileLists.ownedNfts\n                    .filter(\n                      (x) => !profileLists.createdNfts.some((y) => y === x)\n                    )\n                    .map((x) => (\n                      <a key={x} href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                    ))}\n                </ul>\n              </div>\n            </Row>\n          )}\n\n        {view === \"profileOwned\" &&\n          profileLists !== null &&\n          profileLists.historicalNfts\n            .filter((x) => !profileLists.createdNfts.some((y) => y === x))\n            .filter((x) => !profileLists.ownedNfts.some((y) => y === x))\n            .length > 0 && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Previously owned NFTs\n                  </span>\n                </div>\n                <ul className=\"cards-container mt-4\">\n                  {profileLists.historicalNfts\n                    .filter(\n                      (x) => !profileLists.createdNfts.some((y) => y === x)\n                    )\n                    .filter((x) => !profileLists.ownedNfts.some((y) => y === x))\n                    .map((x) => (\n                      <a key={x} href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                    ))}\n                </ul>\n              </div>\n            </Row>\n          )}\n\n        {view === \"profileStats\" && profileStats !== null && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                <span className=\"me-auto content-title accent\">\n                  Profile Stats\n                </span>\n              </div>\n              <div className=\"mt-4 px-2\">\n                <p>\n                  <b>NFT creations</b>\n                  <ul>\n                    <li>NFTs created: {profileStats.listCount}</li>\n                    <li>Times sold: {profileStats.listSoldCount}</li>\n                    <li>\n                      Total royalties:{\" \"}\n                      {satoshiToLocaleString(profileStats.royaltyVolume)}\n                    </li>\n                  </ul>\n                </p>\n\n                <p>\n                  <b>Trades</b>\n                  <ul>\n                    <li>NFTs bought/sold: {profileStats.tradeCount}</li>\n                    <li>\n                      Total purchases:{\" \"}\n                      {satoshiToLocaleString(profileStats.buyVolume)}\n                    </li>\n                    <li>\n                      Total sales:{\" \"}\n                      {satoshiToLocaleString(profileStats.sellVolume)}\n                    </li>\n                  </ul>\n                </p>\n\n                <p>\n                  <b>Overall</b>\n                  <ul>\n                    <li>\n                      Total Earnings:{\" \"}\n                      {satoshiToLocaleString(\n                        BigInt(profileStats.royaltyVolume) +\n                          BigInt(profileStats.sellVolume) -\n                          BigInt(profileStats.buyVolume)\n                      )}\n                    </li>\n                  </ul>\n                </p>\n              </div>\n            </div>\n          </Row>\n        )}\n\n        {view === \"collection\" && collection !== null && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              {profile !== null && (\n                <div className=\"d-flex flex-row content-header\">\n                  <div\n                    className=\"text-truncate me-auto\"\n                    style={{ display: \"inline\" }}\n                  >\n                    <span className=\"content-title accent\">\n                      Collection by:{\" \"}\n                    </span>\n                    <a\n                      className=\"simple-link\"\n                      href={`/profile/${profile.address}/`}\n                    >\n                      {profile.name === \"\" ||\n                      profile.name === null ||\n                      profile.name === undefined\n                        ? profile.address\n                        : profile.name}\n                    </a>\n                  </div>\n                  <span\n                    className=\"clickable ms-auto\"\n                    onClick={() => setEditCollectionShow(true)}\n                  >\n                    <nobr>\n                      <FontAwesomeIcon className=\"me-1\" icon={faPen} /> Edit\n                    </nobr>\n                  </span>\n                </div>\n              )}\n              <div className=\"d-flex flex-row\">\n                <ul className=\"collection-cards-container mt-4 mx-auto mb-4\">\n                  <CollectionCard handle={collectionHandle} />\n                </ul>\n              </div>\n            </div>\n          </Row>\n        )}\n        {view === \"collection\" && collection !== null && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <ul className=\"cards-container mt-4\">\n                {collectionItems !== null &&\n                  collectionItems.map((x) => (\n                    <a key={x} href={`/nft/${x}`}>\n                      <NFTCard address={x} />\n                    </a>\n                  ))}\n              </ul>\n            </div>\n          </Row>\n        )}\n\n        {view === \"nft\" &&\n          nftMeta !== null &&\n          nftItemCollection !== undefined &&\n          nftOwner !== undefined && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  {nftItemCollection === null && profile !== null && (\n                    <div className=\"text-truncate\">\n                      <span className=\"content-title accent\">Created by: </span>\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          profile !== null && `/profile/${profile.address}/`\n                        }\n                      >\n                        {profile.name === \"\" ||\n                        profile.name === null ||\n                        profile.name === undefined\n                          ? profile.address\n                          : profile.name}\n                      </a>\n                    </div>\n                  )}\n                  {nftItemCollection !== null && (\n                    <div className=\"text-truncate\">\n                      <span className=\"content-title accent\">\n                        In collection:{\" \"}\n                      </span>\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          profile !== null &&\n                          `/collection/${nftItemCollection.handle}/`\n                        }\n                      >\n                        {nftItemCollection.name}\n                      </a>\n                    </div>\n                  )}\n                </div>\n                <div>\n                  <ul className=\"cards-container mt-4\">\n                    <NFTCard address={nftAddress} />\n                  </ul>\n                  {nftOwner !== null && (\n                    <div className=\"text-center mt-4\">\n                      <span className=\"content-title accent\">\n                        <b>Owned by: </b>\n                      </span>\n                      <a\n                        className=\"simple-link\"\n                        href={`/profile/${nftOwner.address}/owned`}\n                      >\n                        {nftOwner.name === \"\" ||\n                        nftOwner.name === null ||\n                        nftOwner.name === undefined\n                          ? nftOwner.address\n                          : nftOwner.name}\n                      </a>\n                    </div>\n                  )}\n                  <div className=\"text-center mt-4 text-break\">\n                    <span>\n                      <b>{nftMeta.name}</b>\n                    </span>\n                    <p className=\"text-center\">\n                      <i>{nftMeta.description}</i>\n                    </p>\n                  </div>\n                  {\n                    <div className=\"d-flex flex-row mt-4\">\n                      <span className=\"ms-auto accent\">\n                        <b>Original content:</b>\n                      </span>\n                      &nbsp;\n                      {downloadLink === null && (\n                        <span\n                          className=\"me-auto clickable\"\n                          onClick={doDownload}\n                        >\n                          Verify ownership\n                        </span>\n                      )}\n                      {downloadLink !== null && (\n                        <a\n                          className=\"simple-link me-auto\"\n                          href={downloadLink}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          Link\n                        </a>\n                      )}\n                    </div>\n                  }\n                </div>\n              </div>\n            </Row>\n          )}\n\n        {view === \"nft\" && nftMeta !== null && nftItemCollection !== undefined && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                <span className=\"me-auto content-title accent\">\n                  Buy this NFT\n                </span>\n              </div>\n              <div>\n                {nftBusy !== undefined && nftBusy !== null && (\n                  <div className=\"mt-4 text-center\">\n                    {\" \"}\n                    <h5>NFT busy</h5>\n                    <p>\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          \"https://openchains.info/coin/dingocoin/tx/\" +\n                          nftBusy.txid\n                        }\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                      >\n                        A transaction\n                      </a>{\" \"}\n                      is currenly being confirmed for this NFT. <br />\n                      Please try again in a few minutes.\n                    </p>\n                  </div>\n                )}\n                {nftBusy !== undefined &&\n                  nftBusy === null &&\n                  buyResult === null && (\n                    <div className=\"d-flex flex-column\">\n                      <div className=\"mt-4 text-center px-4\">\n                        <Form.Group>\n                          <Form.Label>\n                            <b>Resell at (*required)</b>\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={resellPrice}\n                            onChange={(e) => {\n                              if (e.target.value.match(/^[0-9]*$/)) {\n                                setResellPrice(e.target.value);\n                              }\n                            }}\n                            style={{ textAlign: \"center\" }}\n                            isInvalid={resellPriceError !== \"\"}\n                          />\n                          {resellPriceError && (\n                            <div>\n                              <Form.Text className=\"input-error\">\n                                {resellPriceError}\n                              </Form.Text>\n                            </div>\n                          )}\n                          <Form.Text className=\"text-muted\">\n                            New price you want to sell this NFT for (min. 1\n                            Dingocoin).\n                          </Form.Text>\n                        </Form.Group>\n                      </div>\n                      <div className=\"d-flex flex-row\">\n                        <Button\n                          className=\"popup-button mt-4 mx-auto px-4\"\n                          style={{ width: \"auto\" }}\n                          disabled={resellPriceError !== \"\"}\n                          onClick={doBuy}\n                        >\n                          Buy and resell NFT\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                {buyResult !== null && buyResult.error === undefined && (\n                  <div className=\"mt-4 text-center\">\n                    {\" \"}\n                    <h4>Transaction submitted!</h4>\n                    <p>\n                      Transaction ID:{\" \"}\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          \"https://openchains.info/coin/dingocoin/tx/\" +\n                          buyResult.txid\n                        }\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                      >\n                        {buyResult.txid}\n                      </a>\n                      <br />\n                      It may take a few minutes for your transaction to be\n                      confirmed.\n                    </p>\n                  </div>\n                )}\n                {buyResult !== null && buyResult.error !== undefined && (\n                  <div style={{ textAlign: \"center\" }} className=\"mt-4\">\n                    {\" \"}\n                    <h4>Transaction failed!</h4>\n                    <p>\n                      - Make sure that your wallet has no pending transaction.\n                      <br />- You can't buy this NFT as its owner/creator.\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </Row>\n        )}\n      </Container>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n\n      {(view === \"profile\" || view === \"profileOwned\") && (\n        <EditProfileModal\n          title=\"Edit profile\"\n          show={editProfileShow}\n          onHide={() => setEditProfileShow(false)}\n          address={profileAddress}\n          onSubmit={doEditProfileSubmit}\n        />\n      )}\n\n      {view === \"profile\" && (\n        <CreateCollectionModal\n          title=\"Create new collection\"\n          show={createCollectionShow}\n          owner={profileAddress}\n          onHide={() => setCreateCollectionShow(false)}\n          onSubmit={doCreateCollectionSubmit}\n        />\n      )}\n\n      {view === \"collection\" && collection !== null && (\n        <EditCollectionModal\n          title=\"Edit collection\"\n          show={editCollectionShow}\n          handle={collection.handle}\n          onHide={() => setEditCollectionShow(false)}\n          onSubmit={doEditCollectionSubmit}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ProfileController;\n","import {\n  Row,\n  Tab,\n  Nav,\n  Button,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryCollectionByTradeCountScaled,\n  queryCollectionByTradeVolume,\n  queryCollectionBySearch,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport CollectionCard from \"./CollectionCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBolt,\n  faFire,\n  faSearch,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ExploreCollectionsController() {\n  const location = useLocation();\n  let view = location.pathname.split(\"/\").pop();\n  view = [\"top\", \"search\"].includes(view) ? view : \"hot\";\n\n  // For explore view.\n  const [collectionList, setCollectionList] = React.useState(null);\n  const [search, setSearch] = React.useState(\"\");\n  const [searchEntries, setSearchEntries] = React.useState(undefined);\n\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"hot\") {\n        const l = await queryCollectionByTradeCountScaled();\n        setCollectionList(l.results);\n      } else if (view === \"top\") {\n        const l = await queryCollectionByTradeVolume();\n        setCollectionList(l.results);\n      } else if (view === \"search\") {\n        const queryParam = new URLSearchParams(location.search).get(\"query\");\n        if (queryParam === null) {\n          setSearch(\"\");\n          setSearchEntries(null);\n        } else {\n          setSearch(queryParam);\n          setSearchEntries(\n            (await queryCollectionBySearch({ search: queryParam })).results\n          );\n        }\n      }\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/collections/search?query=${search.trim()}`);\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Explore Collections</h1>\n      </div>\n      {[\"hot\", \"top\", \"search\"].includes(view) && (\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <Row>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n              <Nav.Item className=\"ms-auto text-center\">\n                <Nav.Link href=\"/collections/\" active={view === \"hot\"}>\n                  <FontAwesomeIcon icon={faBolt} className=\"me-2\" />\n                  Trending\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"text-center\">\n                <Nav.Link href=\"/collections/top\" active={view === \"top\"}>\n                  <FontAwesomeIcon icon={faFire} className=\"me-2\" />\n                  Top\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto text-center\">\n                <Nav.Link href=\"/collections/search\" active={view === \"search\"}>\n                  <FontAwesomeIcon icon={faSearch} className=\"me-2\" />\n                  Search\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </Row>\n          <Row>\n            {[\"hot\", \"top\"].includes(view) && collectionList !== null && (\n              <Tab.Content>\n                <ul className=\"collection-cards-container mt-4\">\n                  {collectionList.map((x) => (\n                    <a key={x} href={`/collection/${x}`}>\n                      <CollectionCard handle={x} />\n                    </a>\n                  ))}\n                </ul>\n              </Tab.Content>\n            )}\n            {[\"search\"].includes(view) && (\n              <Tab.Content>\n                <div className=\"d-flex flex-column\">\n                  <Form\n                    style={{ maxWidth: \"584px\", width: \"100%\" }}\n                    onSubmit={doSearch}\n                    className=\"mx-auto\"\n                  >\n                    <InputGroup className=\"mt-4\">\n                      <InputGroup.Text id=\"basic-addon1\">\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n                      {search !== null && (\n                        <FormControl\n                          className=\"search-box\"\n                          placeholder={\"Search in collections...\"}\n                          value={search}\n                          autoFocus=\"true\"\n                          onChange={(e) => {\n                            if (e.target.value.length <= 50) {\n                              setSearch(e.target.value);\n                            }\n                          }}\n                        />\n                      )}\n                      {search !== \"\" && (\n                        <Button variant=\"primary\" type=\"submit\">\n                          <FontAwesomeIcon icon={faArrowRight} />\n                        </Button>\n                      )}\n                    </InputGroup>\n                  </Form>\n                  <ul className=\"collection-cards-container mt-4\">\n                    {searchEntries === null && (\n                      <div className=\"d-flex flex-row\">\n                        <p className=\"mx-auto text-muted\" animation=\"border\">\n                          Search in collections using the search box above\n                        </p>\n                      </div>\n                    )}\n                    {searchEntries === undefined && (\n                      <div className=\"d-flex flex-row\">\n                        <Spinner className=\"mx-auto\" animation=\"border\" />\n                      </div>\n                    )}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.map((x) => (\n                        <a key={x} href={`/collection/${x}`}>\n                          <CollectionCard handle={x} />\n                        </a>\n                      ))}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.length === 0 && (\n                        <div className=\"d-flex flex-row\">\n                          <p className=\"mx-auto text-muted\" animation=\"border\">\n                            No matching collection\n                          </p>\n                        </div>\n                      )}\n                  </ul>\n                </div>\n              </Tab.Content>\n            )}\n          </Row>\n        </Tab.Container>\n      )}\n    </div>\n  );\n}\n\nexport default ExploreCollectionsController;\n","import {\n  Row,\n  Tab,\n  Nav,\n  Button,\n  Dropdown,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryNftByNewest,\n  queryNft,\n  queryNftBySearch,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faSearch,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NFTCard from \"./NFTCard\";\n\nfunction ExploreNftsController() {\n  const location = useLocation();\n  let view = location.pathname.split(\"/\").pop();\n  view = [\"search\"].includes(view) ? view : \"all\";\n\n  // For explore view.\n  const [nftList, setNftList] = React.useState(null);\n  const [nftListEnd, setNftListEnd] = React.useState(false);\n  const [queryText, setQueryText] = React.useState(\"Newly listed\");\n  const [search, setSearch] = React.useState(\"\");\n  const [searchEntries, setSearchEntries] = React.useState(undefined);\n\n  const [viewMoreEnabled, setViewMoreEnabled] = React.useState(true);\n\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"all\") {\n        const l = (await queryNftByNewest({ beforeId: null })).results;\n        if (l.length < 100) {\n          setNftListEnd(true);\n        }\n        setNftList(l);\n      } else if (view === \"search\") {\n        const queryParam = new URLSearchParams(location.search).get(\"query\");\n        if (queryParam === null) {\n          setSearch(\"\");\n          setSearchEntries(null);\n        } else {\n          setSearch(queryParam);\n          setSearchEntries(\n            (await queryNftBySearch({ search: queryParam })).results\n          );\n        }\n      }\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/nfts/search?query=${search.trim()}`);\n    }\n  };\n\n  const doChangeQuery = async (eventKey, event) => {\n    const [key, direction] = eventKey.split(\"|\");\n    setQueryText(event.target.innerText);\n\n    setNftListEnd(false);\n    if (key === \"listHeight\") {\n      const l = (await queryNftByNewest({ beforeId: null })).results;\n      if (l.length < 100) {\n        setNftListEnd(true);\n      }\n      setNftList(l);\n      setViewMoreEnabled(true);\n    } else {\n      const l = await queryNft({\n        key: key,\n        direction: direction,\n        limit: 100,\n        offset: 0,\n      });\n      setNftList(\n        l.results.map((x) => {\n          return {\n            address: x,\n          };\n        })\n      );\n      setViewMoreEnabled(false);\n    }\n  };\n\n  const onViewMore = async () => {\n    const l = (\n      await queryNftByNewest({ beforeId: nftList[nftList.length - 1].id })\n    ).results;\n    if (l.length < 100) {\n      setNftListEnd(true);\n    }\n    setNftList(nftList.concat(l));\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Explore Nfts</h1>\n      </div>\n      {[\"all\", \"search\"].includes(view) && (\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <Row>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n              <Nav.Item className=\"ms-auto text-center\">\n                <Nav.Link href=\"/nfts\" active={view === \"all\"}>\n                  <FontAwesomeIcon icon={faList} className=\"me-2\" />\n                  All NFTs\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto text-center\">\n                <Nav.Link href=\"/nfts/search\" active={view === \"search\"}>\n                  <FontAwesomeIcon icon={faSearch} className=\"me-2\" />\n                  Search\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </Row>\n          <Row>\n            {view === \"all\" && (\n              <Tab.Content>\n                <Dropdown\n                  onSelect={doChangeQuery}\n                  style={{ textAlign: \"center\" }}\n                >\n                  <Dropdown.Toggle className=\"px-4 mt-4\">\n                    {queryText}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"listHeight|DESC\">\n                      Newly listed\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeHeight|DESC\">\n                      Recently sold\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"price|DESC\">\n                      Highest price\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"price|ASC\">\n                      Lowest price\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeCount|DESC\">\n                      Highest trade count\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeCount|ASC\">\n                      Lowest trade count\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeVolume|DESC\">\n                      Highest trade volume\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeVolume|ASC\">\n                      Lowest trade volume\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                <ul className=\"cards-container mt-4\">\n                  {nftList !== null &&\n                    nftList.map((x) => (\n                      <a key={x.address} href={`/nft/${x.address}`}>\n                        <NFTCard address={x.address} />\n                      </a>\n                    ))}\n                  {viewMoreEnabled && nftList !== null && !nftListEnd && (\n                    <Button onClick={onViewMore}>View more</Button>\n                  )}\n                </ul>\n              </Tab.Content>\n            )}\n            {[\"search\"].includes(view) && (\n              <Tab.Content>\n                <div className=\"d-flex flex-column\">\n                  <Form\n                    style={{ maxWidth: \"584px\", width: \"100%\" }}\n                    onSubmit={doSearch}\n                    className=\"mx-auto\"\n                  >\n                    <InputGroup className=\"mt-4\">\n                      <InputGroup.Text id=\"basic-addon1\">\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n                      {search !== null && (\n                        <FormControl\n                          autoFocus=\"true\"\n                          className=\"search-box\"\n                          placeholder={\"Search in NFTs...\"}\n                          value={search}\n                          onChange={(e) => {\n                            if (e.target.value.length <= 50) {\n                              setSearch(e.target.value);\n                            }\n                          }}\n                        />\n                      )}\n                      {search !== \"\" && (\n                        <Button variant=\"primary\" type=\"submit\">\n                          <FontAwesomeIcon icon={faArrowRight} />\n                        </Button>\n                      )}\n                    </InputGroup>\n                  </Form>\n                  <ul className=\"cards-container mt-4\">\n                    {searchEntries === null && (\n                      <div className=\"d-flex flex-row\">\n                        <p className=\"mx-auto text-muted\" animation=\"border\">\n                          Search in NFTs using the search box above\n                        </p>\n                      </div>\n                    )}\n                    {searchEntries === undefined && (\n                      <div className=\"d-flex flex-row\">\n                        <Spinner className=\"mx-auto\" animation=\"border\" />\n                      </div>\n                    )}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.map((x) => (\n                        <a key={x.address} href={`/nft/${x}`}>\n                          <NFTCard address={x} />\n                        </a>\n                      ))}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.length === 0 && (\n                        <div className=\"d-flex flex-row\">\n                          <p className=\"mx-auto text-muted\" animation=\"border\">\n                            No matching NFT\n                          </p>\n                        </div>\n                      )}\n                  </ul>\n                </div>\n              </Tab.Content>\n            )}\n          </Row>\n        </Tab.Container>\n      )}\n    </div>\n  );\n}\n\nexport default ExploreNftsController;\n","import {\n  Row,\n  Tab,\n  Nav,\n  Button,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryProfileBySearch,\n  queryProfileByTradeCount,\n  queryProfileByEarnings,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faArrowRight,\n  faBullseye,\n  faCoins,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ProfileCard from \"./ProfileCard\";\n\nfunction ExploreProfilesController() {\n  const location = useLocation();\n  let view = location.pathname.split(\"/\").pop();\n  view = [\"earnings\", \"search\"].includes(view) ? view : \"influence\";\n\n  // For explore view.\n  const [profileList, setProfileList] = React.useState(null);\n  const [search, setSearch] = React.useState(\"\");\n  const [searchEntries, setSearchEntries] = React.useState(undefined);\n\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"influence\") {\n        const l = await queryProfileByTradeCount();\n        setProfileList(l.results);\n      } else if (view === \"earnings\") {\n        const l = await queryProfileByEarnings();\n        setProfileList(l.results);\n      } else if (view === \"search\") {\n        const queryParam = new URLSearchParams(location.search).get(\"query\");\n        if (queryParam === null) {\n          setSearch(\"\");\n          setSearchEntries(null);\n        } else {\n          setSearch(queryParam);\n          setSearchEntries(\n            (await queryProfileBySearch({ search: queryParam })).results\n          );\n        }\n      }\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/profiles/search?query=${search.trim()}`);\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Explore Profiles</h1>\n      </div>\n      {[\"influence\", \"earnings\", \"search\"].includes(view) && (\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <Row>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n              <Nav.Item className=\"ms-auto text-center\">\n                <Nav.Link href=\"/profiles\" active={view === \"influence\"}>\n                  <FontAwesomeIcon icon={faBullseye} className=\"me-2\" />\n                  Influence\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"text-center\">\n                <Nav.Link\n                  href=\"/profiles/earnings\"\n                  active={view === \"earnings\"}\n                >\n                  <FontAwesomeIcon icon={faCoins} className=\"me-2\" />\n                  Earnings\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto text-center\">\n                <Nav.Link href=\"/profiles/search\" active={view === \"search\"}>\n                  <FontAwesomeIcon icon={faSearch} className=\"me-2\" />\n                  Search\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </Row>\n          <Row>\n            {[\"influence\", \"earnings\"].includes(view) && profileList !== null && (\n              <Tab.Content>\n                <ul className=\"profile-cards-container mt-4\">\n                  {profileList !== null &&\n                    profileList.map((x) => (\n                      <a key={x} href={`/profile/${x}`}>\n                        <ProfileCard address={x} />\n                      </a>\n                    ))}\n                </ul>\n              </Tab.Content>\n            )}\n            {[\"search\"].includes(view) && (\n              <Tab.Content>\n                <div className=\"d-flex flex-column\">\n                  <Form\n                    style={{ maxWidth: \"584px\", width: \"100%\" }}\n                    onSubmit={doSearch}\n                    className=\"mx-auto\"\n                  >\n                    <InputGroup className=\"mt-4\">\n                      <InputGroup.Text id=\"basic-addon1\">\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n                      {search !== null && (\n                        <FormControl\n                          className=\"search-box\"\n                          placeholder={\"Search in profiles...\"}\n                          value={search}\n                          autoFocus=\"true\"\n                          onChange={(e) => {\n                            if (e.target.value.length <= 50) {\n                              setSearch(e.target.value);\n                            }\n                          }}\n                        />\n                      )}\n                      {search !== \"\" && (\n                        <Button variant=\"primary\" type=\"submit\">\n                          <FontAwesomeIcon icon={faArrowRight} />\n                        </Button>\n                      )}\n                    </InputGroup>\n                  </Form>\n                  <ul className=\"profile-cards-container mt-4\">\n                    {searchEntries === null && (\n                      <div className=\"d-flex flex-row\">\n                        <p className=\"mx-auto text-muted\" animation=\"border\">\n                          Search in profiles using the search box above\n                        </p>\n                      </div>\n                    )}\n                    {searchEntries === undefined && (\n                      <div className=\"d-flex flex-row\">\n                        <Spinner className=\"mx-auto\" animation=\"border\" />\n                      </div>\n                    )}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.map((x) => (\n                        <a key={x} href={`/profile/${x}`}>\n                          <ProfileCard address={x} />\n                        </a>\n                      ))}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.length === 0 && (\n                        <div className=\"d-flex flex-row\">\n                          <p className=\"mx-auto text-muted\" animation=\"border\">\n                            No matching profile\n                          </p>\n                        </div>\n                      )}\n                  </ul>\n                </div>\n              </Tab.Content>\n            )}\n          </Row>\n        </Tab.Container>\n      )}\n    </div>\n  );\n}\n\nexport default ExploreProfilesController;\n","import {\n  Row,\n  Tab,\n  Nav,\n  Button,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryNftBySearch,\n  queryCollectionBySearch,\n  queryProfileBySearch,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport CollectionCard from \"./CollectionCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBolt,\n  faList,\n  faSearch,\n  faArrowRight,\n  faUserCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NFTCard from \"./NFTCard\";\nimport ProfileCard from \"./ProfileCard\";\n\nfunction SearchController() {\n  const location = useLocation();\n\n  // For search view.\n  const [search, setSearch] = React.useState(\"\");\n  const [searchSubView, setSearchSubView] = React.useState(null);\n  const [searchNfts, setSearchNfts] = React.useState(null);\n  const [searchCollections, setSearchCollections] = React.useState(null);\n  const [searchProfiles, setSearchProfiles] = React.useState(null);\n\n  React.useEffect(() => {\n    (async () => {\n      setSearch(new URLSearchParams(location.search).get(\"query\"));\n      await doChangeSearchSubview(\"nfts\");\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/search?query=${search.trim()}`);\n    }\n  };\n\n  const doChangeSearchSubview = async (subview) => {\n    // TODO: Figure out a more elegant way to retrieve this from the existing react state.\n    const search = new URLSearchParams(location.search).get(\"query\");\n\n    setSearchSubView(subview);\n\n    if (subview === \"nfts\" && searchNfts === null) {\n      setSearchNfts((await queryNftBySearch({ search: search })).results);\n    }\n    if (subview === \"collections\" && searchCollections === null) {\n      setSearchCollections(\n        (await queryCollectionBySearch({ search: search })).results\n      );\n    }\n    if (subview === \"profiles\" && searchProfiles === null) {\n      setSearchProfiles(\n        (await queryProfileBySearch({ search: search })).results\n      );\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Search 🔍</h1>\n        <Form onSubmit={doSearch}>\n          <InputGroup className=\"mt-4\">\n            <InputGroup.Text id=\"basic-addon1\">\n              <FontAwesomeIcon icon={faSearch} />\n            </InputGroup.Text>\n            {search !== null && (\n              <FormControl\n                className=\"search-box\"\n                placeholder={\"Search NFTs, collections, profiles...\"}\n                value={search}\n                onChange={(e) => {\n                  if (e.target.value.length <= 50) {\n                    setSearch(e.target.value);\n                  }\n                }}\n              />\n            )}\n            {search !== \"\" && (\n              <Button variant=\"primary\" type=\"submit\">\n                <FontAwesomeIcon icon={faArrowRight} />\n              </Button>\n            )}\n          </InputGroup>\n        </Form>\n      </div>\n      <Tab.Container\n        id=\"left-tabs-example\"\n        activeKey={searchSubView}\n        onSelect={doChangeSearchSubview}\n      >\n        <Row>\n          <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n            <Nav.Item className=\"ms-auto text-center\">\n              <Nav.Link eventKey=\"nfts\">\n                <FontAwesomeIcon icon={faList} className=\"me-2\" />\n                NFTs\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item className=\"text-center\">\n              <Nav.Link eventKey=\"collections\">\n                <FontAwesomeIcon icon={faBolt} className=\"me-2\" />\n                Collections\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item className=\"me-auto text-center\">\n              <Nav.Link eventKey=\"profiles\">\n                <FontAwesomeIcon icon={faUserCircle} className=\"me-2\" />\n                Profiles\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <hr className=\"light-border\" />\n        </Row>\n        <Row>\n          <Tab.Content>\n            <Tab.Pane eventKey=\"nfts\">\n              <ul className=\"cards-container mt-4\">\n                {searchNfts === null && (\n                  <div className=\"d-flex flex-row\">\n                    <Spinner className=\"mx-auto\" animation=\"border\" />\n                  </div>\n                )}\n                {searchNfts !== null &&\n                  searchNfts.map((x) => (\n                    <a key={x.address} href={`/nft/${x}`}>\n                      <NFTCard address={x} />\n                    </a>\n                  ))}\n                {searchNfts !== null && searchNfts.length === 0 && (\n                  <div className=\"d-flex flex-row\">\n                    <p className=\"mx-auto text-muted\" animation=\"border\">\n                      No matching NFTs\n                    </p>\n                  </div>\n                )}\n              </ul>\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"collections\">\n              <ul className=\"collection-cards-container mt-4\">\n                {searchCollections === null && (\n                  <div className=\"d-flex flex-row\">\n                    <Spinner className=\"mx-auto\" animation=\"border\" />\n                  </div>\n                )}\n                {searchCollections !== null &&\n                  searchCollections.map((x) => (\n                    <a key={x} href={`/collection/${x}`}>\n                      <CollectionCard handle={x} />\n                    </a>\n                  ))}\n                {searchCollections !== null && searchCollections.length === 0 && (\n                  <div className=\"d-flex flex-row\">\n                    <p className=\"mx-auto text-muted\" animation=\"border\">\n                      No matching collection\n                    </p>\n                  </div>\n                )}\n              </ul>\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"profiles\">\n              <ul className=\"profile-cards-container mt-4\">\n                {searchProfiles === null && (\n                  <div className=\"d-flex flex-row\">\n                    <Spinner className=\"mx-auto\" animation=\"border\" />\n                  </div>\n                )}\n                {searchProfiles !== null &&\n                  searchProfiles.map((x) => (\n                    <a key={x} href={`/profile/${x}`}>\n                      <ProfileCard address={x} />\n                    </a>\n                  ))}\n                {searchProfiles !== null && searchProfiles.length === 0 && (\n                  <div className=\"d-flex flex-row\">\n                    <p className=\"mx-auto text-muted\" animation=\"border\">\n                      No matching profile\n                    </p>\n                  </div>\n                )}\n              </ul>\n            </Tab.Pane>\n          </Tab.Content>\n        </Row>\n      </Tab.Container>\n    </div>\n  );\n}\n\nexport default SearchController;\n","export default __webpack_public_path__ + \"static/media/dingocoin.15331900.png\";","import { Button } from \"react-bootstrap\";\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction SideScroller(props) {\n  const scrollContainerRef = React.createRef();\n  const itemsContainerRef = React.createRef();\n\n  const scrollLeft = (e) => {\n    const containerWidth = scrollContainerRef.current.offsetWidth;\n    const itemWidth = itemsContainerRef.current.children[0].offsetWidth;\n    const scrollCount = Math.floor(containerWidth / itemWidth);\n    scrollContainerRef.current.scrollBy({\n      left: -scrollCount * itemWidth,\n      behavior: \"smooth\",\n    });\n  };\n\n  const scrollRight = (e) => {\n    const containerWidth = scrollContainerRef.current.offsetWidth;\n    const itemWidth = itemsContainerRef.current.children[0].offsetWidth;\n    const scrollCount = Math.floor(containerWidth / itemWidth);\n    scrollContainerRef.current.scrollBy({\n      left: scrollCount * itemWidth,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <div className=\"side-scroll\">\n      <div className=\"scroll-off\">\n        <div className=\"scroll-on\" ref={scrollContainerRef}>\n          <ul ref={itemsContainerRef}>\n            {props.items.map((x) => props.itemTemplate(x))}\n          </ul>\n        </div>\n      </div>\n      <Button className=\"control float-left\" onClick={scrollLeft}>\n        <FontAwesomeIcon icon={faAngleLeft} />\n      </Button>\n      <Button className=\"control float-right\" onClick={scrollRight}>\n        <FontAwesomeIcon icon={faAngleRight} />\n      </Button>\n    </div>\n  );\n}\n\nexport default SideScroller;\n","import React from \"react\";\nimport {\n  queryCollectionByTradeCountScaled,\n  queryNft,\n} from \"./api\";\nimport SideScroller from \"./SideScroller\";\nimport CollectionCard from \"./CollectionCard\";\nimport NFTCard from \"./NFTCard\";\n\nfunction Main() {\n  const [hotCollections, setHotCollections] = React.useState(null);\n  const [newNfts, setNewNfts] = React.useState(null);\n  const [recentNfts, setRecentNfts] = React.useState(null);\n\n  React.useEffect(() => {\n    (async () => {\n      setHotCollections((await queryCollectionByTradeCountScaled()).results);\n      setNewNfts((await queryNft({\n        key: 'listHeight',\n        direction: 'DESC',\n        limit: 50,\n        offset: 0,\n      })).results);\n      setRecentNfts(\n        (\n          await queryNft({\n            key: \"tradeHeight\",\n            direction: \"DESC\",\n            limit: 50,\n            offset: 0,\n          })\n        ).results\n      );\n    })();\n  }, []);\n\n  return (\n    <div className=\"d-flex flex-column\">\n      {hotCollections !== null && (\n        <div className=\"my-4\">\n          <h2 className=\"accent overview-title\">Hot collections 🔥</h2>\n          <SideScroller\n            items={hotCollections}\n            itemTemplate={(x) => (\n              <li key={x}>\n                <a href={`/collection/${x}`}>\n                  <CollectionCard handle={x} />\n                </a>\n              </li>\n            )}\n          />\n        </div>\n      )}\n      {newNfts !== null && (\n        <div className=\"my-4\">\n          <h2 className=\"accent overview-title\">Newly listed ✨</h2>\n          <SideScroller\n            items={newNfts}\n            itemTemplate={(x) => (\n              <li key={x}>\n                <a href={`/nft/${x}`}>\n                  <NFTCard address={x} />\n                </a>\n              </li>\n            )}\n          />\n        </div>\n      )}\n      {recentNfts !== null && (\n        <div className=\"my-4\">\n          <h2 className=\"accent overview-title\">Recently sold 💰</h2>\n          <SideScroller\n            items={recentNfts}\n            itemTemplate={(x) => (\n              <li key={x}>\n                <a href={`/nft/${x}`}>\n                  <NFTCard address={x} />\n                </a>\n              </li>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Main;\n","import \"./App.scss\";\nimport CreateController from \"./CreateController\";\nimport ProfileController from \"./ProfileController\";\nimport ExploreCollectionsController from \"./ExploreCollectionsController\";\nimport ExploreNftsController from \"./ExploreNftsController\";\nimport ExploreProfilesController from \"./ExploreProfilesController\";\nimport SearchController from \"./SearchController\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Container,\n  Form,\n  FormControl,\n  Button,\n  Modal,\n  InputGroup,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleRight,\n  faList,\n  faUserCircle,\n  faThLarge,\n  faShoppingBag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport DingocoinLogo from \"./assets/img/dingocoin.png\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from \"react-router-dom\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const [location, setLocation] = React.useState(null);\n  React.useEffect(() => {\n    setLocation(window.location.pathname);\n  }, []);\n  React.useEffect(() => {}, [location]);\n\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [searchErrorShow, setSearchErrorShow] = React.useState(null);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (searchQuery.trim() !== \"\") {\n      window.location.assign(`/search?query=${searchQuery.trim()}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"navbar\" bg=\"dark\" expand=\"lg\" sticky=\"top\">\n        <Container>\n          <Navbar.Brand href=\"/\" className=\"navbar-brand align-items-center\">\n            <img alt=\"\" src={DingocoinLogo} />\n            <span>DINGOCOIN</span>\n            <span className=\"navbar-brand-subtitle\"> NFT Platform</span>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse>\n            <Nav\n              className=\"ms-auto\"\n              style={{ paddingRight: \"1.5rem\", textAlign: \"center\" }}\n            >\n              <Nav.Link href=\"/\">\n                <nobr>Home</nobr>\n              </Nav.Link>\n              <NavDropdown className=\"navbar-important\" title=\"Explore\">\n                <NavDropdown.Item href=\"/collections\">\n                  <FontAwesomeIcon className=\"me-2 accent\" icon={faThLarge} />\n                  Collections\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"/nfts\">\n                  <FontAwesomeIcon className=\"me-2 accent\" icon={faList} />\n                  NFTs\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"/profiles\">\n                  <FontAwesomeIcon\n                    className=\"me-2 accent\"\n                    icon={faUserCircle}\n                  />\n                  Profiles\n                </NavDropdown.Item>\n              </NavDropdown>\n              <Nav.Link href=\"/create\">Create</Nav.Link>\n              <Nav.Link href=\"https://dingocoin.org\" target=\"_blank\">\n                <nobr>Visit Dingocoin</nobr>\n              </Nav.Link>\n            </Nav>\n            <Form className=\"d-flex\" onSubmit={doSearch}>\n              <InputGroup\n                style={{\n                  minWidth: \"20rem\",\n                }}\n              >\n                <FormControl\n                  className=\"search-box\"\n                  placeholder={\"Search NFTs, collections, profiles...\"}\n                  value={searchQuery}\n                  onChange={(e) => {\n                    if (e.target.value.length <= 50) {\n                      setSearchQuery(e.target.value);\n                    }\n                  }}\n                />\n                {searchQuery !== \"\" && (\n                  <Button variant=\"secondary\" type=\"submit\">\n                    <FontAwesomeIcon icon={faAngleRight}></FontAwesomeIcon>\n                  </Button>\n                )}\n              </InputGroup>\n            </Form>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <section className=\"section-content\">\n        <Router>\n          <Routes>\n            <Route index element={<Main />} />\n            <Route path=\"/profile\">\n              <Route path=\":profileAddress\" element={<ProfileController />}>\n                <Route path=\"owned\" element={<ProfileController />} />\n                <Route path=\"stats\" element={<ProfileController />} />\n              </Route>\n            </Route>\n            <Route\n              path=\"/collection/:collectionHandle\"\n              element={<ProfileController />}\n            />\n            <Route path=\"/nft/:nftAddress\" element={<ProfileController />} />\n            <Route\n              path=\"/collections\"\n              element={<ExploreCollectionsController />}\n            >\n              <Route path=\"hot\" element={<ExploreCollectionsController />} />\n              <Route path=\"top\" element={<ExploreCollectionsController />} />\n              <Route path=\"search\" element={<ExploreCollectionsController />} />\n            </Route>\n            <Route path=\"/nfts\" element={<ExploreNftsController />}>\n              <Route path=\"search\" element={<ExploreNftsController />} />\n            </Route>\n            <Route path=\"/profiles\" element={<ExploreProfilesController />}>\n              <Route path=\"earnings\" element={<ExploreProfilesController />} />\n              <Route path=\"search\" element={<ExploreProfilesController />} />\n            </Route>\n            <Route path=\"/search\" element={<SearchController />} />\n            <Route path=\"/create\" element={<CreateController />} />\n            <Route element={<Navigate to=\"/\" />} />\n          </Routes>\n        </Router>\n      </section>\n      <section>\n        <div className=\"justify-content-center section-footer align-items-center\">\n          <h6>Copyright © The Dingocoin Project 2021-2022</h6>\n        </div>\n      </section>\n\n      <Modal\n        size=\"md\"\n        centered\n        show={searchErrorShow}\n        onHide={() => setSearchErrorShow(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>NFT/profile not found</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container className=\"text-center my-2\">\n            <p>No results found.</p>\n            <Button className=\"mx-2\" onClick={() => setSearchErrorShow(false)}>\n              Close\n            </Button>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n","import { Modal, Container, Button } from \"react-bootstrap\";\nimport React from \"react\";\n\nfunction GetWalletModal(props) {\n  return (\n    <Modal\n      size=\"md\"\n      centered\n      show={props.show}\n      onHide={props.onHide}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Browser Wallet required\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container className=\"text-center my-2\">\n          <p>You need a Dingocoin browser wallet for this.<br/>Set it up in less than a minute.</p>\n          <a className=\"my-1\" href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Chrome wallet</Button>\n          </a>\n          <a className=\"my-1\" href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Firefox wallet</Button>\n          </a>\n        </Container>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default GetWalletModal;\n"],"sourceRoot":""}