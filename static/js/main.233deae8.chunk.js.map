{"version":3,"sources":["api.js","CreateController.jsx","storage.js","NFTCard.jsx","CollectionCard.jsx","CreateCollectionModal.jsx","EditCollectionModal.jsx","EditProfileModal.jsx","ProfileCard.jsx","ProfileController.jsx","ExploreController.jsx","assets/img/dingocoin.png","Main.jsx","App.jsx","index.jsx","utils.js","CustomDivider.jsx","GetWalletModal.jsx"],"names":["API_URL","getBusy","data","a","post","address","result","busy","getContent","timestamp","signature","getBuyTransaction","price","sendBuyTransaction","transaction","getListTransaction","contentHash","royalty","sendListTransaction","content","preview","name","description","tags","updateProfile","owner","thumbnail","getProfileCreatedNfts","getProfileOwnedNfts","getProfileHistoricalNfts","getProfileStats","getProfileCreatedCount","getProfileCollectionCount","getProfileHistoricalCount","queryProfileBySearch","search","queryProfileByTradeCount","queryProfileByEarnings","queryNft","key","direction","offset","limit","queryNftBySearch","queryNftByNewest","beforeId","getCollectionStats","handle","queryCollectionByOwner","queryCollectionBySearch","queryUnassignedNftsByOwner","createCollection","updateCollection","setCollectionItem","getCollectionItems","getItemCollection","queryCollectionByTradeCountScaled","queryCollectionByTradeVolume","getPlatformStats","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","CreateController","React","useState","setContent","contentError","setContentError","listingPrice","setListingPrice","setRoyalty","setName","setDescription","setPreview","previewError","setPreviewError","setTags","pending","setPending","success","setSuccess","setAddress","getWalletShow","setGetWalletShow","useEffect","size","Buffer","f","from","isPng","sizeOf","width","height","doSubmit","e","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","undefined","window","dingo","Hex","Sha256","Base64","parse","stringify","toSatoshi","Math","floor","getListTransactionResponse","requestSignTransaction","vouts","signed","sendListTransactionResponse","className","style","maxWidth","onSubmit","Group","Label","Control","type","onChange","target","files","isInvalid","isValid","Text","value","placeholder","length","match","parseInt","toFixed","Range","textAlign","variant","disabled","animation","href","show","onHide","get","link","controller","AbortController","setTimeout","abort","fetch","withCredentials","method","signal","getMeta","response","status","json","getPreviewLink","getState","getProfile","getCollection","NFTCard","props","domRef","useRef","isVisible","setVisible","previewLink","setPreviewLink","stats","setStats","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","meta","state","Card","ref","role","Img","src","loading","Body","Title","Subtitle","satoshiToLocaleString","icon","faCashRegister","tradeVolume","faExchangeAlt","tradeCount","CollectionCard","collection","setCollection","Container","faList","count","toLocaleString","CreateCollectionModal","createdNfts","setCreatedNfts","setThumbnail","setHandle","results","reverse","all","map","x","createdNftNames","i","Modal","centered","Header","closeButton","title","Form","Select","Button","EditCollectionModal","thumbnailIndex","setThumbnailIndex","currentThumbnailEntry","find","isinvalid","EditProfileModal","profile","concat","ProfileCard","setProfile","createdCount","collectionCount","historicalCount","faThLarge","faShoppingBag","ProfileController","useParams","profileAddress","collectionHandle","nftAddress","location","useLocation","view","pathname","endsWith","editProfileShow","setEditProfileShow","createCollectionShow","setCreateCollectionShow","collections","setCollections","unassignedList","setUnassignedList","profileLists","setProfileLists","profileStats","setProfileStats","collectionItems","setCollectionItems","editCollectionShow","setEditCollectionShow","nftMeta","setNftMeta","nftState","setNftState","nftItemCollection","setNftItemCollection","nftOwner","setNftOwner","nftBusy","setNftBusy","resellPrice","setResellPrice","resellPriceError","setResellPriceError","buyResult","setBuyResult","downloadLink","setDownloadLink","startsWith","ownedNfts","historicalNfts","console","log","nftItemCollectionHandle","creator","BigInt","doEditProfileSubmit","payload","Date","now","message","JSON","requestSign","signResult","reload","doCreateCollectionSubmit","doEditCollectionSubmit","doMove","doDownload","doBuy","vins","Row","onClick","faPen","Nav","Item","Link","eventKey","active","faPlus","DropdownButton","y","Dropdown","filter","some","listCount","listSoldCount","royaltyVolume","buyVolume","sellVolume","display","rel","txid","GetWalletModal","ExploreController","pop","includes","platformStats","setPlatformStats","setSearch","searchSubView","setSearchSubView","searchNfts","setSearchNfts","searchCollections","setSearchCollections","searchProfiles","setSearchProfiles","collectionList","setCollectionList","nftList","setNftList","nftListEnd","setNftListEnd","profileList","setProfileList","queryText","setQueryText","viewMoreEnabled","setViewMoreEnabled","l","URLSearchParams","doChangeSearchSubview","doSearch","trim","assign","subview","doChangeQuery","event","innerText","onViewMore","id","totalVolume","InputGroup","faSearch","FormControl","faArrowRight","Tab","activeKey","onSelect","faBolt","faUserCircle","Content","Pane","Spinner","defaultActiveKey","faFire","faBullseye","faCoins","Toggle","Menu","Main","Col","faPiggyBank","faHandHoldingUsd","faLock","CustomDivider","App","setLocation","searchQuery","setSearchQuery","searchErrorShow","setSearchErrorShow","Navbar","bg","expand","sticky","Brand","alt","DingocoinLogo","Collapse","paddingRight","minWidth","faAngleRight","index","element","path","to","ReactDOM","render","document","getElementById","Error","Web3Utils","toWei","toString","isNegative","integer","replace","headers","Accept","body","faAngleDown"],"mappings":"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","file":"static/js/main.233deae8.chunk.js","sourcesContent":["import { post } from \"./utils\";\n\nconst API_URL = \"https://nftp0.dingocoin.io\";\n\nconst getBusy = async (data) => {\n  const result = await post(`${API_URL}/nft/getBusy`, {\n    address: data.address,\n  });\n  if (result === null) {\n    return null;\n  } else {\n    return result.busy;\n  }\n};\n\nconst getContent = (data) => {\n  return post(`${API_URL}/nft/getContent`, {\n    address: data.address,\n    timestamp: data.timestamp,\n    signature: data.signature,\n  });\n};\n\nconst getBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/getBuyTransaction`, {\n    address: data.address,\n    price: data.price,\n  });\n};\n\nconst sendBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/sendBuyTransaction`, {\n    transaction: data.transaction,\n  });\n};\n\nconst getListTransaction = (data) => {\n  return post(`${API_URL}/nft/getListTransaction`, {\n    contentHash: data.contentHash,\n    price: data.price,\n    royalty: data.royalty,\n  });\n};\n\nconst sendListTransaction = (data) => {\n  return post(`${API_URL}/nft/sendListTransaction`, {\n    content: data.content,\n    preview: data.preview,\n    name: data.name,\n    description: data.description,\n    tags: data.tags,\n    transaction: data.transaction,\n  });\n};\n\nconst updateProfile = (data) => {\n  return post(`${API_URL}/profile/update`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    signature: data.signature,\n  });\n};\n\nconst getProfileCreatedNfts = (data) => {\n  return post(`${API_URL}/profile/getCreatedNfts`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileOwnedNfts = (data) => {\n  return post(`${API_URL}/profile/getOwnedNfts`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileHistoricalNfts = (data) => {\n  return post(`${API_URL}/profile/getHistoricalNfts`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileStats = (data) => {\n  return post(`${API_URL}/profile/getStats`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileCreatedCount = (data) => {\n  return post(`${API_URL}/profile/getCreatedCount`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileCollectionCount = (data) => {\n  return post(`${API_URL}/profile/getCollectionCount`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileHistoricalCount = (data) => {\n  return post(`${API_URL}/profile/getHistoricalCount`, {\n    owner: data.owner,\n  });\n};\n\nconst queryProfileBySearch = (data) => {\n  return post(`${API_URL}/profile/queryBySearch`, {\n    search: data.search,\n  });\n};\n\nconst queryProfileByTradeCount = (data) => {\n  return post(`${API_URL}/profile/queryByTradeCount`, {});\n};\n\nconst queryProfileByEarnings = (data) => {\n  return post(`${API_URL}/profile/queryByEarnings`, {});\n};\n\nconst queryNft = (data) => {\n  return post(`${API_URL}/nft/query`, {\n    key: data.key,\n    direction: data.direction,\n    offset: data.offset,\n    limit: data.limit,\n  });\n};\n\nconst queryNftBySearch = (data) => {\n  return post(`${API_URL}/nft/queryBySearch`, {\n    search: data.search,\n  });\n};\n\nconst queryNftByNewest = (data) => {\n  return post(`${API_URL}/nft/queryByNewest`, {\n    beforeId: data.beforeId,\n  });\n};\n\nconst getCollectionStats = (data) => {\n  return post(`${API_URL}/collection/getStats`, {\n    handle: data.handle,\n  });\n};\n\nconst queryCollectionByOwner = (data) => {\n  return post(`${API_URL}/collection/queryByOwner`, {\n    owner: data.owner,\n  });\n};\n\nconst queryCollectionBySearch = (data) => {\n  return post(`${API_URL}/collection/queryBySearch`, {\n    search: data.search,\n  });\n};\n\nconst queryUnassignedNftsByOwner = (data) => {\n  return post(`${API_URL}/collection/queryUnassignedNftsByOwner`, {\n    owner: data.owner,\n  });\n};\n\nconst createCollection = (data) => {\n  return post(`${API_URL}/collection/create`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    handle: data.handle,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    description: data.description,\n    signature: data.signature,\n  });\n};\n\nconst updateCollection = (data) => {\n  return post(`${API_URL}/collection/update`, {\n    timestamp: data.timestamp,\n    handle: data.handle,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    description: data.description,\n    signature: data.signature,\n  });\n};\n\nconst setCollectionItem = (data) => {\n  return post(`${API_URL}/collection/setItem`, {\n    timestamp: data.timestamp,\n    address: data.address,\n    handle: data.handle,\n    signature: data.signature,\n  });\n};\n\nconst getCollectionItems = (data) => {\n  return post(`${API_URL}/collection/getItems`, {\n    handle: data.handle,\n  });\n};\n\nconst getItemCollection = (data) => {\n  return post(`${API_URL}/collection/getItemCollection`, {\n    address: data.address,\n  });\n};\n\nconst queryCollectionByTradeCountScaled = () => {\n  return post(`${API_URL}/collection/queryByTradeCountScaled`, {});\n};\n\nconst queryCollectionByTradeVolumeScaled = () => {\n  return post(`${API_URL}/collection/queryByTradeVolumeScaled`, {});\n};\n\nconst queryCollectionByTradeVolume = () => {\n  return post(`${API_URL}/collection/queryByTradeVolume`, {});\n};\n\nconst queryCollectionByValuable = () => {\n  return post(`${API_URL}/collection/queryByValuable`, {});\n};\n\nconst getPlatformStats = () => {\n  return post(`${API_URL}/getPlatformStats`, {});\n};\n\nexport {\n  getBusy,\n  getContent,\n  getBuyTransaction,\n  sendBuyTransaction,\n  getListTransaction,\n  sendListTransaction,\n  updateProfile,\n  getProfileCreatedNfts,\n  getProfileOwnedNfts,\n  getProfileHistoricalNfts,\n  getProfileStats,\n  getProfileCreatedCount,\n  getProfileCollectionCount,\n  getProfileHistoricalCount,\n  queryProfileBySearch,\n  queryProfileByTradeCount,\n  queryProfileByEarnings,\n  queryNft,\n  queryNftBySearch,\n  queryNftByNewest,\n  createCollection,\n  updateCollection,\n  getCollectionStats,\n  queryCollectionByOwner,\n  queryCollectionBySearch,\n  queryUnassignedNftsByOwner,\n  setCollectionItem,\n  getCollectionItems,\n  getItemCollection,\n  queryCollectionByTradeCountScaled,\n  queryCollectionByTradeVolumeScaled,\n  queryCollectionByTradeVolume,\n  queryCollectionByValuable,\n  getPlatformStats\n};\n","import { Container, Row, Button, Col, Form, Spinner } from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport isPng from \"is-png\";\nimport sizeOf from \"buffer-image-size\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport { sendListTransaction, getListTransaction } from \"./api\";\nimport { toSatoshi } from \"./utils\";\n\nconst MAX_CONTENT_SIZE = 10 * 1e6; // 1 MB.\nconst MAX_PREVIEW_SIZE = 100 * 1e5; // 1 kB.\n\nconst toBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(\",\")[1]);\n    reader.onerror = (error) => reject(error);\n  });\n\nfunction CreateController() {\n  const [content, setContent] = React.useState(null);\n  const [contentError, setContentError] = React.useState(\"\");\n  const [listingPrice, setListingPrice] = React.useState(\"1000\");\n  const [royalty, setRoyalty] = React.useState(0);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [preview, setPreview] = React.useState(null);\n  const [previewError, setPreviewError] = React.useState(\"\");\n  const [tags, setTags] = React.useState(\"\");\n\n  const [pending, setPending] = React.useState(false);\n  const [success, setSuccess] = React.useState(null);\n  const [address, setAddress] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  React.useEffect(() => {\n    if (content === null) {\n      setContentError(\"NFT content required\");\n      return;\n    } else if (content.size > MAX_CONTENT_SIZE) {\n      setContentError(\"NFT content size limit exceeded (max 10 MB)\");\n      return;\n    } else {\n      setContentError(\"\");\n    }\n  }, [content]);\n\n  React.useEffect(() => {\n    (async () => {\n      if (preview !== null) {\n        const f = Buffer.from(await toBase64(preview), \"base64\");\n        if (!isPng(f)) {\n          setPreviewError(\"Cover image must be a PNG\");\n        } else if (preview.size > MAX_PREVIEW_SIZE) {\n          setPreviewError(\"Cover file size limit exceeded (max 100 KB)\");\n        } else if (sizeOf(f).width !== 256 || sizeOf(f).height !== 256) {\n          setPreviewError(\"Cover image must have dimension 256x256\");\n        } else {\n          setPreviewError(\"\");\n        }\n      } else {\n        setPreviewError(\"Cover image required\");\n      }\n    })();\n  }, [preview]);\n\n  const doSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const getListTransactionResponse = await getListTransaction({\n      // CryptoJS expects inputs to be a utf8 string. So we encode our data\n      // into that.\n      contentHash: Hex.stringify(Sha256(Base64.parse(await toBase64(content)))),\n      price: toSatoshi(listingPrice),\n      royalty: 25 + Math.floor((royalty * 75) / 100),\n    });\n    if (\n      getListTransactionResponse === null ||\n      \"error\" in getListTransactionResponse\n    ) {\n      return;\n    }\n\n    const signed = (\n      await window.dingo.requestSignTransaction(\n        [],\n        getListTransactionResponse.vouts\n      )\n    ).result;\n\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    setPending(true);\n    const sendListTransactionResponse = await sendListTransaction({\n      content: await toBase64(content),\n      preview: preview === null ? null : await toBase64(preview),\n      name: name,\n      description: description,\n      tags: tags,\n      transaction: signed,\n    });\n    if (\n      sendListTransactionResponse === null ||\n      sendListTransactionResponse.error !== undefined\n    ) {\n      setSuccess(false);\n      return;\n    }\n\n    setPending(false);\n    setSuccess(true);\n    setAddress(sendListTransactionResponse.address);\n  };\n\n  return (\n    <div>\n      <Container className=\"App-header\">\n        <Row>\n          <h1 className=\"mt-4\">Create NFT</h1>\n          <CustomDivider />\n        </Row>\n      </Container>\n      <Container style={{ maxWidth: \"900px\" }}>\n        <Row>\n          <Col>\n            {(success === null || success === false) && (\n              <Form onSubmit={doSubmit}>\n                <Form.Group className=\"mb-3 mt-4\">\n                  <Form.Label>\n                    <b>Original content (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setContent(e.target.files[0])}\n                    isInvalid={contentError !== null && contentError !== \"\"}\n                    isValid={contentError === \"\"}\n                  />\n                  {contentError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {contentError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    Attach your original work in all it's glory. The NFT will be\n                    locked uniquely to this file (max 10 MB).\n                    <br />\n                    You can only use this file once. Only the current owner of\n                    the NFT can download this file.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Cover image (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setPreview(e.target.files[0])}\n                    isInvalid={previewError !== null && previewError !== \"\"}\n                    isValid={previewError === \"\"}\n                  />\n                  {previewError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {previewError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    Attach a thumbnail sized version for public display (256 x\n                    256 PNG).\n                    <br />\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Name (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={name}\n                    placeholder=\"Max 40 characters\"\n                    onChange={(e) => setName(e.target.value)}\n                    isValid={name !== \"\" && name.length <= 40}\n                    isInvalid={name !== \"\" && name.length > 40}\n                  />\n                  {name.length > 40 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Name too long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Description (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={description}\n                    placeholder=\"Max 500 characters\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    isValid={description !== \"\" && description.length <= 500}\n                    isInvalid={description !== \"\" && description.length > 500}\n                  />\n                  {description.length > 500 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Description long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Tags (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={tags}\n                    placeholder=\"Max 100 characters; space separated\"\n                    onChange={(e) => setTags(e.target.value)}\n                    isValid={tags !== \"\" && tags.length <= 100}\n                    isInvalid={tags !== \"\" && tags.length > 100}\n                  />\n                  {tags.length > 100 && (\n                    <div>\n                      <Form.Text className=\"input-error\">Tags long</Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3 mt-2\">\n                  <Form.Label>\n                    <b>Listing price (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={listingPrice}\n                    onChange={(e) => {\n                      if (\n                        e.target.value.match(/^[0-9]+$/) &&\n                        parseInt(e.target.value) >= 1\n                      ) {\n                        setListingPrice(e.target.value);\n                      } else {\n                        setListingPrice(\"1000\");\n                      }\n                    }}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Initial selling price for your NFT in DINGO (min. 1 DINGO).\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Creator royalty (*required): </b>\n                    {(2.5 + Math.floor((royalty * 75) / 100) / 10).toFixed(1) +\n                      \"%\"}\n                  </Form.Label>\n                  <Form.Range\n                    value={royalty}\n                    onChange={(e) => setRoyalty(e.target.value)}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Royalty paid to you for every transaction of this NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <div style={{ textAlign: \"center\" }}>\n                  {success === null && pending === false && (\n                    <Button\n                      className=\"popup-button mt-4 px-4\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                      disabled={\n                        content === null ||\n                        contentError !== \"\" ||\n                        (preview !== null && previewError !== \"\")\n                      }\n                    >\n                      Create NFT\n                    </Button>\n                  )}\n                  {success === null && pending === true && (\n                    <div>\n                      <Spinner animation=\"border\" />\n                      <p>\n                        Transaction pending...\n                        <br />\n                        (DO NOT CLOSE THIS PAGE)\n                      </p>\n                    </div>\n                  )}\n                  {success === false && (\n                    <div>\n                      <p>\n                        Transaction failed!\n                        <br />\n                        Please reload this page and try again\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </Form>\n            )}\n            {success === true && (\n              <div style={{ textAlign: \"center\" }}>\n                {\" \"}\n                <h3>NFT Created!</h3>\n                <p>\n                  NFT Address: <b>{address}</b>\n                </p>\n                <div style={{ textAlign: \"center\" }}>\n                  <a href={\"/nft/\" + address}>\n                    <Button className=\"popup-button px-4\" variant=\"primary\">\n                      View NFT ►\n                    </Button>\n                  </a>\n                </div>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n    </div>\n  );\n}\n\nexport default CreateController;\n","const META_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-meta\";\nconst PREVIEW_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-preview\";\nconst STATE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-state\";\nconst PROFILE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-profile\";\nconst COLLECTION_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-collection\";\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 5000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nconst getMeta = async (address) => {\n  const response = await get(`${META_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getPreviewLink = (address) => {\n  return `${PREVIEW_BUCKET}/${address}.png`;\n};\n\nconst getState = async (address) => {\n  const response = await get(`${STATE_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getProfile = async (owner) => {\n  const response = await get(`${PROFILE_BUCKET}/${owner}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getCollection = async (handle) => {\n  const response = await get(`${COLLECTION_BUCKET}/${handle}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nexport { getMeta, getPreviewLink, getState, getProfile, getCollection };\n","import React from \"react\";\nimport { getMeta, getPreviewLink, getState } from \"./storage\";\nimport { Card } from \"react-bootstrap\";\nimport { satoshiToLocaleString } from \"./utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCashRegister,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction NFTCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [name, setName] = React.useState(null);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const meta = await getMeta(props.address);\n        const previewLink = await getPreviewLink(props.address);\n        const state = await getState(props.address);\n\n        setPreviewLink(previewLink);\n        setName(meta === null ? null : meta.name);\n        setStats(state === null ? null : state.stats);\n      }\n    })();\n  }, [props.address, isVisible]);\n\n  return (\n    <Card\n      className=\"nft-card floating-borders floating-borders-press\"\n      ref={domRef}\n    >\n      <div className=\"header-box\">\n        <div className=\"spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n          </div>\n        </div>\n        <Card.Img variant=\"top\" src={previewLink} loading=\"lazy\"></Card.Img>\n      </div>\n      <hr />\n      <Card.Body>\n        <Card.Title className=\"text-start\">\n          {name === null ? \"-\" : name === \"\" ? \"Unnamed NFT\" : name}\n        </Card.Title>\n        <Card.Subtitle className=\"text-start text-muted\">{props.address}</Card.Subtitle>\n        <Card.Text>\n          <span className=\"card-price\">\n            {stats === null ? \"-\" : satoshiToLocaleString(stats.price)}\n          </span>\n          <br />\n          <span className=\"card-price-subtitle\">DINGO</span>\n        </Card.Text>\n      </Card.Body>\n      <hr />\n      <div className=\"card-sub-body text-muted\">\n        <span className=\"align-middle\">\n          <FontAwesomeIcon icon={faCashRegister} />{\" \"}\n          {stats === null ? \"-\" : satoshiToLocaleString(stats.tradeVolume)}\n        </span>\n        &nbsp;&nbsp;&nbsp;\n        <span className=\"align-middle\">\n          <FontAwesomeIcon icon={faExchangeAlt} />{\" \"}\n          {stats === null ? \"-\" : stats.tradeCount}\n        </span>\n      </div>\n    </Card>\n  );\n}\n\nexport default NFTCard;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { getCollection, getPreviewLink } from \"./storage\";\nimport { getCollectionStats } from \"./api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faCashRegister,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { toLocaleString } from \"./utils\";\n\nfunction CollectionCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [collection, setCollection] = React.useState(null);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const collection = await getCollection(props.handle);\n        setCollection(collection);\n\n        if (collection !== null) {\n          setPreviewLink(getPreviewLink(collection.thumbnail));\n\n          const stats = await getCollectionStats({ handle: props.handle });\n          setStats(stats);\n        }\n      }\n    })();\n  }, [isVisible, props.handle]);\n\n  return (\n    <Container className=\"collection-card-holder\" ref={domRef}>\n      {collection === null ||\n        (stats === null && (\n          <div className=\"collection-card d-flex flex-column\">\n            <div className=\"d-flex flex-row my-auto\">\n              <div className=\"spinner mx-auto\">\n                <div\n                  className=\"spinner-border text-primary\"\n                  role=\"status\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {collection !== null && stats !== null && (\n        <div className=\"collection-card d-flex flex-column\">\n          <img className=\"mx-auto mt-4 mb-3\" src={previewLink} />\n          <span className=\"mx-auto title\">\n            {collection !== null && collection.name}\n          </span>\n          <span className=\"truncate text-muted description\">\n            {collection !== null && collection.description}\n          </span>\n          <hr className=\"mt-auto\" />\n          <div className=\"d-flex flex-row text-muted card-sub-body\">\n            <span className=\"ms-auto\">\n              <FontAwesomeIcon icon={faList} />{\" \"}\n              {stats === null ? \"-\" : stats.count}\n            </span>\n            &nbsp;&nbsp;&nbsp;\n            <span>\n              <FontAwesomeIcon icon={faCashRegister} />{\" \"}\n              {stats === null ? \"-\" : toLocaleString(stats.tradeVolume)}\n            </span>\n            &nbsp;&nbsp;&nbsp;\n            <span className=\"me-auto\">\n              <FontAwesomeIcon icon={faExchangeAlt} />{\" \"}\n              {stats === null ? \"-\" : stats.tradeCount}\n            </span>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default CollectionCard;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getMeta } from \"./storage\";\nimport { getProfileCreatedNfts } from \"./api\";\n\nfunction CreateCollectionModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnail, setThumbnail] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const [handle, setHandle] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.owner !== undefined && props.owner !== null) {\n\n        const createdNfts = (await getProfileCreatedNfts({ owner: props.owner })).results.reverse();\n        if (createdNfts.length > 0) {\n          const createdNftNames = await Promise.all(\n            createdNfts.map(async (x) => {\n              return (await getMeta(x)).name;\n            })\n          );\n          setCreatedNfts(createdNfts.map((x, i) => [x, createdNftNames[i]]));\n          setThumbnail(createdNfts[0]);\n        }\n      }\n    })();\n  }, [props.owner]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                thumbnail: thumbnail,\n                name: name,\n                handle: handle,\n                description: description,\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Thumbnail image (*required)</b>\n            </Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isInvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnail}\n                  onChange={(e) => setThumbnail(e.target.value)}\n                >\n                  {createdNfts.map((x) => (\n                    <option key={x[0]} value={x[0]}>\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection name (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name !== \"\" && name.length <= 40}\n              isInvalid={name === \"\" || name.length > 40}\n            />\n            {name === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Name required</Form.Text>\n              </div>\n            )}\n            {name !== \"\" && name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection handle (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={handle}\n              onChange={(e) => setHandle(e.target.value)}\n              isValid={handle !== \"\" && handle.length <= 40}\n              isInvalid={handle === \"\" || handle.length > 40}\n            />\n            {handle === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Handle required</Form.Text>\n              </div>\n            )}\n            {handle !== \"\" && handle.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Handle too long</Form.Text>\n              </div>\n            )}\n            {handle !== \"\" && !handle.match(/^([a-z0-9])+$/) && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Incorrect handle format (only lowercase alphanumeric\n                  characters allowed)\n                </Form.Text>\n              </div>\n            )}\n            <Form.Text className=\"text-muted\">\n              Used for your collection's permalink. You can't change this after\n              creating the collection.\n            </Form.Text>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Collection description (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 500 characters\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              isValid={description !== \"\" && description.length <= 500}\n              isInvalid={description !== \"\" && description.length > 500}\n            />\n            {description !== \"\" && description.length > 500 && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Description too long\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                thumbnail === null ||\n                name === \"\" ||\n                name.length > 40 ||\n                handle === \"\" ||\n                handle.length > 40 ||\n                description.length > 500\n              }\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default CreateCollectionModal;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getProfileCreatedNfts } from \"./api\";\nimport { getMeta, getCollection } from \"./storage\";\n\nfunction EditCollectionModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnailIndex, setThumbnailIndex] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.handle !== undefined && props.handle !== null) {\n        const collection = await getCollection(props.handle);\n        setName(collection.name);\n        setDescription(collection.description);\n\n        const createdNfts = (await getProfileCreatedNfts({ owner: collection.owner })).results.reverse();\n        if (createdNfts.length > 0) {\n          const createdNftNames = await Promise.all(\n            createdNfts.map(async (x) => {\n              return (await getMeta(x)).name;\n            })\n          );\n          setCreatedNfts(createdNfts.map((x, i) => [x, createdNftNames[i]]));\n\n          const currentThumbnailEntry = createdNfts.map((x, i) => [x, i]).find((x) => x[0] === collection.thumbnail);\n          setThumbnailIndex(currentThumbnailEntry[1]);\n        }\n      }\n    })();\n  }, [props.handle]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                thumbnail: createdNfts[thumbnailIndex][0],\n                name: name,\n                handle: props.handle,\n                description: description\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Thumbnail image (*required)</b>\n            </Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isinvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && thumbnailIndex !== null && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnailIndex}\n                  onChange={(e) => setThumbnailIndex(e.target.value)}\n                >\n                  {createdNfts.map((x, i) => (\n                    <option key={i} value={i} >\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection name (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name !== \"\" && name.length <= 40}\n              isInvalid={name === \"\" || name.length > 40}\n            />\n            {name === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Name required</Form.Text>\n              </div>\n            )}\n            {name !== \"\" && name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Collection description (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 500 characters\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              isValid={description !== \"\" && description.length <= 500}\n              isInvalid={description !== \"\" && description.length > 500}\n            />\n            {description !== \"\" && description.length > 500 && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Description too long\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                thumbnailIndex === null ||\n                name === \"\" ||\n                name.length > 40 ||\n                description.length > 500\n              }\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default EditCollectionModal;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getProfileCreatedNfts } from \"./api\";\nimport { getMeta, getProfile } from \"./storage\";\n\nfunction EditProfileModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnailIndex, setThumbnailIndex] = React.useState(undefined);\n  const [name, setName] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.address !== undefined && props.address !== null) {\n        const profile = await getProfile(props.address);\n        if (profile === null) {\n          setName(\"\");\n        } else {\n          setName(profile.name);\n        }\n\n        const createdNfts = (\n          await getProfileCreatedNfts({ owner: props.address })\n        ).results.reverse();\n\n        let createdNftNames = await Promise.all(\n          createdNfts.map(async (x) => {\n            return (await getMeta(x)).name;\n          })\n        );\n        setCreatedNfts(\n          [[null, \"(No profile image)\"]].concat(\n            createdNfts.map((x, i) => [x, createdNftNames[i]])\n          )\n        );\n\n        const currentThumbnailEntry = [null]\n          .concat(createdNfts)\n          .map((x, i) => [x, i])\n          .find(\n            (x) =>\n              x[0] ===\n              (profile === null || profile.thumbnail === undefined\n                ? null\n                : profile.thumbnail)\n          );\n        setThumbnailIndex(currentThumbnailEntry[1]);\n      }\n    })();\n  }, [props.address]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                address: props.address,\n                thumbnail: createdNfts[thumbnailIndex][0],\n                name: name,\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Profile image (optional)</Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isinvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && thumbnailIndex !== undefined && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnailIndex}\n                  onChange={(e) => setThumbnailIndex(e.target.value)}\n                >\n                  {createdNfts.map((x, i) => (\n                    <option key={i} value={i}>\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Profile name (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name.length <= 40}\n              isInvalid={name.length > 40}\n            />\n            {name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={thumbnailIndex === null || name.length > 40}\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default EditProfileModal;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { getProfile, getPreviewLink } from \"./storage\";\nimport { getProfileCreatedCount, getProfileHistoricalCount, getProfileCollectionCount } from \"./api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faThLarge,\n  faShoppingBag\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ProfileCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [profile, setProfile] = React.useState(undefined);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible && props.address !== null) {\n        const profile = await getProfile(props.address);\n        setProfile(profile);\n\n        if (profile !== null && profile.thumbnail !== null && profile.thumbnail !== undefined) {\n          setPreviewLink(getPreviewLink(profile.thumbnail));\n        }\n\n        setStats( {\n          createdCount: await getProfileCreatedCount({owner: props.address}),\n          collectionCount: await getProfileCollectionCount({owner: props.address}),\n          historicalCount: await getProfileHistoricalCount({owner: props.address})\n        });\n      }\n    })();\n  }, [isVisible, props.address]);\n\n  return (\n    <Container className=\"profile-card-holder\" ref={domRef}>\n      {profile === undefined ||\n        (stats === null && (\n          <div className=\"profile-card d-flex flex-column\">\n            <div className=\"d-flex flex-row my-auto\">\n              <div className=\"spinner mx-auto\">\n                <div\n                  className=\"spinner-border text-primary\"\n                  role=\"status\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {profile !== undefined && stats !== null && (\n        <div className=\"profile-card d-flex flex-row\">\n          <img\n            className=\"my-auto ms-4 me-3\"\n            src={previewLink === null ? getPreviewLink('DP7CwNZ2AwbvYmFU5bQ8m49AUYLeTePsLt') : previewLink}\n          />\n          <div className=\"my-auto d-flex flex-column me-auto\">\n            <span className=\"title text-truncate text-start me-auto ms-0\">\n              {profile !== null && profile.name}\n              {profile === null && <span className=\"text-muted\">Unnamed profile</span>}\n            </span>\n            <div className=\"card-sub-body text-muted me-auto\">\n              <span className=\"ms-auto\">\n                <FontAwesomeIcon icon={faList} />{\" \"}\n                {stats === null ? \"-\" : stats.createdCount}\n              </span>\n              &nbsp;&nbsp;&nbsp;\n              <span>\n                <FontAwesomeIcon icon={faThLarge} />{\" \"}\n                {stats === null ? \"-\" : stats.collectionCount}\n              </span>\n              &nbsp;&nbsp;&nbsp;\n              <span className=\"me-auto\">\n                <FontAwesomeIcon icon={faShoppingBag} />{\" \"}\n                {stats === null ? \"-\" : stats.historicalCount - stats.createdCount}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default ProfileCard;\n","/* global BigInt */\n\nimport {\n  Container,\n  Row,\n  Button,\n  Form,\n  Nav,\n  Dropdown,\n  DropdownButton,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport { getMeta, getState, getProfile } from \"./storage\";\nimport { toSatoshi } from \"./utils\";\nimport NFTCard from \"./NFTCard\";\nimport {\n  getContent,\n  updateProfile,\n  getProfileCreatedNfts,\n  getProfileOwnedNfts,\n  getProfileHistoricalNfts,\n  createCollection,\n  updateCollection,\n  queryCollectionByOwner,\n  queryUnassignedNftsByOwner,\n  getBusy,\n  getCollectionItems,\n  setCollectionItem,\n  getItemCollection,\n  getBuyTransaction,\n  sendBuyTransaction,\n  getProfileStats,\n} from \"./api\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport CollectionCard from \"./CollectionCard\";\nimport CreateCollectionModal from \"./CreateCollectionModal\";\nimport EditCollectionModal from \"./EditCollectionModal\";\nimport EditProfileModal from \"./EditProfileModal\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { getCollection } from \"./storage\";\nimport { faPlus, faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport { satoshiToLocaleString } from \"./utils\";\nimport ProfileCard from \"./ProfileCard\";\n\nfunction ProfileController() {\n  const { profileAddress, collectionHandle, nftAddress } = useParams();\n  const location = useLocation();\n  const view =\n    profileAddress !== undefined\n      ? location.pathname.endsWith(\"/owned\")\n        ? \"profileOwned\"\n        : location.pathname.endsWith(\"/stats\")\n        ? \"profileStats\"\n        : \"profile\"\n      : collectionHandle !== undefined\n      ? \"collection\"\n      : nftAddress !== undefined\n      ? \"nft\"\n      : \"unknown\";\n\n  // Variables always required.\n  const [editProfileShow, setEditProfileShow] = React.useState(null);\n  const [profile, setProfile] = React.useState(null);\n\n  // For profile view.\n  const [createCollectionShow, setCreateCollectionShow] = React.useState(false);\n  const [collections, setCollections] = React.useState(null);\n  const [unassignedList, setUnassignedList] = React.useState(null);\n  const [profileLists, setProfileLists] = React.useState(null);\n  const [profileStats, setProfileStats] = React.useState(null);\n\n  // For collection view.\n  const [collection, setCollection] = React.useState(null);\n  const [collectionItems, setCollectionItems] = React.useState(null);\n  const [editCollectionShow, setEditCollectionShow] = React.useState(false);\n\n  // For NFT view.\n  const [nftMeta, setNftMeta] = React.useState(null);\n  const [nftState, setNftState] = React.useState(null);\n  const [nftItemCollection, setNftItemCollection] = React.useState(undefined);\n  const [nftOwner, setNftOwner] = React.useState(undefined);\n  const [nftBusy, setNftBusy] = React.useState(undefined);\n  const [resellPrice, setResellPrice] = React.useState(\"\");\n  const [resellPriceError, setResellPriceError] = React.useState(\"\");\n  const [buyResult, setBuyResult] = React.useState(null);\n  const [downloadLink, setDownloadLink] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  // Initialize for profile view, commons.\n  React.useEffect(() => {\n    if (view.startsWith(\"profile\")) {\n      (async () => {\n        // Retrieve and set profile.\n        let profile = await getProfile(profileAddress);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = profileAddress;\n        setProfile(profile);\n      })();\n    }\n  }, []);\n\n  // Initialize for profile view (cretions).\n  React.useEffect(() => {\n    if (view === \"profile\") {\n      (async () => {\n        // Retrieve and set collections.\n        const collections = await queryCollectionByOwner({\n          owner: profileAddress,\n        });\n        if (collections !== null) {\n          setCollections(collections.reverse());\n        }\n\n        // Retrieve and set unassigned list.\n        const unassignedList = await queryUnassignedNftsByOwner({\n          owner: profileAddress,\n        });\n        setUnassignedList(unassignedList.reverse());\n      })();\n    }\n  }, []);\n\n  // Initialize for profileOwned view.\n  React.useEffect(() => {\n    if (view === \"profileOwned\") {\n      (async () => {\n        setProfileLists({\n          createdNfts: (\n            await getProfileCreatedNfts({ owner: profileAddress })\n          ).results.reverse(),\n          ownedNfts: (\n            await getProfileOwnedNfts({ owner: profileAddress })\n          ).results.reverse(),\n          historicalNfts: (\n            await getProfileHistoricalNfts({ owner: profileAddress })\n          ).results.reverse(),\n        });\n      })();\n    }\n  }, []);\n\n  // Initialize for profileStats view.\n  React.useEffect(() => {\n    if (view === \"profileStats\") {\n      (async () => {\n        setProfileStats(await getProfileStats({ owner: profileAddress }));\n        console.log(await getProfileStats({ owner: profileAddress }));\n      })();\n    }\n  }, []);\n\n  // Initialize for collection view.\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"collection\") {\n        const collection = await getCollection(collectionHandle);\n        collection.handle = collectionHandle;\n        setCollection(collection);\n        let profile = await getProfile(collection.owner);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = collection.owner;\n        setProfile(profile);\n        setCollectionItems(\n          (await getCollectionItems({ handle: collectionHandle })).reverse()\n        );\n      }\n    })();\n  }, []);\n\n  // Initialize for nft view.\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"nft\") {\n        const nftMeta = await getMeta(nftAddress);\n        setNftMeta(nftMeta);\n        const nftState = await getState(nftAddress);\n        setNftState(nftState);\n\n        const nftItemCollectionHandle = (\n          await getItemCollection({\n            address: nftAddress,\n          })\n        ).handle;\n        if (nftItemCollectionHandle === null) {\n          setNftItemCollection(null);\n        } else {\n          const collection = await getCollection(nftItemCollectionHandle);\n          collection.handle = nftItemCollectionHandle;\n          setNftItemCollection(collection);\n        }\n\n        if (nftState !== null && nftState.owner !== nftState.creator) {\n          let nftOwner = await getProfile(nftState.owner);\n          if (nftOwner === null) {\n            nftOwner = {};\n          }\n          nftOwner.address = nftState.owner;\n          setNftOwner(nftOwner);\n        } else {\n          setNftOwner(null);\n        }\n\n        if (nftState !== null && nftMeta !== null) {\n          let profile = await getProfile(nftState.creator);\n          if (profile === null) {\n            profile = {};\n          }\n          profile.address = nftState.creator;\n          setProfile(profile);\n        }\n\n        setNftBusy(await getBusy({ address: nftAddress }));\n      }\n    })();\n  }, []);\n\n  // Effect for NFT view.\n  React.useEffect(() => {\n    if (resellPrice === \"\") {\n      setResellPriceError(\"Resell price required\");\n    } else if (nftState !== null) {\n      if (\n        BigInt(toSatoshi(resellPrice)) >\n        BigInt(10) * BigInt(nftState.stats.price)\n      ) {\n        setResellPriceError(\n          `Resell price must be at most 10x the current price`\n        );\n      } else {\n        setResellPriceError(\"\");\n      }\n    } else {\n      setResellPriceError(\"\");\n    }\n  }, [resellPrice, nftState]);\n\n  const doEditProfileSubmit = async (profile) => {\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const payload = {\n      timestamp: Date.now(),\n      owner: profileAddress,\n      name: profile.name,\n      thumbnail: profile.thumbnail,\n    };\n    const message = JSON.stringify(payload);\n\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    const updateResult = await updateProfile(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doCreateCollectionSubmit = async (collection) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      owner: profileAddress,\n      handle: collection.handle,\n      name: collection.name,\n      thumbnail: collection.thumbnail,\n      description: collection.description,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await createCollection(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doEditCollectionSubmit = async (collection) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      handle: collection.handle,\n      name: collection.name,\n      thumbnail: collection.thumbnail,\n      description: collection.description,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await updateCollection(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doMove = async (address, handle) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      address: address,\n      handle: handle,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await setCollectionItem(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doDownload = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const timestamp = Date.now();\n    const message = `${nftAddress}|${timestamp}`;\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n\n    const result = await getContent({\n      address: nftAddress,\n      timestamp: timestamp,\n      signature: signResult.result,\n    });\n    if (result === null || result.error !== undefined) {\n      return;\n    }\n\n    if (result.content !== undefined) {\n      setDownloadLink(result.content);\n    }\n  };\n\n  const doBuy = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const { vins, vouts } = await getBuyTransaction({\n      address: nftAddress,\n      price: toSatoshi(resellPrice),\n    });\n    const signed = (await window.dingo.requestSignTransaction(vins, vouts))\n      .result;\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    const result = await sendBuyTransaction({ transaction: signed });\n    setBuyResult(result);\n  };\n\n  return (\n    <div className=\"profile-container justify-content-center mx-auto\">\n      <Container>\n        {view.startsWith(\"profile\") && profile !== null && (\n          <Row>\n            <div className=\"profile-section profile-header mt-3 pt-3\">\n              <div className=\"d-flex flex-row\">\n                <span\n                  className=\"clickable ms-auto\"\n                  onClick={() => setEditProfileShow(true)}\n                >\n                  <FontAwesomeIcon className=\"me-1\" icon={faPen} /> Edit\n                </span>\n              </div>\n              <div className=\"d-flex flex-row\">\n                <ul className=\"profile-cards-container mt-4 mx-auto mb-4\">\n                  <ProfileCard address={profileAddress} />\n                </ul>\n              </div>\n              <hr />\n              <Nav variant=\"tabs\" className=\"custom-nav-tabs\">\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"creations\"\n                    active={\n                      view === \"profile\" ||\n                      view === \"collection\" ||\n                      view === \"nft\"\n                    }\n                    href={`/profile/${profile.address}/`}\n                  >\n                    NFT creations\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"unassigned\"\n                    active={view === \"profileOwned\"}\n                    href={`/profile/${profile.address}/owned`}\n                  >\n                    Owned NFTs\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"unassigned\"\n                    active={view === \"profileStats\"}\n                    href={`/profile/${profile.address}/stats`}\n                  >\n                    Stats\n                  </Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </div>\n          </Row>\n        )}\n\n        {view === \"profile\" && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                <span className=\"me-auto content-title accent\">\n                  Collections\n                </span>\n                <span\n                  className=\"clickable\"\n                  onClick={() => setCreateCollectionShow(true)}\n                >\n                  <FontAwesomeIcon className=\"me-1\" icon={faPlus} /> Create new\n                </span>\n              </div>\n              {collections !== null && collections.length > 0 && (\n                <ul className=\"collection-cards-container mt-4\">\n                  {collections.map((x) => (\n                    <a key={x} href={`/collection/${x}`}>\n                      <CollectionCard handle={x} />\n                    </a>\n                  ))}\n                </ul>\n              )}\n              {collections !== null && collections.length === 0 && (\n                <div className=\"d-flex flex-row mt-2 mb-2\">\n                  <span className=\"mx-auto text-muted\">\n                    User has no collection\n                  </span>\n                </div>\n              )}\n            </div>\n          </Row>\n        )}\n\n        {view === \"profile\" &&\n          unassignedList !== null &&\n          unassignedList.length > 0 && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Unassigned NFTs\n                  </span>\n                </div>\n                <ul className=\"cards-container mt-4\">\n                  {unassignedList.map((x) => (\n                    <div key={x}>\n                      <a href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                      <DropdownButton\n                        className=\"mt-2 mb-4 px-4\"\n                        title=\"Move to collection\"\n                      >\n                        {collections !== null &&\n                          collections.map((y) => (\n                            <Dropdown.Item key={y} onClick={() => doMove(x, y)}>\n                              {y}\n                            </Dropdown.Item>\n                          ))}\n                      </DropdownButton>\n                    </div>\n                  ))}\n                </ul>\n              </div>\n            </Row>\n          )}\n\n        {view === \"profileOwned\" &&\n          profileLists !== null &&\n          profileLists.ownedNfts.filter(\n            (x) => !profileLists.createdNfts.some((y) => y === x)\n          ).length > 0 && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Owned NFTs\n                  </span>\n                </div>\n                <ul className=\"cards-container mt-4\">\n                  {profileLists.ownedNfts\n                    .filter(\n                      (x) => !profileLists.createdNfts.some((y) => y === x)\n                    )\n                    .map((x) => (\n                      <a key={x} href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                    ))}\n                </ul>\n              </div>\n            </Row>\n          )}\n\n        {view === \"profileOwned\" &&\n          profileLists !== null &&\n          profileLists.historicalNfts\n            .filter((x) => !profileLists.createdNfts.some((y) => y === x))\n            .filter((x) => !profileLists.ownedNfts.some((y) => y === x))\n            .length > 0 && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  <span className=\"me-auto content-title accent\">\n                    Previously owned NFTs\n                  </span>\n                </div>\n                <ul className=\"cards-container mt-4\">\n                  {profileLists.historicalNfts\n                    .filter(\n                      (x) => !profileLists.createdNfts.some((y) => y === x)\n                    )\n                    .filter((x) => !profileLists.ownedNfts.some((y) => y === x))\n                    .map((x) => (\n                      <a key={x} href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                    ))}\n                </ul>\n              </div>\n            </Row>\n          )}\n\n        {view === \"profileStats\" && profileStats !== null && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                <span className=\"me-auto content-title accent\">\n                  Profile Stats\n                </span>\n              </div>\n              <div className=\"mt-4 px-2\">\n                <p>\n                  <b>NFT creations</b>\n                  <ul>\n                    <li>NFTs created: {profileStats.listCount}</li>\n                    <li>Times sold: {profileStats.listSoldCount}</li>\n                    <li>\n                      Total royalties:{\" \"}\n                      {satoshiToLocaleString(profileStats.royaltyVolume)}\n                    </li>\n                  </ul>\n                </p>\n\n                <p>\n                  <b>Trades</b>\n                  <ul>\n                    <li>NFTs bought/sold: {profileStats.tradeCount}</li>\n                    <li>\n                      Total purchases:{\" \"}\n                      {satoshiToLocaleString(profileStats.buyVolume)}\n                    </li>\n                    <li>\n                      Total sales:{\" \"}\n                      {satoshiToLocaleString(profileStats.sellVolume)}\n                    </li>\n                  </ul>\n                </p>\n\n                <p>\n                  <b>Overall</b>\n                  <ul>\n                    <li>\n                      Total Earnings:{\" \"}\n                      {satoshiToLocaleString(\n                        BigInt(profileStats.royaltyVolume) +\n                          BigInt(profileStats.sellVolume) -\n                          BigInt(profileStats.buyVolume)\n                      )}\n                    </li>\n                  </ul>\n                </p>\n              </div>\n            </div>\n          </Row>\n        )}\n\n        {view === \"collection\" && collection !== null && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              {profile !== null && (\n                <div className=\"d-flex flex-row content-header\">\n                  <div\n                    className=\"text-truncate me-auto\"\n                    style={{ display: \"inline\" }}\n                  >\n                    <span className=\"content-title accent\">\n                      Collection by:{\" \"}\n                    </span>\n                    <a\n                      className=\"simple-link\"\n                      href={`/profile/${profile.address}/`}\n                    >\n                      {profile.name === \"\" ||\n                      profile.name === null ||\n                      profile.name === undefined\n                        ? profile.address\n                        : profile.name}\n                    </a>\n                  </div>\n                  <span\n                    className=\"clickable ms-auto\"\n                    onClick={() => setEditCollectionShow(true)}\n                  >\n                    <nobr>\n                      <FontAwesomeIcon className=\"me-1\" icon={faPen} /> Edit\n                    </nobr>\n                  </span>\n                </div>\n              )}\n              <div className=\"d-flex flex-row\">\n                <ul className=\"collection-cards-container mt-4 mx-auto mb-4\">\n                  <CollectionCard handle={collectionHandle} />\n                </ul>\n              </div>\n            </div>\n          </Row>\n        )}\n        {view === \"collection\" && collection !== null && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <ul className=\"cards-container mt-4\">\n                {collectionItems !== null &&\n                  collectionItems.map((x) => (\n                    <a key={x} href={`/nft/${x}`}>\n                      <NFTCard address={x} />\n                    </a>\n                  ))}\n              </ul>\n            </div>\n          </Row>\n        )}\n\n        {view === \"nft\" &&\n          nftMeta !== null &&\n          nftItemCollection !== undefined &&\n          nftOwner !== undefined && (\n            <Row>\n              <div className=\"profile-section profile-content mt-3 py-3\">\n                <div className=\"d-flex flex-row content-header\">\n                  {nftItemCollection === null && profile !== null && (\n                    <div className=\"text-truncate\">\n                      <span className=\"content-title accent\">Created by: </span>\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          profile !== null && `/profile/${profile.address}/`\n                        }\n                      >\n                        {profile.name === \"\" ||\n                        profile.name === null ||\n                        profile.name === undefined\n                          ? profile.address\n                          : profile.name}\n                      </a>\n                    </div>\n                  )}\n                  {nftItemCollection !== null && (\n                    <div className=\"text-truncate\">\n                      <span className=\"content-title accent\">\n                        In collection:{\" \"}\n                      </span>\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          profile !== null &&\n                          `/collection/${nftItemCollection.handle}/`\n                        }\n                      >\n                        {nftItemCollection.name}\n                      </a>\n                    </div>\n                  )}\n                </div>\n                <div>\n                  <ul className=\"cards-container mt-4\">\n                    <NFTCard address={nftAddress} />\n                  </ul>\n                  {nftOwner !== null && (\n                    <div className=\"text-center mt-4\">\n                      <span className=\"content-title accent\">\n                        <b>Owned by: </b>\n                      </span>\n                      <a\n                        className=\"simple-link\"\n                        href={`/profile/${nftOwner.address}/owned`}\n                      >\n                        {nftOwner.name === \"\" ||\n                        nftOwner.name === null ||\n                        nftOwner.name === undefined\n                          ? nftOwner.address\n                          : nftOwner.name}\n                      </a>\n                    </div>\n                  )}\n                  <div className=\"text-center mt-4 text-break\">\n                    <span>\n                      <b>{nftMeta.name}</b>\n                    </span>\n                    <p className=\"text-center\">\n                      <i>{nftMeta.description}</i>\n                    </p>\n                  </div>\n                  {\n                    <div className=\"d-flex flex-row mt-4\">\n                      <span className=\"ms-auto accent\">\n                        <b>Original content:</b>\n                      </span>\n                      &nbsp;\n                      {downloadLink === null && (\n                        <span\n                          className=\"me-auto clickable\"\n                          onClick={doDownload}\n                        >\n                          Verify ownership\n                        </span>\n                      )}\n                      {downloadLink !== null && (\n                        <a\n                          className=\"simple-link me-auto\"\n                          href={downloadLink}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          Link\n                        </a>\n                      )}\n                    </div>\n                  }\n                </div>\n              </div>\n            </Row>\n          )}\n\n        {view === \"nft\" && nftMeta !== null && nftItemCollection !== undefined && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                <span className=\"me-auto content-title accent\">\n                  Buy this NFT\n                </span>\n              </div>\n              <div>\n                {nftBusy !== undefined && nftBusy !== null && (\n                  <div className=\"mt-4 text-center\">\n                    {\" \"}\n                    <h5>NFT busy</h5>\n                    <p>\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          \"https://openchains.info/coin/dingocoin/tx/\" +\n                          nftBusy.txid\n                        }\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                      >\n                        A transaction\n                      </a>{\" \"}\n                      is currenly being confirmed for this NFT. <br />\n                      Please try again in a few minutes.\n                    </p>\n                  </div>\n                )}\n                {nftBusy !== undefined &&\n                  nftBusy === null &&\n                  buyResult === null && (\n                    <div className=\"d-flex flex-column\">\n                      <div className=\"mt-4 text-center px-4\">\n                        <Form.Group>\n                          <Form.Label>\n                            <b>Resell at (*required)</b>\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={resellPrice}\n                            onChange={(e) => {\n                              if (e.target.value.match(/^[0-9]*$/)) {\n                                setResellPrice(e.target.value);\n                              }\n                            }}\n                            style={{ textAlign: \"center\" }}\n                            isInvalid={resellPriceError !== \"\"}\n                          />\n                          {resellPriceError && (\n                            <div>\n                              <Form.Text className=\"input-error\">\n                                {resellPriceError}\n                              </Form.Text>\n                            </div>\n                          )}\n                          <Form.Text className=\"text-muted\">\n                            New price you want to sell this NFT for (min. 1\n                            Dingocoin).\n                          </Form.Text>\n                        </Form.Group>\n                      </div>\n                      <div className=\"d-flex flex-row\">\n                        <Button\n                          className=\"popup-button mt-4 mx-auto px-4\"\n                          style={{ width: \"auto\" }}\n                          disabled={resellPriceError !== \"\"}\n                          onClick={doBuy}\n                        >\n                          Buy and resell NFT\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                {buyResult !== null && buyResult.error === undefined && (\n                  <div className=\"mt-4 text-center\">\n                    {\" \"}\n                    <h4>Transaction submitted!</h4>\n                    <p>\n                      Transaction ID:{\" \"}\n                      <a\n                        className=\"simple-link\"\n                        href={\n                          \"https://openchains.info/coin/dingocoin/tx/\" +\n                          buyResult.txid\n                        }\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                      >\n                        {buyResult.txid}\n                      </a>\n                      <br />\n                      It may take a few minutes for your transaction to be\n                      confirmed.\n                    </p>\n                  </div>\n                )}\n                {buyResult !== null && buyResult.error !== undefined && (\n                  <div style={{ textAlign: \"center\" }} className=\"mt-4\">\n                    {\" \"}\n                    <h4>Transaction failed!</h4>\n                    <p>\n                      - Make sure that your wallet has no pending transaction.\n                      <br />- You can't buy this NFT as its owner/creator.\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </Row>\n        )}\n      </Container>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n\n      {(view === \"profile\" || view === \"profileOwned\") && (\n        <EditProfileModal\n          title=\"Edit profile\"\n          show={editProfileShow}\n          onHide={() => setEditProfileShow(false)}\n          address={profileAddress}\n          onSubmit={doEditProfileSubmit}\n        />\n      )}\n\n      {view === \"profile\" && (\n        <CreateCollectionModal\n          title=\"Create new collection\"\n          show={createCollectionShow}\n          owner={profileAddress}\n          onHide={() => setCreateCollectionShow(false)}\n          onSubmit={doCreateCollectionSubmit}\n        />\n      )}\n\n      {view === \"collection\" && collection !== null && (\n        <EditCollectionModal\n          title=\"Edit collection\"\n          show={editCollectionShow}\n          handle={collection.handle}\n          onHide={() => setEditCollectionShow(false)}\n          onSubmit={doEditCollectionSubmit}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ProfileController;\n","import {\n  Row,\n  Tab,\n  Nav,\n  Button,\n  Dropdown,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryCollectionByTradeCountScaled,\n  queryCollectionByTradeVolume,\n  queryNftByNewest,\n  queryNft,\n  queryNftBySearch,\n  queryCollectionBySearch,\n  queryProfileBySearch,\n  queryProfileByTradeCount,\n  queryProfileByEarnings,\n  getPlatformStats,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport CollectionCard from \"./CollectionCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBolt,\n  faFire,\n  faList,\n  faSearch,\n  faArrowRight,\n  faUserCircle,\n  faBullseye,\n  faCoins,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NFTCard from \"./NFTCard\";\nimport ProfileCard from \"./ProfileCard\";\nimport { toLocaleString } from \"./utils\";\n\nfunction ExploreController() {\n  const location = useLocation();\n  let view = location.pathname.split(\"/\").pop();\n  view = [\"top\", \"active\", \"earnings\", \"all\", \"search\"].includes(view)\n    ? view\n    : \"trending\";\n\n  // Always visible.\n  const [platformStats, setPlatformStats] = React.useState(null);\n\n  // For search view.\n  const [search, setSearch] = React.useState(\"\");\n  const [searchSubView, setSearchSubView] = React.useState(null);\n  const [searchNfts, setSearchNfts] = React.useState(null);\n  const [searchCollections, setSearchCollections] = React.useState(null);\n  const [searchProfiles, setSearchProfiles] = React.useState(null);\n\n  // For explore view.\n  const [collectionList, setCollectionList] = React.useState(null);\n  const [nftList, setNftList] = React.useState(null);\n  const [nftListEnd, setNftListEnd] = React.useState(false);\n  const [profileList, setProfileList] = React.useState(null);\n  const [queryText, setQueryText] = React.useState(\"Newly listed\");\n\n  const [viewMoreEnabled, setViewMoreEnabled] = React.useState(true);\n\n  React.useEffect(() => {\n    (async () => {\n      // Always use.\n      setPlatformStats(await getPlatformStats());\n\n      if (view === \"trending\") {\n        const l = await queryCollectionByTradeCountScaled();\n        setCollectionList(l.results);\n      } else if (view === \"top\") {\n        const l = await queryCollectionByTradeVolume();\n        setCollectionList(l.results);\n      } else if (view === \"active\") {\n        const l = await queryProfileByTradeCount();\n        setProfileList(l.results);\n      } else if (view === \"earnings\") {\n        const l = await queryProfileByEarnings();\n        setProfileList(l.results);\n      } else if (view === \"all\") {\n        const l = (await queryNftByNewest({ beforeId: null })).results;\n        if (l.length < 100) {\n          setNftListEnd(true);\n        }\n        setNftList(l);\n      } else if (view === \"search\") {\n        setSearch(new URLSearchParams(location.search).get(\"query\"));\n        await doChangeSearchSubview(\"nfts\");\n      }\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/explore/search?query=${search.trim()}`);\n    }\n  };\n\n  const doChangeSearchSubview = async (subview) => {\n    // TODO: Figure out a more elegant way to retrieve this from the existing react state.\n    const search = new URLSearchParams(location.search).get(\"query\");\n\n    setSearchSubView(subview);\n\n    if (subview === \"nfts\" && searchNfts === null) {\n      setSearchNfts((await queryNftBySearch({ search: search })).results);\n    }\n    if (subview === \"collections\" && searchCollections === null) {\n      setSearchCollections(\n        (await queryCollectionBySearch({ search: search })).results\n      );\n    }\n    if (subview === \"profiles\" && searchProfiles === null) {\n      setSearchProfiles(\n        (await queryProfileBySearch({ search: search })).results\n      );\n    }\n  };\n\n  const doChangeQuery = async (eventKey, event) => {\n    const [key, direction] = eventKey.split(\"|\");\n    setQueryText(event.target.innerText);\n\n    setNftListEnd(false);\n    if (key === \"listHeight\") {\n      const l = (await queryNftByNewest({ beforeId: null })).results;\n      if (l.length < 100) {\n        setNftListEnd(true);\n      }\n      setNftList(l);\n      setViewMoreEnabled(true);\n    } else {\n      const l = await queryNft({\n        key: key,\n        direction: direction,\n        limit: 100,\n        offset: 0,\n      });\n      setNftList(\n        l.results.map((x) => {\n          return {\n            address: x,\n          };\n        })\n      );\n      setViewMoreEnabled(false);\n    }\n  };\n\n  const onViewMore = async () => {\n    const l = (\n      await queryNftByNewest({ beforeId: nftList[nftList.length - 1].id })\n    ).results;\n    if (l.length < 100) {\n      setNftListEnd(true);\n    }\n    setNftList(nftList.concat(l));\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Explore</h1>\n        {platformStats !== null && (\n          <p className=\"mt-2\">\n            Total trade volume: {toLocaleString(platformStats.totalVolume)}{\" \"}\n            DINGO\n          </p>\n        )}\n        <Form onSubmit={doSearch}>\n          <InputGroup className=\"mt-4\">\n            <InputGroup.Text id=\"basic-addon1\">\n              <FontAwesomeIcon icon={faSearch} />\n            </InputGroup.Text>\n            {search !== null && (\n              <FormControl\n                className=\"search-box\"\n                placeholder={\"Search NFTs, collections, profiles...\"}\n                value={search}\n                onChange={(e) => {\n                  if (e.target.value.length <= 50) {\n                    setSearch(e.target.value);\n                  }\n                }}\n              />\n            )}\n            {search !== \"\" && (\n              <Button variant=\"primary\" type=\"submit\">\n                <FontAwesomeIcon icon={faArrowRight} />\n              </Button>\n            )}\n          </InputGroup>\n        </Form>\n      </div>\n      {view === \"search\" && (\n        <Tab.Container\n          id=\"left-tabs-example\"\n          activeKey={searchSubView}\n          onSelect={doChangeSearchSubview}\n        >\n          <Row>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n              <Nav.Item className=\"ms-auto text-center\">\n                <Nav.Link eventKey=\"nfts\">\n                  <FontAwesomeIcon icon={faList} className=\"me-2\" />\n                  NFTs\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"text-center\">\n                <Nav.Link eventKey=\"collections\">\n                  <FontAwesomeIcon icon={faBolt} className=\"me-2\" />\n                  Collections\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto text-center\">\n                <Nav.Link eventKey=\"profiles\">\n                  <FontAwesomeIcon icon={faUserCircle} className=\"me-2\" />\n                  Profiles\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </Row>\n          <Row>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"nfts\">\n                <ul className=\"cards-container mt-4\">\n                  {searchNfts === null && (\n                    <div className=\"d-flex flex-row\">\n                      <Spinner className=\"mx-auto\" animation=\"border\" />\n                    </div>\n                  )}\n                  {searchNfts !== null &&\n                    searchNfts.map((x) => (\n                      <a key={x.address} href={`/nft/${x}`}>\n                        <NFTCard address={x} />\n                      </a>\n                    ))}\n                  {searchNfts !== null && searchNfts.length === 0 && (\n                    <div className=\"d-flex flex-row\">\n                      <p className=\"mx-auto text-muted\" animation=\"border\">\n                        No matching NFTs\n                      </p>\n                    </div>\n                  )}\n                </ul>\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"collections\">\n                <ul className=\"collection-cards-container mt-4\">\n                  {searchCollections === null && (\n                    <div className=\"d-flex flex-row\">\n                      <Spinner className=\"mx-auto\" animation=\"border\" />\n                    </div>\n                  )}\n                  {searchCollections !== null &&\n                    searchCollections.map((x) => (\n                      <a key={x} href={`/collection/${x}`}>\n                        <CollectionCard handle={x} />\n                      </a>\n                    ))}\n                  {searchCollections !== null &&\n                    searchCollections.length === 0 && (\n                      <div className=\"d-flex flex-row\">\n                        <p className=\"mx-auto text-muted\" animation=\"border\">\n                          No matching collection\n                        </p>\n                      </div>\n                    )}\n                </ul>\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"profiles\">\n                <ul className=\"profile-cards-container mt-4\">\n                  {searchProfiles === null && (\n                    <div className=\"d-flex flex-row\">\n                      <Spinner className=\"mx-auto\" animation=\"border\" />\n                    </div>\n                  )}\n                  {searchProfiles !== null &&\n                    searchProfiles.map((x) => (\n                      <a key={x} href={`/profile/${x}`}>\n                        <ProfileCard address={x} />\n                      </a>\n                    ))}\n                  {searchProfiles !== null && searchProfiles.length === 0 && (\n                    <div className=\"d-flex flex-row\">\n                      <p className=\"mx-auto text-muted\" animation=\"border\">\n                        No matching profile\n                      </p>\n                    </div>\n                  )}\n                </ul>\n              </Tab.Pane>\n            </Tab.Content>\n          </Row>\n        </Tab.Container>\n      )}\n      {[\"trending\", \"top\", \"active\", \"earnings\", \"all\"].includes(view) && (\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <Row>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n              <Nav.Item className=\"ms-auto text-center\">\n                <Nav.Link href=\"/explore/\" active={view === \"trending\"}>\n                  <FontAwesomeIcon icon={faBolt} className=\"me-2\" />\n                  Trending\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"text-center\">\n                <Nav.Link href=\"/explore/top\" active={view === \"top\"}>\n                  <FontAwesomeIcon icon={faFire} className=\"me-2\" />\n                  Top\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"text-center\">\n                <Nav.Link href=\"/explore/active\" active={view === \"active\"}>\n                  <FontAwesomeIcon icon={faBullseye} className=\"me-2\" />\n                  Active\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"text-center\">\n                <Nav.Link href=\"/explore/earnings\" active={view === \"earnings\"}>\n                  <FontAwesomeIcon icon={faCoins} className=\"me-2\" />\n                  Earnings\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto text-center\">\n                <Nav.Link href=\"/explore/all\" active={view === \"all\"}>\n                  <FontAwesomeIcon icon={faList} className=\"me-2\" />\n                  All NFTs\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </Row>\n          <Row>\n            {[\"trending\", \"top\"].includes(view) && collectionList !== null && (\n              <Tab.Content>\n                <ul className=\"collection-cards-container mt-4\">\n                  {collectionList !== null &&\n                    collectionList.map((x) => (\n                      <a key={x} href={`/collection/${x}`}>\n                        <CollectionCard handle={x} />\n                      </a>\n                    ))}\n                </ul>\n              </Tab.Content>\n            )}\n            {[\"active\", \"earnings\"].includes(view) && profileList !== null && (\n              <Tab.Content>\n                <ul className=\"profile-cards-container mt-4\">\n                  {profileList !== null &&\n                    profileList.map((x) => (\n                      <a key={x} href={`/profile/${x}`}>\n                        <ProfileCard address={x} />\n                      </a>\n                    ))}\n                </ul>\n              </Tab.Content>\n            )}\n            {view === \"all\" && (\n              <Tab.Content>\n                <Dropdown\n                  onSelect={doChangeQuery}\n                  style={{ textAlign: \"center\" }}\n                >\n                  <Dropdown.Toggle className=\"px-4 mt-4\">\n                    {queryText}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"listHeight|DESC\">\n                      Newly listed\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeHeight|DESC\">\n                      Recently sold\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"price|DESC\">\n                      Highest price\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"price|ASC\">\n                      Lowest price\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeCount|DESC\">\n                      Highest trade count\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeCount|ASC\">\n                      Lowest trade count\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeVolume|DESC\">\n                      Highest trade volume\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeVolume|ASC\">\n                      Lowest trade volume\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                <ul className=\"cards-container mt-4\">\n                  {nftList !== null &&\n                    nftList.map((x) => (\n                      <a key={x.address} href={`/nft/${x.address}`}>\n                        <NFTCard address={x.address} />\n                      </a>\n                    ))}\n                  {viewMoreEnabled && nftList !== null && !nftListEnd && (\n                    <Button onClick={onViewMore}>View more</Button>\n                  )}\n                </ul>\n              </Tab.Content>\n            )}\n          </Row>\n        </Tab.Container>\n      )}\n    </div>\n  );\n}\n\nexport default ExploreController;\n","export default __webpack_public_path__ + \"static/media/dingocoin.15331900.png\";","import {\n  Button,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLock,\n  faPiggyBank,\n  faHandHoldingUsd} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\n\nfunction Main() {\n  return (\n    <div>\n      <header className=\"section-a\" id=\"home\">\n        <div className=\"particles-container\">\n          <Container className=\"text-center\">\n            <Row>\n              <Col>\n                <div className=\"isometric-holder\">\n                  <div className=\"isometric\"></div>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <h1 className=\"mt-5 accent\">Dingocoin NFT Platform</h1>\n              <p className=\"mb-4\">The next generation of NFTs</p>\n            </Row>\n            <Row className=\"pt-3 pb-2\">\n              <Col>\n                <div className=\"project-card mx-auto\">\n                  <div className=\"logo-holder\">\n                    <FontAwesomeIcon className=\"faicon\" icon={faPiggyBank} />\n                  </div>\n                  <h5>Ultra-low Costs</h5>\n                  <p>Create and trade NFTs with {\"<$0.001\"} gas fees</p>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"project-card mx-auto\">\n                  <div className=\"logo-holder\">\n                    <FontAwesomeIcon\n                      className=\"faicon\"\n                      icon={faHandHoldingUsd}\n                    />\n                  </div>\n                  <h5>On-chain Trading</h5>\n                  <p>You receive earnings and royalties immediately</p>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"project-card mx-auto\">\n                  <div className=\"logo-holder\">\n                    <FontAwesomeIcon className=\"faicon\" icon={faLock} />\n                  </div>\n                  <h5>Cryptographically Unique</h5>\n                  <p>The same content can never be reused in another NFT</p>\n                </div>\n              </Col>\n            </Row>\n            <div className=\"mt-4 mb-2\">\n              <CustomDivider />\n            </div>\n            <h2>Get started</h2>\n            <div className=\"d-flex flex-row mb-4 mt-4\">\n              <a href=\"/explore\" className=\"mt-3 ms-auto me-3\">\n                <Button\n                  className=\"popup-button px-4 py-2\"\n                  variant=\"primary\"\n                >\n                  Explore NFTs\n                </Button>\n              </a>\n              <a href=\"/create\" className=\"mt-3 ms-3 me-auto\">\n                <Button\n                  className=\"popup-button px-4 py-2\"\n                  variant=\"primary\"\n                >\n                  Create your NFT\n                </Button>\n              </a>\n            </div>\n          </Container>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Main;\n","import \"./App.scss\";\nimport CreateController from \"./CreateController\";\nimport ProfileController from \"./ProfileController\";\nimport ExploreController from \"./ExploreController\";\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Form,\n  FormControl,\n  Button,\n  Modal,\n  InputGroup,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport DingocoinLogo from \"./assets/img/dingocoin.png\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from \"react-router-dom\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const [location, setLocation] = React.useState(null);\n  React.useEffect(() => {\n    setLocation(window.location.pathname);\n  }, []);\n  React.useEffect(() => {}, [location]);\n\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [searchErrorShow, setSearchErrorShow] = React.useState(null);\n\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (searchQuery.trim() !== \"\") {\n      window.location.assign(`/explore/search?query=${searchQuery.trim()}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"navbar\" bg=\"dark\" expand=\"lg\" sticky=\"top\">\n        <Container>\n          <Navbar.Brand href=\"/\" className=\"navbar-brand align-items-center\">\n            <img alt=\"\" src={DingocoinLogo} />\n            <span>DINGOCOIN</span>\n            <span className=\"navbar-brand-subtitle\"> NFT Platform</span>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse>\n            <Nav\n              className=\"ms-auto\"\n              style={{ paddingRight: \"1.5rem\", textAlign: \"center\" }}\n            >\n              <Nav.Link href=\"/explore\">Explore</Nav.Link>\n              <Nav.Link href=\"/create\">Create</Nav.Link>\n              <Nav.Link href=\"https://dingocoin.org/create\" target=\"_blank\">\n                <nobr>Visit Dingocoin</nobr>\n              </Nav.Link>\n            </Nav>\n            <Form className=\"d-flex\" onSubmit={doSearch}>\n              <InputGroup\n                style={{\n                  minWidth: \"20rem\",\n                }}\n              >\n                <FormControl\n                  className=\"search-box\"\n                  placeholder={\"Search NFTs, collections, profiles...\"}\n                  value={searchQuery}\n                  onChange={(e) => {\n                    if (e.target.value.length <= 50) {\n                      setSearchQuery(e.target.value);\n                    }\n                  }}\n                />\n                {searchQuery !== \"\" && (\n                  <Button variant=\"secondary\" type=\"submit\">\n                    <FontAwesomeIcon icon={faAngleRight}></FontAwesomeIcon>\n                  </Button>\n                )}\n              </InputGroup>\n            </Form>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <section className=\"section-content\">\n        <Router>\n          <Routes>\n            <Route index element={<Main />} />\n            <Route path=\"/profile\">\n              <Route path=\":profileAddress\" element={<ProfileController />}>\n                <Route path=\"owned\" element={<ProfileController />} />\n                <Route path=\"stats\" element={<ProfileController />} />\n              </Route>\n            </Route>\n            <Route\n              path=\"/collection/:collectionHandle\"\n              element={<ProfileController />}\n            />\n            <Route path=\"/nft/:nftAddress\" element={<ProfileController />} />\n            <Route path=\"/explore\" element={<ExploreController />}>\n              <Route path=\"top\" element={<ExploreController />} />\n              <Route path=\"active\" element={<ExploreController />} />\n              <Route path=\"earnings\" element={<ExploreController />} />\n              <Route path=\"all\" element={<ExploreController />} />\n              <Route path=\"search\" element={<ExploreController />} />\n            </Route>\n            <Route path=\"/create\" element={<CreateController />} />\n            <Route element={<Navigate to=\"/\" />} />\n          </Routes>\n        </Router>\n      </section>\n      <section>\n        <div className=\"justify-content-center section-footer align-items-center\">\n          <h6>Copyright © The Dingocoin Project 2021-2022</h6>\n        </div>\n      </section>\n\n      <Modal\n        size=\"md\"\n        centered\n        show={searchErrorShow}\n        onHide={() => setSearchErrorShow(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>NFT/profile not found</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container className=\"text-center my-2\">\n            <p>No results found.</p>\n            <Button className=\"mx-2\" onClick={() => setSearchErrorShow(false)}>\n              Close\n            </Button>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n","/* global BigInt */\n\nimport Web3Utils from \"web3-utils\";\n\nconst toSatoshi = (x) => {\n  if (x === null || x === undefined || typeof x !== \"string\" || x === \"\") {\n    throw new Error(\"Expected string input\");\n  }\n  return (BigInt(Web3Utils.toWei(x, \"gwei\")) / 10n).toString();\n};\n\nconst toLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = BigInt(x).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst satoshiToLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = (BigInt(x) / 100000000n).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst post = async (link, data) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 300000);\n  return (\n    await fetch(link, {\n      withCredentials: true,\n      method: \"POST\",\n      signal: controller.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n  ).json();\n};\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 300000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nexport { toSatoshi, toLocaleString, satoshiToLocaleString, post, get };\n","// Assets.\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CustomDivider() {\n  return (\n    <div className=\"divider-custom\">\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n      <div className=\"divider-custom-icon mt-2 mb-2\">\n        <FontAwesomeIcon icon={faAngleDown} />\n      </div>\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n    </div>\n  );\n}\n\nexport default CustomDivider;\n","import { Modal, Container, Button } from \"react-bootstrap\";\nimport React from \"react\";\n\nfunction GetWalletModal(props) {\n  return (\n    <Modal\n      size=\"md\"\n      centered\n      show={props.show}\n      onHide={props.onHide}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Browser Wallet required\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container className=\"text-center my-2\">\n          <p>You need a Dingocoin browser wallet for this.<br/>Set it up in less than a minute.</p>\n          <a className=\"my-1\" href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Chrome wallet</Button>\n          </a>\n          <a className=\"my-1\" href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Firefox wallet</Button>\n          </a>\n        </Container>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default GetWalletModal;\n"],"sourceRoot":""}