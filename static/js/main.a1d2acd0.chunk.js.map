{"version":3,"sources":["CreateController.jsx","utils.js","storage.js","NFTCard.jsx","NFTController.jsx","ProfileController.jsx","ExploreController.jsx","assets/img/dingocoin.png","Main.jsx","App.jsx","index.jsx","CustomDivider.jsx","api.js","GetWalletModal.jsx"],"names":["toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","error","CreateController","React","useState","content","setContent","contentError","setContentError","listingPrice","setListingPrice","royalty","setRoyalty","name","setName","description","setDescription","preview","setPreview","previewError","setPreviewError","tags","setTags","success","setSuccess","address","setAddress","getWalletShow","setGetWalletShow","useEffect","size","a","Buffer","f","from","isPng","sizeOf","width","height","doSubmit","e","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","undefined","window","dingo","getListTransaction","Hex","Sha256","Base64","parse","stringify","toSatoshi","Math","floor","contentHash","price","getListTransactionResponse","requestSignTransaction","vouts","signed","sendListTransaction","transaction","sendListTransactionResponse","className","style","maxWidth","onSubmit","Group","Label","Control","type","onChange","target","files","isInvalid","isValid","Text","value","placeholder","length","match","parseInt","toFixed","Range","textAlign","variant","disabled","href","show","onHide","x","Error","BigInt","Web3Utils","toWei","toString","satoshiToLocaleString","isNegative","integer","replace","post","link","data","controller","AbortController","setTimeout","abort","fetch","withCredentials","method","signal","headers","Accept","body","JSON","json","get","getMeta","response","status","getPreviewLink","getState","getProfile","owner","getProfileLists","getExplore","key","NFTCard","props","domRef","useRef","isVisible","setVisible","previewLink","setPreviewLink","setPrice","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","meta","state","Card","ref","role","Img","src","loading","Body","Title","Subtitle","NFTController","setMeta","setState","ownerProfile","setOwnerProfile","creatorProfile","setCreatorProfile","busy","setBusy","resellPrice","setResellPrice","resellPriceError","setResellPriceError","buyResult","setBuyResult","URLSearchParams","location","search","s","getBusy","creator","doDownload","timestamp","Date","now","message","requestSign","signResult","getContent","signature","open","doBuy","getBuyTransaction","vins","sendBuyTransaction","Container","Row","CustomDivider","onClick","display","txid","rel","Form","Button","GetWalletModal","ProfileController","editShow","setEditShow","nameRef","createRef","profile","setProfile","profileLists","setProfileLists","document","title","p","pList","console","log","payload","updateProfile","reload","Tabs","defaultActiveKey","createdNfts","Tab","eventKey","map","ownedNfts","Modal","centered","onEntered","focus","Header","closeButton","id","ExploreController","newList","setNewList","volumeList","setVolumeList","byNew","byVolume","Main","Col","fluid","icon","faPiggyBank","faHandHoldingUsd","faLock","App","setLocation","pathname","searchQuery","setSearchQuery","searchErrorShow","setSearchErrorShow","doSearch","trim","assign","Navbar","bg","expand","sticky","Brand","alt","DingocoinLogo","Toggle","Collapse","Nav","paddingRight","Link","FormControl","borderTopRightRadius","borderBottomRightRadius","minWidth","borderTopLeftRadius","borderBottomLeftRadius","faAngleRight","path","element","ReactDOM","render","getElementById","faAngleDown","API_URL"],"mappings":"gWAeMA,EAAW,SAACC,GAAD,OACf,IAAIC,SAAQ,SAACC,EAASC,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,OAAOC,MAAM,KAAK,KACvDL,EAAOM,QAAU,SAACC,GAAD,OAAWR,EAAOQ,QAoTxBC,IAjTf,WACE,MAA8BC,IAAMC,SAAS,MAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCH,IAAMC,SAAS,IAAvD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAwCL,IAAMC,SAAS,QAAvD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA8BP,IAAMC,SAAS,GAA7C,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAwBT,IAAMC,SAAS,IAAvC,mBAAOS,EAAP,KAAaC,EAAb,KACA,EAAsCX,IAAMC,SAAS,IAArD,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAA8Bb,IAAMC,SAAS,MAA7C,mBAAOa,EAAP,KAAgBC,EAAhB,KACA,EAAwCf,IAAMC,SAAS,IAAvD,mBAAOe,EAAP,KAAqBC,EAArB,KACA,EAAwBjB,IAAMC,SAAS,IAAvC,oBAAOiB,GAAP,MAAaC,GAAb,MAEA,GAA8BnB,IAAMC,SAAS,MAA7C,qBAAOmB,GAAP,MAAgBC,GAAhB,MACA,GAA8BrB,IAAMC,SAAS,MAA7C,qBAAOqB,GAAP,MAAgBC,GAAhB,MAEA,GAA0CvB,IAAMC,UAAS,GAAzD,qBAAOuB,GAAP,MAAsBC,GAAtB,MAEAzB,IAAM0B,WAAU,WACE,OAAZxB,EAGOA,EAAQyB,KA/BE,IAgCnBtB,EAAgB,+CAGhBA,EAAgB,IANhBA,EAAgB,0BAQjB,CAACH,IAEJF,IAAM0B,WAAU,WACd,sBAAC,4BAAAE,EAAA,yDACiB,OAAZd,EADL,4BAEae,EAFb,SAE+B3C,EAAS4B,GAFxC,mBAESgB,EAFT,KAEoBC,KAFpB,eAEkD,UAC1CC,YAAMF,GAEAhB,EAAQa,KA5CF,IA6CfV,EAAgB,+CACa,MAApBgB,IAAOH,GAAGI,OAAsC,MAArBD,IAAOH,GAAGK,OAC9ClB,EAAgB,2CAEhBA,EAAgB,IANhBA,EAAgB,6BAJrB,uBAaGA,EAAgB,wBAbnB,2CAAD,KAgBC,CAACH,IAEJ,IAAMsB,GAAQ,uCAAG,WAAOC,GAAP,mBAAAT,EAAA,yDACfS,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,gCAEOC,IAAjBC,OAAOC,MALI,uBAMbnB,IAAiB,GANJ,sCAU0BoB,IAV1B,KAaAC,IAbA,KAacC,IAbd,KAaqBC,IAbrB,UAawC9D,EAASgB,GAbjD,qCAa4B+C,MAb5B,8CAaIC,UAbJ,qBAcNC,YAAU7C,GAdJ,KAeJ,GAAK8C,KAAKC,MAAiB,GAAV7C,EAAgB,KAf7B,OAab8C,YAba,KAcbC,MAda,KAeb/C,QAfa,2CAkBkB,QAR3BgD,EAVS,WAmBb,UAAWA,GAnBE,oEAyBPb,OAAOC,MAAMa,uBACjB,GACAD,EAA2BE,OA3BhB,eAwBTC,EAxBS,OA6BbhE,OA7Ba,MA+B2BiE,IA/B3B,UAgCE1E,EAASgB,GAhCX,wBAiCQ,OAAZY,EAjCI,uBAiCe,KAjCf,yCAiC4B5B,EAAS4B,GAjCrC,sDAkCPJ,EAlCO,MAmCAE,EAnCA,MAoCPM,GApCO,MAqCAyC,EArCA,OAgCbzD,QAhCa,MAiCbY,QAjCa,MAkCbJ,KAlCa,MAmCbE,YAnCa,MAoCbM,KApCa,MAqCb2C,YArCa,6CAwCmB,QAT5BC,EA/BS,WAyCb,UAAWN,GAzCE,mDA8CfnC,IAAW,GACXE,GAAWuC,EAA4BxC,SA/CxB,4CAAH,sDAkDd,OACE,gCACE,cAAC,IAAD,CAAWyC,UAAU,aAArB,SACE,eAAC,IAAD,WACE,oBAAIA,UAAU,OAAd,wBACA,cAAC,IAAD,SAGJ,cAAC,IAAD,CAAWC,MAAO,CAAEC,SAAU,SAA9B,SACE,cAAC,IAAD,UACE,eAAC,IAAD,YACgB,OAAZ7C,KAAgC,IAAZA,KACpB,eAAC,IAAD,CAAM8C,SAAU9B,GAAhB,UACE,eAAC,IAAK+B,MAAN,CAAYJ,UAAU,YAAtB,UACE,cAAC,IAAKK,MAAN,UACE,0DAEF,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,SAAU,SAAClC,GAAD,OAAOtB,EAAWsB,EAAEmC,OAAOC,MAAM,KAC3CC,UAA4B,OAAjB1D,GAA0C,KAAjBA,EACpC2D,QAA0B,KAAjB3D,IAEVA,GACC,8BACE,cAAC,IAAK4D,KAAN,CAAWb,UAAU,cAArB,SACG/C,MAIP,cAAC,IAAK4D,KAAN,CAAWb,UAAU,aAArB,mHAMF,eAAC,IAAKI,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC,IAAKK,MAAN,UACE,sDAEF,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,SAAU,SAAClC,GAAD,OAAOlC,EAAWkC,EAAEmC,OAAOC,MAAM,KAC3CC,UAA4B,OAAjBtE,GAA0C,KAAjBA,EACpCuE,QAA0B,KAAjBvE,IAEVA,GACC,8BACE,cAAC,IAAKwE,KAAN,CAAWb,UAAU,cAArB,SACG3D,MAIP,cAAC,IAAKwE,KAAN,CAAWb,UAAU,aAArB,gJAOF,eAAC,IAAKI,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC,IAAKK,MAAN,8BACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLO,MAAOnE,EACPoE,YAAY,oBACZP,SAAU,SAAClC,GAAD,OAAO1B,EAAQ0B,EAAEmC,OAAOK,QAClCF,QAAkB,KAATjE,GAAeA,EAAKqE,QAAU,GACvCL,UAAoB,KAAThE,GAAeA,EAAKqE,OAAS,KAEzCrE,EAAKqE,OAAS,IACb,8BACE,cAAC,IAAKH,KAAN,CAAWb,UAAU,cAArB,6BAKJ,cAAC,IAAKa,KAAN,CAAWb,UAAU,aAArB,8DAKF,eAAC,IAAKI,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC,IAAKK,MAAN,qCACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLO,MAAOjE,EACPkE,YAAY,qBACZP,SAAU,SAAClC,GAAD,OAAOxB,EAAewB,EAAEmC,OAAOK,QACzCF,QAAyB,KAAhB/D,GAAsBA,EAAYmE,QAAU,IACrDL,UAA2B,KAAhB9D,GAAsBA,EAAYmE,OAAS,MAEvDnE,EAAYmE,OAAS,KACpB,8BACE,cAAC,IAAKH,KAAN,CAAWb,UAAU,cAArB,gCAKJ,cAAC,IAAKa,KAAN,CAAWb,UAAU,aAArB,8DAKF,eAAC,IAAKI,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAAC,IAAKK,MAAN,8BACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLO,MAAO3D,GACP4D,YAAY,sCACZP,SAAU,SAAClC,GAAD,OAAOlB,GAAQkB,EAAEmC,OAAOK,QAClCF,QAAkB,KAATzD,IAAeA,GAAK6D,QAAU,IACvCL,UAAoB,KAATxD,IAAeA,GAAK6D,OAAS,MAEzC7D,GAAK6D,OAAS,KACb,8BACE,cAAC,IAAKH,KAAN,CAAWb,UAAU,cAArB,yBAGJ,cAAC,IAAKa,KAAN,CAAWb,UAAU,aAArB,8DAKF,eAAC,IAAKI,MAAN,CAAYJ,UAAU,YAAtB,UACE,cAAC,IAAKK,MAAN,UACE,4DAEF,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLO,MAAOvE,EACPiE,SAAU,SAAClC,GAEPA,EAAEmC,OAAOK,MAAMG,MAAM,aACrBC,SAAS5C,EAAEmC,OAAOK,QAAU,EAE5BtE,EAAgB8B,EAAEmC,OAAOK,OAEzBtE,EAAgB,WAItB,cAAC,IAAKqE,KAAN,CAAWb,UAAU,aAArB,4EAKF,eAAC,IAAKI,MAAN,CAAYJ,UAAU,OAAtB,UACE,eAAC,IAAKK,MAAN,WACE,+DACE,IAAMhB,KAAKC,MAAiB,GAAV7C,EAAgB,KAAO,IAAI0E,QAAQ,GACrD,OAEJ,cAAC,IAAKC,MAAN,CACEN,MAAOrE,EACP+D,SAAU,SAAClC,GAAD,OAAO5B,EAAW4B,EAAEmC,OAAOK,UAEvC,cAAC,IAAKD,KAAN,CAAWb,UAAU,aAArB,uEAKF,qBAAKC,MAAO,CAAEoB,UAAW,UAAzB,SACe,OAAZhE,IACC,cAAC,IAAD,CACE2C,UAAU,yBACVsB,QAAQ,UACRf,KAAK,SACLgB,SACc,OAAZpF,GACiB,KAAjBE,GACa,OAAZU,GAAqC,KAAjBE,EAPzB,8BAgBK,IAAZI,IACC,sBAAK4C,MAAO,CAAEoB,UAAW,UAAzB,UACG,IACD,8CACA,8CACe,4BAAI9D,QAEnB,qBAAK0C,MAAO,CAAEoB,UAAW,UAAzB,SACE,mBAAGG,KAAM,gBAAkBjE,GAA3B,SACE,cAAC,IAAD,CAAQyC,UAAU,oBAAoBsB,QAAQ,UAA9C,2CAWd,cAAC,IAAD,CACEG,KAAMhE,GACNiE,OAAQ,kBAAMhE,IAAiB,Y,+RC9TjC0B,EAAY,SAACuC,GACjB,GAAU,OAANA,QAAoBhD,IAANgD,GAAgC,kBAANA,GAAwB,KAANA,EAC5D,MAAM,IAAIC,MAAM,yBAElB,OAAQC,OAAOC,IAAUC,MAAMJ,EAAG,SAAW,KAAKK,YAG9CC,EAAwB,SAACN,GAC7B,IAAMO,EAAaL,OAAOF,GAAK,GAC3BO,IACFP,GAAKA,GAEP,IAAMQ,GAAWN,OAAOF,GAAK,YAAYK,WACzC,OACGE,EAAa,IAAM,IAApB,UAA6BC,EAAQC,QAAQ,wBAAyB,OAIpEC,EAAI,uCAAG,WAAOC,EAAMC,GAAb,eAAA1E,EAAA,6DACL2E,EAAa,IAAIC,gBACvBC,YAAW,kBAAMF,EAAWG,UAAS,KAF1B,SAIHC,MAAMN,EAAM,CAChBO,iBAAiB,EACjBC,OAAQ,OACRC,OAAQP,EAAWO,OACnBC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKhE,UAAUoD,KAZd,uCAcTa,QAdS,2CAAH,yD,8RCfJC,EAAM,SAACf,GACX,IAAME,EAAa,IAAIC,gBAEvB,OADAC,YAAW,kBAAMF,EAAWG,UAAS,KAC9BC,MAAMN,EAAM,CACjBO,iBAAiB,EACjBC,OAAQ,MACRC,OAAQP,EAAWO,UAIjBO,EAAO,uCAAG,WAAO/F,GAAP,eAAAM,EAAA,sEACSwF,EAAI,GAAD,OAlBR,kDAkBQ,YAAmB9F,IAD/B,UAEU,OADlBgG,EADQ,QAEDC,OAFC,yCAGLD,EAASH,QAHJ,gCAKL,MALK,2CAAH,sDASPK,EAAc,uCAAG,WAAOlG,GAAP,SAAAM,EAAA,yFAzBA,qDAyBA,YACON,EADP,oDAAH,sDAIdmG,EAAQ,uCAAG,WAAOnG,GAAP,eAAAM,EAAA,sEACQwF,EAAI,GAAD,OA7BP,mDA6BO,YAAoB9F,IAD/B,UAES,OADlBgG,EADS,QAEFC,OAFE,yCAGND,EAASH,QAHH,gCAKN,MALM,2CAAH,sDASRO,EAAU,uCAAG,WAAOC,GAAP,eAAA/F,EAAA,sEACMwF,EAAI,GAAD,OArCL,qDAqCK,YAAsBO,IAD/B,UAEO,OADlBL,EADW,QAEJC,OAFI,yCAGRD,EAASH,QAHD,gCAKR,MALQ,2CAAH,sDASVS,EAAe,uCAAG,WAAOD,GAAP,eAAA/F,EAAA,sEACCwF,EAAI,GAAD,OA7CC,0DA6CD,YAA4BO,IADhC,UAEE,OADlBL,EADgB,QAETC,OAFS,yCAGbD,EAASH,QAHI,gCAKb,MALa,2CAAH,sDASfU,EAAU,uCAAG,WAAOC,GAAP,eAAAlG,EAAA,sEACMwF,EAAI,GAAD,OArDL,qDAqDK,YAAsBU,IAD/B,UAEO,OADlBR,EADW,QAEJC,OAFI,yCAGRD,EAASH,QAHD,gCAKR,MALQ,2CAAH,sD,wBCgBDY,MApEf,SAAiBC,GACf,IAAMC,EAASjI,IAAMkI,SACrB,EAAgClI,IAAMC,UAAS,GAA/C,mBAAOkI,EAAP,KAAkBC,EAAlB,KACA,EAAsCpI,IAAMC,SAAS,MAArD,mBAAOoI,EAAP,KAAoBC,EAApB,KACA,EAAwBtI,IAAMC,SAAS,MAAvC,mBAAOS,EAAP,KAAaC,EAAb,KACA,EAA0BX,IAAMC,SAAS,MAAzC,mBAAOsD,EAAP,KAAcgF,EAAd,KAgCA,OA9BAvI,IAAM0B,WAAU,WACd,IAAM8G,EAAW,IAAIC,sBAAqB,SAACC,GACzCA,EAAQC,SAAQ,SAACC,GACXA,EAAMC,gBACRT,GAAW,SAKjB,OADAI,EAASM,QAAQb,EAAOc,SACjB,WACL,IACEP,EAASQ,UAAUf,EAAOc,SAC1B,cAEH,IAEH/I,IAAM0B,WAAU,WACd,sBAAC,gCAAAE,EAAA,0DACKuG,EADL,iCAEsBd,EAAQW,EAAM1G,SAFpC,cAES2H,EAFT,gBAG6BzB,EAAeQ,EAAM1G,SAHlD,cAGS+G,EAHT,gBAIuBZ,EAASO,EAAM1G,SAJtC,OAIS4H,EAJT,OAMGZ,EAAeD,GACf1H,EAAiB,OAATsI,EAAgB,KAAOA,EAAKvI,MACpC6H,EAAmB,OAAVW,EAAiB,KAAOA,EAAM3F,OAR1C,2CAAD,KAWC,CAACyE,EAAM1G,QAAS6G,IAGjB,eAACgB,EAAA,EAAD,CACEpF,UAAU,mDACVqF,IAAKnB,EAFP,UAIE,sBAAKlE,UAAU,aAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,8BAA8BsF,KAAK,SAAlD,SACE,sBAAMtF,UAAU,UAAhB,4BAGJ,cAACoF,EAAA,EAAKG,IAAN,CAAUjE,QAAQ,MAAMkE,IAAKlB,EAAamB,QAAQ,YAEpD,uBACA,eAACL,EAAA,EAAKM,KAAN,WACE,cAACN,EAAA,EAAKO,MAAN,UACY,OAAThJ,EAAgB,IAAe,KAATA,EAAc,cAAgBA,IAEvD,cAACyI,EAAA,EAAKQ,SAAN,UAAgB3B,EAAM1G,UACtB,eAAC6H,EAAA,EAAKvE,KAAN,WACE,sBAAMb,UAAU,aAAhB,SACa,OAAVR,EAAiB,IAAMyC,YAAsBzC,KAEhD,uBACA,sBAAMQ,UAAU,sBAAhB,6B,6FCmOK6F,MAnRf,WACE,MAA8B5J,IAAMC,SAAS,MAA7C,mBAAOqB,EAAP,KAAgBC,EAAhB,KACA,EAAwBvB,IAAMC,SAAS,MAAvC,mBAAOgJ,EAAP,KAAaY,EAAb,KACA,EAA0B7J,IAAMC,SAAS,MAAzC,mBAAOiJ,EAAP,KAAcY,EAAd,KACA,EAAwC9J,IAAMC,SAAS,MAAvD,mBAAO8J,EAAP,KAAqBC,EAArB,KACA,EAA4ChK,IAAMC,SAAS,MAA3D,mBAAOgK,EAAP,KAAuBC,EAAvB,KAEA,EAAwBlK,IAAMC,cAASyC,GAAvC,mBAAOyH,EAAP,KAAaC,EAAb,KACA,EAAsCpK,IAAMC,SAAS,IAArD,mBAAOoK,EAAP,KAAoBC,EAApB,KACA,EAAgDtK,IAAMC,SAAS,IAA/D,mBAAOsK,EAAP,KAAyBC,EAAzB,KACA,EAAkCxK,IAAMC,SAAS,MAAjD,mBAAOwK,EAAP,KAAkBC,GAAlB,KAEA,GAA0C1K,IAAMC,UAAS,GAAzD,qBAAOuB,GAAP,MAAsBC,GAAtB,MAEAzB,IAAM0B,WAAU,WACdH,EAAW,IAAIoJ,gBAAgBhI,OAAOiI,SAASC,QAAQzD,IAAI,cAC1D,IAEHpH,IAAM0B,WAAU,WACM,KAAhB2I,EACFG,EAAoB,yBACD,OAAVtB,GACLtD,OAAOzC,YAAUkH,IAAgBzE,OAAO,IAAMA,OAAOsD,EAAM3F,OAC7DiH,EAAoB,sDAOtBA,EAAoB,MAErB,CAACH,EAAanB,IAEjBlJ,IAAM0B,WAAU,WACE,OAAZJ,GACF,sBAAC,4BAAAM,EAAA,kEACCiI,EADD,SACexC,EAAQ/F,GADvB,kDAEiBmG,EAASnG,GAF1B,cAEOwJ,EAFP,OAGChB,EAASgB,GAHV,KAICV,EAJD,UAIeW,YAAQ,CAAEzJ,QAASA,IAJlC,sCAMW,OAANwJ,EANL,6BAOGd,EAPH,UAOyBtC,EAAWoD,EAAEnD,OAPtC,+CAQGuC,EARH,UAQ2BxC,EAAWoD,EAAEE,SARxC,8EAAD,KAYD,CAAC1J,IAEJ,IAAM2J,GAAU,uCAAG,WAAO5I,GAAP,qBAAAT,EAAA,6DACjBS,EAAEC,iBACFD,EAAEE,kBAEI2I,EAAYC,KAAKC,MACjBC,EALW,UAKE/J,EALF,YAKa4J,GALb,SAMQvI,OAAOC,MAAM0I,YACpCxI,IAAII,UAAUH,IAAOsI,KAPN,eASQ3I,KAHnB6I,EANW,QASFzL,MATE,kEAaI0L,YAAW,CAC9BlK,QAASA,EACT4J,UAAWA,EACXO,UAAWF,EAAW5L,SAhBP,WAkBF,QALTA,EAbW,cAkBuB+C,IAAjB/C,EAAOG,MAlBb,wDAsBM4C,IAAnB/C,EAAOO,SACTyC,OAAO+I,KAAK/L,EAAOO,SAvBJ,4CAAH,sDA2BVyL,GAAK,uCAAG,WAAOtJ,GAAP,uBAAAT,EAAA,yDACZS,EAAEC,iBACFD,EAAEE,uBAEmBG,IAAjBC,OAAOC,MAJC,uBAKVnB,IAAiB,GALP,0CASkBmK,YAAkB,CAC9CtK,QAASA,EACTiC,MAAOJ,YAAUkH,KAXP,uBASJwB,EATI,EASJA,KAAMnI,EATF,EASEA,MATF,UAaUf,OAAOC,MAAMa,uBAAuBoI,EAAMnI,GAbpD,eAaNC,EAbM,OAcThE,OAdS,UAgBSmM,YAAmB,CAAEjI,YAAaF,IAhB3C,QAgBNhE,EAhBM,OAiBZ+K,GAAa/K,GAjBD,4CAAH,sDAoBX,OACE,gCACE,eAACoM,EAAA,EAAD,CAAWhI,UAAU,4BAArB,UACE,eAACiI,EAAA,EAAD,WACE,qBAAKjI,UAAU,kBAAf,SACE,cAAC,EAAD,CAASzC,QAASA,MAEV,OAAT2H,GACsB,OAArBA,EAAKrI,aACgB,KAArBqI,EAAKrI,aACH,mBAAGmD,UAAU,mBAAb,SACE,4BAAIkF,EAAKrI,mBAIjB,cAACqL,EAAA,EAAD,IACA,eAACD,EAAA,EAAD,CAAKjI,UAAU,cAAf,UACE,uCACA,4BACE,mBACEA,UAAU,cACVwB,KAAgB,OAAV2D,EAAiB,GAAjB,2BAA0CA,EAAMvB,OAFxD,SAIoB,OAAjBoC,GACqB,OAAtBA,EAAarJ,MACS,KAAtBqJ,EAAarJ,KACC,OAAVwI,EACE,IACAA,EAAMvB,MACRoC,EAAarJ,SAGrB,oBAAIqD,UAAU,OAAd,qBACA,mBACEA,UAAU,cACVwB,KAAgB,OAAV2D,EAAiB,GAAjB,2BAA0CA,EAAM8B,SAFxD,SAIsB,OAAnBf,GACuB,OAAxBA,EAAevJ,MACS,KAAxBuJ,EAAevJ,KACD,OAAVwI,EACE,IACAA,EAAM8B,QACRf,EAAevJ,YAEVgC,IAAVwG,GAAiC,OAAVA,GACtB,gCACE,oBAAInF,UAAU,OAAd,4BAEA,qBACEA,UAAU,iBACVmI,QAASjB,GACTjH,MAAO,CAAEmI,QAAS,UAHpB,qCAUN,cAACF,EAAA,EAAD,SACUvJ,IAATyH,GAA+B,OAATA,GACrB,eAAC6B,EAAA,EAAD,CAAKjI,UAAU,6CAAf,UACE,yCACA,sBAAKC,MAAO,CAAEoB,UAAW,UAAYrB,UAAU,OAA/C,UACG,IACD,0CACA,8BACE,mBACEA,UAAU,cACVwB,KACE,6CAA+C4E,EAAKiC,KAEtDC,IAAI,aACJ7H,OAAO,SANT,2BASK,IAVP,6CAW4C,uBAX5C,mDAiBI9B,IAATyH,GAA+B,OAATA,GACrB,eAAC6B,EAAA,EAAD,CAAKjI,UAAU,6CAAf,UACE,yCACc,MAAb0G,GACC,eAACsB,EAAA,EAAD,CAAWhI,UAAU,4BAArB,UACE,cAACiI,EAAA,EAAD,CAAKjI,UAAU,UAAUC,MAAO,CAAEC,SAAU,SAA5C,SACE,eAACqI,EAAA,EAAKnI,MAAN,CAAYJ,UAAU,YAAtB,UACE,cAACuI,EAAA,EAAKlI,MAAN,UACE,wDAEF,cAACkI,EAAA,EAAKjI,QAAN,CACEC,KAAK,OACLO,MAAOwF,EACP9F,SAAU,SAAClC,GACLA,EAAEmC,OAAOK,MAAMG,MAAM,aACvBsF,EAAejI,EAAEmC,OAAOK,QAG5Bb,MAAO,CAAEoB,UAAW,UACpBV,UAAgC,KAArB6F,IAEZA,GACC,8BACE,cAAC+B,EAAA,EAAK1H,KAAN,CAAWb,UAAU,cAArB,SACGwG,MAIP,cAAC+B,EAAA,EAAK1H,KAAN,CAAWb,UAAU,aAArB,8EAMJ,cAACiI,EAAA,EAAD,UACE,cAACO,EAAA,EAAD,CACExI,UAAU,iCACVC,MAAO,CAAE9B,MAAO,QAChBgK,QAASP,GACTrG,SAA+B,KAArBiF,EAJZ,qCAWS,OAAdE,QAA0C/H,IAApB+H,EAAU3K,OAC/B,cAACiM,EAAA,EAAD,UACE,sBAAK/H,MAAO,CAAEoB,UAAW,UAAYrB,UAAU,OAA/C,UACG,IACD,wDACA,gDACkB,IAChB,mBACEA,UAAU,cACVwB,KACE,6CACAkF,EAAU2B,KAEZC,IAAI,aACJ7H,OAAO,SAPT,SASGiG,EAAU2B,OAEb,uBAbF,0EAoBS,OAAd3B,QAA0C/H,IAApB+H,EAAU3K,OAC/B,cAACiM,EAAA,EAAD,UACE,sBAAK/H,MAAO,CAAEoB,UAAW,UAAYrB,UAAU,OAA/C,UACG,IACD,qDACA,yFAEE,uBAFF,+DAWZ,cAACyI,EAAA,EAAD,CACEhH,KAAMhE,GACNiE,OAAQ,kBAAMhE,IAAiB,U,2BCxFxBgL,MArLf,WACE,MAA8BzM,IAAMC,SAAS,MAA7C,mBAAOqB,EAAP,KAAgBC,EAAhB,KACA,EAAgCvB,IAAMC,SAAS,MAA/C,mBAAOyM,EAAP,KAAiBC,EAAjB,KACA,EAAwB3M,IAAMC,SAAS,IAAvC,mBAAOS,EAAP,KAAaC,EAAb,KACMiM,EAAU5M,IAAM6M,YACtB,EAA8B7M,IAAMC,SAAS,MAA7C,mBAAO6M,EAAP,KAAgBC,EAAhB,KACA,EAAwC/M,IAAMC,SAAS,MAAvD,mBAAO+M,EAAP,KAAqBC,EAArB,KAEA,EAA0CjN,IAAMC,UAAS,GAAzD,mBAAOuB,EAAP,KAAsBC,EAAtB,KAEAzB,IAAM0B,WAAU,WACdH,EAAW,IAAIoJ,gBAAgBhI,OAAOiI,SAASC,QAAQzD,IAAI,cAC1D,IAEHpH,IAAM0B,WAAU,WACE,OAAZJ,IACF4L,SAASC,MAAT,oBAA8B7L,GAC9B,sBAAC,8BAAAM,EAAA,sEACiB8F,EAAWpG,GAD5B,cACO8L,EADP,gBAEqBxF,EAAgBtG,GAFrC,OAEO+L,EAFP,OAGCC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACZN,EAAWK,GACXH,EAAgBI,GACN,OAAND,IACa,OAAXA,EAAE1M,KACJC,EAAQ,IAERA,EAAQyM,EAAE1M,OAXf,2CAAD,MAgBD,CAACY,IAEJ,IAAMc,EAAQ,uCAAG,WAAOC,GAAP,mBAAAT,EAAA,yDACfS,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,gCAEOC,IAAjBC,OAAOC,MALI,uBAMbnB,GAAiB,GANJ,iCAUT+L,EAAU,CACdtC,UAAWC,KAAKC,MAChBzD,MAAOrG,EACPZ,KAAe,OAATA,GAA0B,KAATA,EAAc,KAAOA,GAExC2K,EAAUnE,KAAKhE,UAAUsK,GAC/BF,QAAQC,IAAIlC,GAhBG,UAkBU1I,OAAOC,MAAM0I,YACpCxI,IAAII,UAAUH,IAAOsI,KAnBR,gBAqBU3I,KAHnB6I,EAlBS,QAqBAzL,MArBA,0DAwBf0N,EAAQ/B,UAAYF,EAAW5L,OAxBhB,UA0BY8N,YAAcD,GA1B1B,aA2BX,UA3BW,2DA+Bf7K,OAAOiI,SAAS8C,QAAO,GA/BR,4CAAH,sDAkCd,OACE,gCACE,cAAC3B,EAAA,EAAD,CAAWhI,UAAU,aAArB,SACE,eAACiI,EAAA,EAAD,WACE,oBAAIjI,UAAU,OAAd,SACe,OAAZ+I,EACG,IACiB,KAAjBA,EAAQpM,MAAgC,OAAjBoM,EAAQpM,KAC/B,kBACAoM,EAAQpM,OAEd,6BAAKY,IACL,4BACE,+BACE,qBACEyC,UAAU,YACVC,MAAO,CAAEmI,QAAS,UAClBD,QAAS,kBAAMS,GAAY,IAH7B,wBASJ,cAACV,EAAA,EAAD,SAGJ,eAAC0B,EAAA,EAAD,CACEC,iBACmB,OAAjBZ,GAEwC,IAApCA,EAAaa,YAAY9I,OADzB,QAGA,UAENhB,UAAU,yBACVsB,QAAQ,QATV,UAWE,cAACyI,EAAA,EAAD,CAAKC,SAAS,UAAUZ,MAAM,gBAA9B,SACoB,OAAjBH,GACC,oBAAIjJ,UAAU,kBAAd,SACGiJ,EAAaa,YAAYG,KAAI,SAACtI,GAAD,OAC5B,mBAAGH,KAAI,uBAAkBG,GAAzB,SACE,cAAC,EAAD,CAAiBpE,QAASoE,GAAZA,YAMxB,cAACoI,EAAA,EAAD,CAAKC,SAAS,QAAQZ,MAAM,aAA5B,SACoB,OAAjBH,GACC,oBAAIjJ,UAAU,kBAAd,SACGiJ,EAAaiB,UAAUD,KAAI,SAACtI,GAAD,OAC1B,mBAAGH,KAAI,uBAAkBG,GAAzB,SACE,cAAC,EAAD,CAAiBpE,QAASoE,GAAZA,eAQ1B,eAACwI,EAAA,EAAD,CACEvM,KAAK,KACL,kBAAgB,gCAChBwM,UAAQ,EACR3I,KAAMkH,EACNjH,OAAQ,kBAAMkH,GAAY,IAC1ByB,UAAW,kBAAMxB,EAAQ7D,QAAQsF,SANnC,UAQE,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMxE,MAAP,CAAa8E,GAAG,gCAAhB,4BAIF,cAACN,EAAA,EAAMzE,KAAP,UACE,eAAC6C,EAAA,EAAD,CAAMpI,SAAU9B,EAAhB,UACE,eAACkK,EAAA,EAAKnI,MAAN,CAAYJ,UAAU,OAAtB,UACE,cAACuI,EAAA,EAAKlI,MAAN,sDACA,cAACkI,EAAA,EAAKjI,QAAN,CACEC,KAAK,OACLO,MAAOnE,EACPoE,YAAY,oBACZP,SAAU,SAAClC,GAAD,OAAO1B,EAAQ0B,EAAEmC,OAAOK,QAClCF,QAAkB,KAATjE,GAAeA,EAAKqE,QAAU,GACvCL,UAAoB,KAAThE,GAAeA,EAAKqE,OAAS,GACxCqE,IAAKwD,IAENlM,EAAKqE,OAAS,IACb,8BACE,cAACuH,EAAA,EAAK1H,KAAN,CAAWb,UAAU,cAArB,gCAKN,qBAAKC,MAAO,CAAEoB,UAAW,UAAzB,SACE,cAACmH,EAAA,EAAD,CACExI,UAAU,8BACVsB,QAAQ,UACRf,KAAK,SAHP,iDAYR,cAACkI,EAAA,EAAD,CAAgBhH,KAAMhE,EAAeiE,OAAQ,kBAAMhE,GAAiB,UClI3DgN,MA1Df,WACE,MAA8BzO,IAAMC,SAAS,MAA7C,mBAAOyO,EAAP,KAAgBC,EAAhB,KACA,EAAoC3O,IAAMC,SAAS,MAAnD,mBAAO2O,EAAP,KAAmBC,EAAnB,KAgBA,OAbA7O,IAAM0B,WAAU,WACdwL,SAASC,MAAT,eACA,sBAAC,8BAAAvL,EAAA,sEACqBiG,EAAW,OADhC,cACOiH,EADP,gBAEwBjH,EAAW,UAFnC,OAEOkH,EAFP,OAKCJ,EAAWG,GACXD,EAAcE,GANf,0CAAD,KASC,IAGD,gCACE,cAAChD,EAAA,EAAD,CAAWhI,UAAU,aAArB,SACE,eAACiI,EAAA,EAAD,WACE,oBAAIjI,UAAU,OAAd,0BACA,cAACkI,EAAA,EAAD,SAGJ,eAAC0B,EAAA,EAAD,CACEC,iBAAiB,SACjB7J,UAAU,yBACVsB,QAAQ,QAHV,UAKE,cAACyI,EAAA,EAAD,CAAKC,SAAS,SAASZ,MAAM,WAA7B,SACkB,OAAfyB,GACC,oBAAI7K,UAAU,kBAAd,SACG6K,EAAWZ,KAAI,SAACtI,GAAD,OACd,mBAAGH,KAAI,uBAAkBG,GAAzB,SACE,cAAC,EAAD,CAAiBpE,QAASoE,GAAZA,YAMxB,cAACoI,EAAA,EAAD,CAAKC,SAAS,MAAMZ,MAAM,eAA1B,SACe,OAAZuB,GACC,oBAAI3K,UAAU,kBAAd,SACG2K,EAAQV,KAAI,SAACtI,GAAD,OACX,mBAAGH,KAAI,uBAAkBG,GAAzB,SACE,cAAC,EAAD,CAAiBpE,QAASoE,GAAZA,mB,2CCrDjB,MAA0B,sC,yBCmF1BsJ,MA1Ef,WACE,OACE,8BACE,wBAAQjL,UAAU,YAAYyK,GAAG,OAAjC,SACE,qBAAKzK,UAAU,sBAAf,SACE,eAACgI,EAAA,EAAD,CAAWhI,UAAU,uBAArB,UACE,cAACiI,EAAA,EAAD,UACE,cAACiD,EAAA,EAAD,UACE,qBAAKlL,UAAU,mBAAf,SACE,qBAAKA,UAAU,oBAIrB,eAACiI,EAAA,EAAD,WACE,mBAAGjI,UAAU,2BAAb,oCAGA,mBAAGA,UAAU,OAAb,4CAEF,eAACiI,EAAA,EAAD,CAAKkD,OAAK,EAACnL,UAAU,YAArB,UACE,cAACkL,EAAA,EAAD,UACE,sBAAKlL,UAAU,uBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAiBA,UAAU,SAASoL,KAAMC,QAE5C,iDACA,4DAA+B,UAA/B,oBAGJ,cAACH,EAAA,EAAD,UACE,sBAAKlL,UAAU,uBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CACEA,UAAU,SACVoL,KAAME,QAGV,kDACA,oFAGJ,cAACJ,EAAA,EAAD,UACE,sBAAKlL,UAAU,uBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAiBA,UAAU,SAASoL,KAAMG,QAE5C,0DACA,4FAIN,cAACrD,EAAA,EAAD,IACA,cAACD,EAAA,EAAD,UACE,oBAAIjI,UAAU,YAAd,gCAEF,eAACiI,EAAA,EAAD,CAAKjI,UAAU,yDAAf,UACE,mBAAGwB,KAAK,WAAR,SACE,cAACgH,EAAA,EAAD,CAAQxI,UAAU,yBAAyBsB,QAAQ,UAAnD,4BAIF,mBAAGE,KAAK,UAAR,SACE,cAACgH,EAAA,EAAD,CAAQxI,UAAU,yBAAyBsB,QAAQ,UAAnD,0CCqEDkK,MAtHf,WACE,MAAgCvP,IAAMC,SAAS,MAA/C,mBAAO2K,EAAP,KAAiB4E,EAAjB,KACAxP,IAAM0B,WAAU,WACd8N,EAAY7M,OAAOiI,SAAS6E,YAC3B,IACHzP,IAAM0B,WAAU,cAAU,CAACkJ,IAE3B,MAAsC5K,IAAMC,SAAS,IAArD,mBAAOyP,EAAP,KAAoBC,EAApB,KACA,EAA8C3P,IAAMC,SAAS,MAA7D,mBAAO2P,EAAP,KAAwBC,EAAxB,KAEMC,EAAQ,uCAAG,WAAOzN,GAAP,SAAAT,EAAA,yDACfS,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAEdkN,EAAeD,EAAYK,QAEA,KAAvBL,EAAYK,OAPD,iCAQS1I,EAAQqI,EAAYK,QAR7B,UASG,OATH,wBAUXpN,OAAOiI,SAASoF,OAAhB,uBAAuCN,EAAYK,SAVxC,yCAYWrI,EAAWgI,EAAYK,QAZlC,QAaK,OAbL,OAcTpN,OAAOiI,SAASoF,OAAhB,2BAA2CN,EAAYK,SAEvDF,GAAmB,GAhBV,4CAAH,sDAsBd,OACE,eAAC,IAAD,WACE,sBAAK9L,UAAU,MAAf,UACE,cAACkM,EAAA,EAAD,CAAQlM,UAAU,SAASmM,GAAG,OAAOC,OAAO,KAAKC,OAAO,MAAxD,SACE,eAACrE,EAAA,EAAD,WACE,eAACkE,EAAA,EAAOI,MAAR,CAAc9K,KAAK,IAAIxB,UAAU,kCAAjC,UACE,qBAAKuM,IAAI,GAAG/G,IAAKgH,IACjB,6CACA,sBAAMxM,UAAU,wBAAhB,8BAEF,cAACkM,EAAA,EAAOO,OAAR,CAAe,gBAAc,qBAC7B,eAACP,EAAA,EAAOQ,SAAR,WACE,eAACC,EAAA,EAAD,CAAK3M,UAAU,UAAUC,MAAO,CAAE2M,aAAc,UAAhD,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUrL,KAAK,IAAf,kBACA,cAACmL,EAAA,EAAIE,KAAL,CAAUrL,KAAK,WAAf,0BACA,cAACmL,EAAA,EAAIE,KAAL,CAAUrL,KAAK,UAAf,uBAEF,eAAC+G,EAAA,EAAD,CAAMvI,UAAU,SAASG,SAAU4L,EAAnC,UACE,cAACe,EAAA,EAAD,CACEvM,KAAK,SACLQ,YAAY,iCACZ,aAAW,SACXd,MAAO,CACL8M,qBAAsB,IACtBC,wBAAyB,IACzBC,SAAU,SAEZnM,MAAO6K,EACPnL,SAAU,SAAClC,GAAD,OAAOsN,EAAetN,EAAEmC,OAAOK,UAE3C,cAAC0H,EAAA,EAAD,CACElH,QAAQ,iBACRrB,MAAO,CACLiN,oBAAqB,IACrBC,uBAAwB,KAE1B5M,KAAK,SANP,SAQE,cAAC,IAAD,CAAiB6K,KAAMgC,mBAOjC,yBAASpN,UAAU,kBAAnB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqN,KAAK,UAAUC,QAAS,cAACtR,EAAA,EAAD,MAC/B,cAAC,IAAD,CAAOqR,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,EAAD,MAC5B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,WAG7B,kCACE,qBAAKtN,UAAU,2DAAf,SACE,uFAKN,eAACmK,EAAA,EAAD,CACEvM,KAAK,KACL,kBAAgB,gCAChBwM,UAAQ,EACR3I,KAAMoK,EACNnK,OAAQ,kBAAMoK,GAAmB,IALnC,UAOE,cAAC3B,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMxE,MAAP,CAAa8E,GAAG,gCAAhB,qCAIF,cAACN,EAAA,EAAMzE,KAAP,UACE,eAACsC,EAAA,EAAD,CAAWhI,UAAU,mBAArB,UACE,kDACA,cAACwI,EAAA,EAAD,CAAQxI,UAAU,OAAOmI,QAAS,kBAAM2D,GAAmB,IAA3D,+B,kBC7HZyB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFrE,SAASsE,eAAe,U,gCCT1B,2BAgBevF,IAZf,WACE,OACE,sBAAKlI,UAAU,iBAAf,UACE,qBAAKA,UAAU,kCACf,qBAAKA,UAAU,gCAAf,SACE,cAAC,IAAD,CAAiBoL,KAAMsC,QAEzB,qBAAK1N,UAAU,uC,kTCTf2N,EAAU,6BAEV3G,EAAO,uCAAG,WAAOzE,GAAP,eAAA1E,EAAA,sEACOwE,YAAK,GAAD,OAAIsL,EAAJ,gBAA2B,CAClDpQ,QAASgF,EAAKhF,UAFF,UAIC,QAHT3B,EADQ,iDAKL,MALK,gCAOLA,EAAOwK,MAPF,2CAAH,sDAWPqB,EAAa,SAAClF,GAClB,OAAOF,YAAK,GAAD,OAAIsL,EAAJ,mBAA8B,CACvCpQ,QAASgF,EAAKhF,QACd4J,UAAW5E,EAAK4E,UAChBO,UAAWnF,EAAKmF,aAIdG,EAAoB,SAACtF,GACzB,OAAOF,YAAK,GAAD,OAAIsL,EAAJ,0BAAqC,CAC9CpQ,QAASgF,EAAKhF,QACdiC,MAAO+C,EAAK/C,SAIVuI,EAAqB,SAACxF,GAC1B,OAAOF,YAAK,GAAD,OAAIsL,EAAJ,2BAAsC,CAC/C7N,YAAayC,EAAKzC,eAIhBhB,EAAqB,SAACyD,GAC1B,OAAOF,YAAK,GAAD,OAAIsL,EAAJ,2BAAsC,CAC/CpO,YAAagD,EAAKhD,YAClBC,MAAO+C,EAAK/C,MACZ/C,QAAS8F,EAAK9F,WAIZoD,EAAsB,SAAC0C,GAC3B,OAAOF,YAAK,GAAD,OAAIsL,EAAJ,4BAAuC,CAChDxR,QAASoG,EAAKpG,QACdY,QAASwF,EAAKxF,QACdJ,KAAM4F,EAAK5F,KACXE,YAAa0F,EAAK1F,YAClBM,KAAMoF,EAAKpF,KACX2C,YAAayC,EAAKzC,eAIhB4J,EAAgB,SAACnH,GACrB,OAAOF,YAAK,GAAD,OAAIsL,EAAJ,mBAA8B,CACvCxG,UAAW5E,EAAK4E,UAChBvD,MAAOrB,EAAKqB,MACZjH,KAAM4F,EAAK5F,KACX+K,UAAWnF,EAAKmF,c,gCC5DpB,6CAgCee,IA7Bf,SAAwBxE,GACtB,OACE,eAAC,IAAD,CACErG,KAAK,KACL,kBAAgB,gCAChBwM,UAAQ,EACR3I,KAAMwC,EAAMxC,KACZC,OAAQuC,EAAMvC,OALhB,UAOE,cAAC,IAAM6I,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAM7E,MAAP,CAAa8E,GAAG,gCAAhB,uCAIF,cAAC,IAAM/E,KAAP,UACE,eAAC,IAAD,CAAW1F,UAAU,mBAArB,UACE,8EAAgD,uBAAhD,sCACA,mBAAGwB,KAAK,gCAAgCf,OAAO,SAAS6H,IAAI,aAA5D,SACE,cAAC,IAAD,CAAQtI,UAAU,OAAlB,iCAEF,mBAAGwB,KAAK,gCAAgCf,OAAO,SAAS6H,IAAI,aAA5D,SACE,cAAC,IAAD,CAAQtI,UAAU,OAAlB,6C","file":"static/js/main.a1d2acd0.chunk.js","sourcesContent":["import { Container, Row, Button, Col, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport isPng from \"is-png\";\nimport sizeOf from \"buffer-image-size\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport { sendListTransaction, getListTransaction } from \"./api\";\nimport { toSatoshi } from \"./utils\";\n\nconst MAX_CONTENT_SIZE = 10 * 1e6; // 1 MB.\nconst MAX_PREVIEW_SIZE = 100 * 1e5; // 1 kB.\n\nconst toBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(\",\")[1]);\n    reader.onerror = (error) => reject(error);\n  });\n\nfunction CreateController() {\n  const [content, setContent] = React.useState(null);\n  const [contentError, setContentError] = React.useState(\"\");\n  const [listingPrice, setListingPrice] = React.useState(\"1000\");\n  const [royalty, setRoyalty] = React.useState(0);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [preview, setPreview] = React.useState(null);\n  const [previewError, setPreviewError] = React.useState(\"\");\n  const [tags, setTags] = React.useState(\"\");\n\n  const [success, setSuccess] = React.useState(null);\n  const [address, setAddress] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  React.useEffect(() => {\n    if (content === null) {\n      setContentError(\"NFT content required\");\n      return;\n    } else if (content.size > MAX_CONTENT_SIZE) {\n      setContentError(\"NFT content size limit exceeded (max 10 MB)\");\n      return;\n    } else {\n      setContentError(\"\");\n    }\n  }, [content]);\n\n  React.useEffect(() => {\n    (async () => {\n      if (preview !== null) {\n        const f = Buffer.from(await toBase64(preview), \"base64\");\n        if (!isPng(f)) {\n          setPreviewError(\"Cover image must be a PNG\");\n        } else if (preview.size > MAX_PREVIEW_SIZE) {\n          setPreviewError(\"Cover file size limit exceeded (max 100 KB)\");\n        } else if (sizeOf(f).width !== 256 || sizeOf(f).height !== 256) {\n          setPreviewError(\"Cover image must have dimension 256x256\");\n        } else {\n          setPreviewError(\"\");\n        }\n      } else {\n        setPreviewError(\"Cover image required\");\n      }\n    })();\n  }, [preview]);\n\n  const doSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const getListTransactionResponse = await getListTransaction({\n      // CryptoJS expects inputs to be a utf8 string. So we encode our data\n      // into that.\n      contentHash: Hex.stringify(Sha256(Base64.parse(await toBase64(content)))),\n      price: toSatoshi(listingPrice),\n      royalty: 25 + Math.floor((royalty * 75) / 100),\n    });\n    if (\n      getListTransactionResponse === null ||\n      \"error\" in getListTransactionResponse\n    ) {\n      return;\n    }\n\n    const signed = (\n      await window.dingo.requestSignTransaction(\n        [],\n        getListTransactionResponse.vouts\n      )\n    ).result;\n\n    const sendListTransactionResponse = await sendListTransaction({\n      content: await toBase64(content),\n      preview: preview === null ? null : await toBase64(preview),\n      name: name,\n      description: description,\n      tags: tags,\n      transaction: signed,\n    });\n    if (\n      sendListTransactionResponse === null ||\n      \"error\" in getListTransactionResponse\n    ) {\n      return;\n    }\n\n    setSuccess(true);\n    setAddress(sendListTransactionResponse.address);\n  };\n\n  return (\n    <div>\n      <Container className=\"App-header\">\n        <Row>\n          <h1 className=\"mt-4\">Create NFT</h1>\n          <CustomDivider />\n        </Row>\n      </Container>\n      <Container style={{ maxWidth: \"900px\" }}>\n        <Row>\n          <Col>\n            {(success === null || success === false) && (\n              <Form onSubmit={doSubmit}>\n                <Form.Group className=\"mb-3 mt-4\">\n                  <Form.Label>\n                    <b>Cover image (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setPreview(e.target.files[0])}\n                    isInvalid={previewError !== null && previewError !== \"\"}\n                    isValid={previewError === \"\"}\n                  />\n                  {previewError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {previewError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    A 256x256 PNG cover image for your NFT (max 100 KB). You\n                    can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Content (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setContent(e.target.files[0])}\n                    isInvalid={contentError !== null && contentError !== \"\"}\n                    isValid={contentError === \"\"}\n                  />\n                  {contentError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {contentError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    This file can only be viewed by the latest owner. The NFT\n                    will be locked uniquely to it - you can only use it once\n                    (max 10 MB).\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Name (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={name}\n                    placeholder=\"Max 40 characters\"\n                    onChange={(e) => setName(e.target.value)}\n                    isValid={name !== \"\" && name.length <= 40}\n                    isInvalid={name !== \"\" && name.length > 40}\n                  />\n                  {name.length > 40 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Name too long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Description (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={description}\n                    placeholder=\"Max 500 characters\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    isValid={description !== \"\" && description.length <= 500}\n                    isInvalid={description !== \"\" && description.length > 500}\n                  />\n                  {description.length > 500 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Description long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Tags (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={tags}\n                    placeholder=\"Max 100 characters; space separated\"\n                    onChange={(e) => setTags(e.target.value)}\n                    isValid={tags !== \"\" && tags.length <= 100}\n                    isInvalid={tags !== \"\" && tags.length > 100}\n                  />\n                  {tags.length > 100 && (\n                    <div>\n                      <Form.Text className=\"input-error\">Tags long</Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3 mt-2\">\n                  <Form.Label>\n                    <b>Listing price (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={listingPrice}\n                    onChange={(e) => {\n                      if (\n                        e.target.value.match(/^[0-9]+$/) &&\n                        parseInt(e.target.value) >= 1\n                      ) {\n                        setListingPrice(e.target.value);\n                      } else {\n                        setListingPrice(\"1000\");\n                      }\n                    }}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Initial selling price for your NFT in DINGO (min. 1 DINGO).\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Creator royalty (*required): </b>\n                    {(2.5 + Math.floor((royalty * 75) / 100) / 10).toFixed(1) +\n                      \"%\"}\n                  </Form.Label>\n                  <Form.Range\n                    value={royalty}\n                    onChange={(e) => setRoyalty(e.target.value)}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Royalty paid to you for every transaction of this NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <div style={{ textAlign: \"center\" }}>\n                  {success === null && (\n                    <Button\n                      className=\"popup-button mt-4 px-4\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                      disabled={\n                        content === null ||\n                        contentError !== \"\" ||\n                        (preview !== null && previewError !== \"\")\n                      }\n                    >\n                      Create NFT\n                    </Button>\n                  )}\n                </div>\n              </Form>\n            )}\n            {success === true && (\n              <div style={{ textAlign: \"center\" }}>\n                {\" \"}\n                <h3>NFT Created!</h3>\n                <p>\n                  NFT Address: <b>{address}</b>\n                </p>\n                <div style={{ textAlign: \"center\" }}>\n                  <a href={\"/nft?address=\" + address}>\n                    <Button className=\"popup-button px-4\" variant=\"primary\">\n                      View NFT ►\n                    </Button>\n                  </a>\n                </div>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n    </div>\n  );\n}\n\nexport default CreateController;\n","/* global BigInt */\n\nimport Web3Utils from \"web3-utils\";\n\nconst toSatoshi = (x) => {\n  if (x === null || x === undefined || typeof x !== \"string\" || x === \"\") {\n    throw new Error(\"Expected string input\");\n  }\n  return (BigInt(Web3Utils.toWei(x, \"gwei\")) / 10n).toString();\n};\n\nconst satoshiToLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = (BigInt(x) / 100000000n).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst post = async (link, data) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 30000);\n  return (\n    await fetch(link, {\n      withCredentials: true,\n      method: \"POST\",\n      signal: controller.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n  ).json();\n};\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 30000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nexport { toSatoshi, satoshiToLocaleString, post, get };\n","const META_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-meta\";\nconst PREVIEW_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-preview\";\nconst STATE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-state\";\nconst PROFILE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-profile\";\nconst PROFILE_LISTS_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-profilelists\";\nconst EXPLORE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-explore\";\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 5000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nconst getMeta = async (address) => {\n  const response = await get(`${META_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getPreviewLink = async (address) => {\n  return `${PREVIEW_BUCKET}/${address}.png`;\n};\n\nconst getState = async (address) => {\n  const response = await get(`${STATE_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getProfile = async (owner) => {\n  const response = await get(`${PROFILE_BUCKET}/${owner}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getProfileLists = async (owner) => {\n  const response = await get(`${PROFILE_LISTS_BUCKET}/${owner}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getExplore = async (key) => {\n  const response = await get(`${EXPLORE_BUCKET}/${key}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nexport { getMeta, getPreviewLink, getState, getProfile, getProfileLists, getExplore };\n","import React from \"react\";\nimport { getMeta, getPreviewLink, getState } from \"./storage\";\nimport { Card } from \"react-bootstrap\";\nimport { satoshiToLocaleString } from \"./utils\";\n\nfunction NFTCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [name, setName] = React.useState(null);\n  const [price, setPrice] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const meta = await getMeta(props.address);\n        const previewLink = await getPreviewLink(props.address);\n        const state = await getState(props.address);\n\n        setPreviewLink(previewLink);\n        setName(meta === null ? null : meta.name);\n        setPrice(state === null ? null : state.price);\n      }\n    })();\n  }, [props.address, isVisible]);\n\n  return (\n    <Card\n      className=\"nft-card floating-borders floating-borders-press\"\n      ref={domRef}\n    >\n      <div className=\"header-box\">\n        <div className=\"spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n        <Card.Img variant=\"top\" src={previewLink} loading=\"lazy\"></Card.Img>\n      </div>\n      <hr />\n      <Card.Body>\n        <Card.Title>\n          {name === null ? \"-\" : name === \"\" ? \"Unnamed NFT\" : name}\n        </Card.Title>\n        <Card.Subtitle>{props.address}</Card.Subtitle>\n        <Card.Text>\n          <span className=\"card-price\">\n            {price === null ? \"-\" : satoshiToLocaleString(price)}\n          </span>\n          <br />\n          <span className=\"card-price-subtitle\">DINGO</span>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default NFTCard;\n","/* global BigInt */\n\nimport NFTCard from \"./NFTCard.jsx\";\nimport { Container, Row, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport {\n  getBusy,\n  getContent,\n  getBuyTransaction,\n  sendBuyTransaction,\n} from \"./api\";\nimport { getMeta, getState, getProfile } from \"./storage\";\nimport { toSatoshi } from \"./utils\";\nimport GetWalletModal from \"./GetWalletModal\";\n\nfunction NFTController() {\n  const [address, setAddress] = React.useState(null);\n  const [meta, setMeta] = React.useState(null);\n  const [state, setState] = React.useState(null);\n  const [ownerProfile, setOwnerProfile] = React.useState(null);\n  const [creatorProfile, setCreatorProfile] = React.useState(null);\n\n  const [busy, setBusy] = React.useState(undefined);\n  const [resellPrice, setResellPrice] = React.useState(\"\");\n  const [resellPriceError, setResellPriceError] = React.useState(\"\");\n  const [buyResult, setBuyResult] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  React.useEffect(() => {\n    setAddress(new URLSearchParams(window.location.search).get(\"address\"));\n  }, []);\n\n  React.useEffect(() => {\n    if (resellPrice === \"\") {\n      setResellPriceError(\"Resell price required\");\n    } else if (state !== null) {\n      if (BigInt(toSatoshi(resellPrice)) > BigInt(10) * BigInt(state.price)) {\n        setResellPriceError(\n          `Resell price must be at most 10x the current price`\n        );\n      } else {\n        setResellPriceError(\"\");\n      }\n    } else {\n      setResellPriceError(\"\");\n    }\n  }, [resellPrice, state]);\n\n  React.useEffect(() => {\n    if (address !== null) {\n      (async () => {\n        setMeta(await getMeta(address));\n        const s = await getState(address);\n        setState(s);\n        setBusy(await getBusy({ address: address }));\n\n        if (s !== null) {\n          setOwnerProfile(await getProfile(s.owner));\n          setCreatorProfile(await getProfile(s.creator));\n        }\n      })();\n    }\n  }, [address]);\n\n  const doDownload = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const timestamp = Date.now();\n    const message = `${address}|${timestamp}`;\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n\n    const result = await getContent({\n      address: address,\n      timestamp: timestamp,\n      signature: signResult.result,\n    });\n    if (result === null || result.error !== undefined) {\n      return;\n    }\n\n    if (result.content !== undefined) {\n      window.open(result.content);\n    }\n  };\n\n  const doBuy = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const { vins, vouts } = await getBuyTransaction({\n      address: address,\n      price: toSatoshi(resellPrice),\n    });\n    const signed = (await window.dingo.requestSignTransaction(vins, vouts))\n      .result;\n\n    const result = await sendBuyTransaction({ transaction: signed });\n    setBuyResult(result);\n  };\n\n  return (\n    <div>\n      <Container className=\"justify-content-md-center\">\n        <Row>\n          <div className=\"cards-container\">\n            <NFTCard address={address} />\n          </div>\n          {meta !== null &&\n            meta.description !== null &&\n            meta.description !== \"\" && (\n              <p className=\"text-center mt-4\">\n                <i>{meta.description}</i>\n              </p>\n            )}\n        </Row>\n        <CustomDivider />\n        <Row className=\"text-center\">\n          <h3>Owner</h3>\n          <p>\n            <a\n              className=\"simple-link\"\n              href={state === null ? \"\" : `/profile?address=${state.owner}`}\n            >\n              {ownerProfile === null ||\n              ownerProfile.name === null ||\n              ownerProfile.name === \"\"\n                ? state === null\n                  ? \"-\"\n                  : state.owner\n                : ownerProfile.name}\n            </a>\n          </p>\n          <h3 className=\"mt-2\">Creator</h3>\n          <a\n            className=\"simple-link\"\n            href={state === null ? \"\" : `/profile?address=${state.creator}`}\n          >\n            {creatorProfile === null ||\n            creatorProfile.name === null ||\n            creatorProfile.name === \"\"\n              ? state === null\n                ? \"-\"\n                : state.creator\n              : creatorProfile.name}\n          </a>\n          {state !== undefined && state !== null && (\n            <div>\n              <h3 className=\"mt-4\">Hidden Content</h3>\n\n              <div\n                className=\"clickable mb-2\"\n                onClick={doDownload}\n                style={{ display: \"inline\" }}\n              >\n                (Verify and view)\n              </div>\n            </div>\n          )}\n        </Row>\n        <CustomDivider />\n        {busy !== undefined && busy !== null && (\n          <Row className=\"justify-content-md-center mt-2 text-center\">\n            <h2>Buy NFT</h2>\n            <div style={{ textAlign: \"center\" }} className=\"mt-4\">\n              {\" \"}\n              <h5>NFT busy</h5>\n              <p>\n                <a\n                  className=\"simple-link\"\n                  href={\n                    \"https://openchains.info/coin/dingocoin/tx/\" + busy.txid\n                  }\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                >\n                  A transaction\n                </a>{\" \"}\n                is currenly being confirmed for this NFT. <br />\n                Please try again in a few minutes.\n              </p>\n            </div>\n          </Row>\n        )}\n        {busy !== undefined && busy === null && (\n          <Row className=\"justify-content-md-center mt-2 text-center\">\n            <h2>Buy NFT</h2>\n            {buyResult == null && (\n              <Container className=\"justify-content-md-center\">\n                <Row className=\"mx-auto\" style={{ maxWidth: \"35rem\" }}>\n                  <Form.Group className=\"mb-3 mt-3\">\n                    <Form.Label>\n                      <b>Resell at (*required)</b>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      value={resellPrice}\n                      onChange={(e) => {\n                        if (e.target.value.match(/^[0-9]*$/)) {\n                          setResellPrice(e.target.value);\n                        }\n                      }}\n                      style={{ textAlign: \"center\" }}\n                      isInvalid={resellPriceError !== \"\"}\n                    />\n                    {resellPriceError && (\n                      <div>\n                        <Form.Text className=\"input-error\">\n                          {resellPriceError}\n                        </Form.Text>\n                      </div>\n                    )}\n                    <Form.Text className=\"text-muted\">\n                      New price you want to sell this NFT for (min. 1\n                      Dingocoin).\n                    </Form.Text>\n                  </Form.Group>\n                </Row>\n                <Row>\n                  <Button\n                    className=\"popup-button mb-4 mx-auto px-4\"\n                    style={{ width: \"auto\" }}\n                    onClick={doBuy}\n                    disabled={resellPriceError !== \"\"}\n                  >\n                    Buy and Resell NFT\n                  </Button>\n                </Row>\n              </Container>\n            )}\n            {buyResult !== null && buyResult.error === undefined && (\n              <Container>\n                <div style={{ textAlign: \"center\" }} className=\"mt-4\">\n                  {\" \"}\n                  <h4>Transaction submitted!</h4>\n                  <p>\n                    Transaction ID:{\" \"}\n                    <a\n                      className=\"simple-link\"\n                      href={\n                        \"https://openchains.info/coin/dingocoin/tx/\" +\n                        buyResult.txid\n                      }\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                    >\n                      {buyResult.txid}\n                    </a>\n                    <br />\n                    It may take a few minutes for your transaction to be\n                    confirmed.\n                  </p>\n                </div>\n              </Container>\n            )}\n            {buyResult !== null && buyResult.error !== undefined && (\n              <Container>\n                <div style={{ textAlign: \"center\" }} className=\"mt-4\">\n                  {\" \"}\n                  <h4>Transaction failed!</h4>\n                  <p>\n                    - Make sure that your wallet has no pending transaction.\n                    <br />- You can't buy this NFT as its owner/creator.\n                  </p>\n                </div>\n              </Container>\n            )}\n          </Row>\n        )}\n      </Container>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n    </div>\n  );\n}\n\nexport default NFTController;\n","import {\n  Modal,\n  Container,\n  Row,\n  Tab,\n  Tabs,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport { getProfile, getProfileLists } from \"./storage\";\nimport NFTCard from \"./NFTCard\";\nimport { updateProfile } from \"./api\";\nimport GetWalletModal from \"./GetWalletModal\";\n\nfunction ProfileController() {\n  const [address, setAddress] = React.useState(null);\n  const [editShow, setEditShow] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const nameRef = React.createRef();\n  const [profile, setProfile] = React.useState(null);\n  const [profileLists, setProfileLists] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  React.useEffect(() => {\n    setAddress(new URLSearchParams(window.location.search).get(\"address\"));\n  }, []);\n\n  React.useEffect(() => {\n    if (address !== null) {\n      document.title = `Profile | ${address}`;\n      (async () => {\n        const p = await getProfile(address);\n        const pList = await getProfileLists(address);\n        console.log(p);\n        console.log(pList);\n        setProfile(p);\n        setProfileLists(pList);\n        if (p !== null) {\n          if (p.name === null) {\n            setName(\"\");\n          } else {\n            setName(p.name);\n          }\n        }\n      })();\n    }\n  }, [address]);\n\n  const doSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const payload = {\n      timestamp: Date.now(),\n      owner: address,\n      name: name === null || name === \"\" ? null : name,\n    };\n    const message = JSON.stringify(payload);\n    console.log(message);\n\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    const updateResult = await updateProfile(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  return (\n    <div>\n      <Container className=\"App-header\">\n        <Row>\n          <h1 className=\"mt-4\">\n            {profile === null\n              ? \"-\"\n              : profile.name === \"\" || profile.name === null\n              ? \"Unnamed Profile\"\n              : profile.name}\n          </h1>\n          <h6>{address}</h6>\n          <p>\n            <span>\n              <div\n                className=\"clickable\"\n                style={{ display: \"inline\" }}\n                onClick={() => setEditShow(true)}\n              >\n                (Edit)\n              </div>\n            </span>\n          </p>\n          <CustomDivider />\n        </Row>\n      </Container>\n      <Tabs\n        defaultActiveKey={\n          profileLists === null\n            ? \"owned\"\n            : profileLists.createdNfts.length === 0\n            ? \"owned\"\n            : \"created\"\n        }\n        className=\"justify-content-center\"\n        variant=\"pills\"\n      >\n        <Tab eventKey=\"created\" title=\"NFT Creations\">\n          {profileLists !== null && (\n            <ul className=\"cards-container\">\n              {profileLists.createdNfts.map((x) => (\n                <a href={`/nft?address=${x}`}>\n                  <NFTCard key={x} address={x} />\n                </a>\n              ))}\n            </ul>\n          )}\n        </Tab>\n        <Tab eventKey=\"owned\" title=\"Owned NFTs\">\n          {profileLists !== null && (\n            <ul className=\"cards-container\">\n              {profileLists.ownedNfts.map((x) => (\n                <a href={`/nft?address=${x}`}>\n                  <NFTCard key={x} address={x} />\n                </a>\n              ))}\n            </ul>\n          )}\n        </Tab>\n      </Tabs>\n\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={editShow}\n        onHide={() => setEditShow(false)}\n        onEntered={() => nameRef.current.focus()}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Edit profile\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={doSubmit}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Profile name (leave blank if no change)</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={name}\n                placeholder=\"Max 40 characters\"\n                onChange={(e) => setName(e.target.value)}\n                isValid={name !== \"\" && name.length <= 40}\n                isInvalid={name !== \"\" && name.length > 40}\n                ref={nameRef}\n              />\n              {name.length > 40 && (\n                <div>\n                  <Form.Text className=\"input-error\">Name too long</Form.Text>\n                </div>\n              )}\n            </Form.Group>\n\n            <div style={{ textAlign: \"center\" }}>\n              <Button\n                className=\"popup-button mb-3 mt-3 px-4\"\n                variant=\"primary\"\n                type=\"submit\"\n              >\n                Verify and update profile\n              </Button>\n            </div>\n          </Form>\n        </Modal.Body>\n      </Modal>\n\n      <GetWalletModal show={getWalletShow} onHide={() => setGetWalletShow(false)}/>\n    </div>\n  );\n}\n\nexport default ProfileController;\n","import { Container, Row, Tab, Tabs } from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport NFTCard from \"./NFTCard\";\nimport { getExplore } from \"./storage\";\n\nfunction ExploreController() {\n  const [newList, setNewList] = React.useState(null);\n  const [volumeList, setVolumeList] = React.useState(null);\n  //const [nonceList, setNonceList] = React.useState(null);\n\n  React.useEffect(() => {\n    document.title = `Explore NFTs`;\n    (async () => {\n      const byNew = await getExplore(\"new\");\n      const byVolume = await getExplore(\"volume\");\n      //const byNonce = await getExplore(\"nonce\");\n\n      setNewList(byNew);\n      setVolumeList(byVolume);\n      //setNonceList(byNonce);\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Container className=\"App-header\">\n        <Row>\n          <h1 className=\"mt-4\">Explore NFTs</h1>\n          <CustomDivider />\n        </Row>\n      </Container>\n      <Tabs\n        defaultActiveKey=\"volume\"\n        className=\"justify-content-center\"\n        variant=\"pills\"\n      >\n        <Tab eventKey=\"volume\" title=\"Hot NFTS\">\n          {volumeList !== null && (\n            <ul className=\"cards-container\">\n              {volumeList.map((x) => (\n                <a href={`/nft?address=${x}`}>\n                  <NFTCard key={x} address={x} />\n                </a>\n              ))}\n            </ul>\n          )}\n        </Tab>\n        <Tab eventKey=\"new\" title=\"New Listings\">\n          {newList !== null && (\n            <ul className=\"cards-container\">\n              {newList.map((x) => (\n                <a href={`/nft?address=${x}`}>\n                  <NFTCard key={x} address={x} />\n                </a>\n              ))}\n            </ul>\n          )}\n        </Tab>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default ExploreController;\n","export default __webpack_public_path__ + \"static/media/dingocoin.15331900.png\";","import { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLock,\n  faPiggyBank,\n  faHandHoldingUsd,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CustomDivider from \"./CustomDivider\";\n\nfunction Main() {\n  return (\n    <div>\n      <header className=\"section-a\" id=\"home\">\n        <div className=\"particles-container\">\n          <Container className=\"masthead text-center\">\n            <Row>\n              <Col>\n                <div className=\"isometric-holder\">\n                  <div className=\"isometric\"></div>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <p className=\"masthead-title mt-4 mb-2\">\n                Dingocoin NFT Platform\n              </p>\n              <p className=\"mb-4\">The next generation of NFTs</p>\n            </Row>\n            <Row fluid className=\"pt-3 pb-2\">\n              <Col>\n                <div className=\"project-card mx-auto\">\n                  <div className=\"logo-holder\">\n                    <FontAwesomeIcon className=\"faicon\" icon={faPiggyBank} />\n                  </div>\n                  <h5>Ultra-low Costs</h5>\n                  <p>Create and trade NFTs with {\"<$0.001\"} gas fees</p>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"project-card mx-auto\">\n                  <div className=\"logo-holder\">\n                    <FontAwesomeIcon\n                      className=\"faicon\"\n                      icon={faHandHoldingUsd}\n                    />\n                  </div>\n                  <h5>On-chain Trading</h5>\n                  <p>You receive earnings and royalties immediately</p>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"project-card mx-auto\">\n                  <div className=\"logo-holder\">\n                    <FontAwesomeIcon className=\"faicon\" icon={faLock} />\n                  </div>\n                  <h5>Cryptographically Unique</h5>\n                  <p>The same content can never be reused in another NFT</p>\n                </div>\n              </Col>\n            </Row>\n            <CustomDivider />\n            <Row>\n              <h1 className=\"mt-4 mb-2\">Get started now!</h1>\n            </Row>\n            <Row className=\"quick-actions flex-wrap justify-content-md-center mt-4\">\n              <a href=\"/explore\">\n                <Button className=\"popup-button px-4 py-2\" variant=\"primary\">\n                  Explore NFTs\n                </Button>\n              </a>\n              <a href=\"/create\">\n                <Button className=\"popup-button px-4 py-2\" variant=\"primary\">\n                  Create an NFT\n                </Button>\n              </a>\n            </Row>\n          </Container>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Main;\n","import \"./App.scss\";\nimport CreateController from \"./CreateController\";\nimport NFTController from \"./NFTController\";\nimport ProfileController from \"./ProfileController\";\nimport ExploreController from \"./ExploreController\";\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Form,\n  FormControl,\n  Button,\n  Modal,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport DingocoinLogo from \"./assets/img/dingocoin.png\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { getMeta, getProfile } from \"./storage\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const [location, setLocation] = React.useState(null);\n  React.useEffect(() => {\n    setLocation(window.location.pathname);\n  }, []);\n  React.useEffect(() => {}, [location]);\n\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [searchErrorShow, setSearchErrorShow] = React.useState(null);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    setSearchQuery(searchQuery.trim());\n\n    if (searchQuery.trim() !== \"\") {\n      const nftMeta = await getMeta(searchQuery.trim());\n      if (nftMeta !== null) {\n        window.location.assign(`/nft?address=${searchQuery.trim()}`);\n      } else {\n        const profile = await getProfile(searchQuery.trim());\n        if (profile !== null) {\n          window.location.assign(`/profile?address=${searchQuery.trim()}`);\n        } else {\n          setSearchErrorShow(true);\n        }\n      }\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar className=\"navbar\" bg=\"dark\" expand=\"lg\" sticky=\"top\">\n          <Container>\n            <Navbar.Brand href=\"/\" className=\"navbar-brand align-items-center\">\n              <img alt=\"\" src={DingocoinLogo} />\n              <span>DINGOCOIN</span>\n              <span className=\"navbar-brand-subtitle\"> NFT Platform</span>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse>\n              <Nav className=\"ms-auto\" style={{ paddingRight: \"1.5rem\" }}>\n                <Nav.Link href=\"/\">Home</Nav.Link>\n                <Nav.Link href=\"/explore\">Explore NFTs</Nav.Link>\n                <Nav.Link href=\"/create\">Create</Nav.Link>\n              </Nav>\n              <Form className=\"d-flex\" onSubmit={doSearch}>\n                <FormControl\n                  type=\"search\"\n                  placeholder=\"Jump to NFT/profile address...\"\n                  aria-label=\"Search\"\n                  style={{\n                    borderTopRightRadius: \"0\",\n                    borderBottomRightRadius: \"0\",\n                    minWidth: \"20rem\",\n                  }}\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n                <Button\n                  variant=\"secondary mx-0\"\n                  style={{\n                    borderTopLeftRadius: \"0\",\n                    borderBottomLeftRadius: \"0\",\n                  }}\n                  type=\"submit\"\n                >\n                  <FontAwesomeIcon icon={faAngleRight}></FontAwesomeIcon>\n                </Button>\n              </Form>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n\n        <section className=\"section-content\">\n          <Routes>\n            <Route path=\"/create\" element={<CreateController />} />\n            <Route path=\"/profile\" element={<ProfileController />} />\n            <Route path=\"/nft\" element={<NFTController />} />\n            <Route path=\"/explore\" element={<ExploreController />} />\n            <Route path=\"/\" element={<Main/>}/>\n          </Routes>\n        </section>\n        <section>\n          <div className=\"justify-content-center section-footer align-items-center\">\n            <h6>Copyright © The Dingocoin Project 2021-2022</h6>\n          </div>\n        </section>\n      </div>\n\n      <Modal\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={searchErrorShow}\n        onHide={() => setSearchErrorShow(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            NFT/profile not found\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container className=\"text-center my-2\">\n            <p>No results found.</p>\n            <Button className=\"mx-2\" onClick={() => setSearchErrorShow(false)}>\n              Close\n            </Button>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport HttpsRedirect from \"react-https-redirect\";\n\nReactDOM.render(\n  <HttpsRedirect>\n    <App />\n  </HttpsRedirect>,\n  document.getElementById(\"root\")\n);\n","// Assets.\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CustomDivider() {\n  return (\n    <div className=\"divider-custom\">\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n      <div className=\"divider-custom-icon mt-2 mb-2\">\n        <FontAwesomeIcon icon={faAngleDown} />\n      </div>\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n    </div>\n  );\n}\n\nexport default CustomDivider;\n","import { post } from \"./utils\";\n\nconst API_URL = \"https://nftp0.dingocoin.io\";\n\nconst getBusy = async (data) => {\n  const result = await post(`${API_URL}/nft/getBusy`, {\n    address: data.address,\n  });\n  if (result === null) {\n    return null;\n  } else {\n    return result.busy;\n  }\n};\n\nconst getContent = (data) => {\n  return post(`${API_URL}/nft/getContent`, {\n    address: data.address,\n    timestamp: data.timestamp,\n    signature: data.signature,\n  });\n};\n\nconst getBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/getBuyTransaction`, {\n    address: data.address,\n    price: data.price,\n  });\n};\n\nconst sendBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/sendBuyTransaction`, {\n    transaction: data.transaction,\n  });\n};\n\nconst getListTransaction = (data) => {\n  return post(`${API_URL}/nft/getListTransaction`, {\n    contentHash: data.contentHash,\n    price: data.price,\n    royalty: data.royalty,\n  });\n};\n\nconst sendListTransaction = (data) => {\n  return post(`${API_URL}/nft/sendListTransaction`, {\n    content: data.content,\n    preview: data.preview,\n    name: data.name,\n    description: data.description,\n    tags: data.tags,\n    transaction: data.transaction,\n  });\n};\n\nconst updateProfile = (data) => {\n  return post(`${API_URL}/profile/update`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    name: data.name,\n    signature: data.signature,\n  });\n};\n\nexport {\n  getBusy,\n  getContent,\n  getBuyTransaction,\n  sendBuyTransaction,\n  getListTransaction,\n  sendListTransaction,\n  updateProfile,\n};\n","import { Modal, Container, Button } from \"react-bootstrap\";\nimport React from \"react\";\n\nfunction GetWalletModal(props) {\n  return (\n    <Modal\n      size=\"md\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={props.show}\n      onHide={props.onHide}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Browser Wallet required\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container className=\"text-center my-2\">\n          <p>You need a Dingocoin browser wallet for this.<br/>Set it up in less than a minute.</p>\n          <a href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Chrome wallet</Button>\n          </a>\n          <a href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Firefox wallet</Button>\n          </a>\n        </Container>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default GetWalletModal;\n"],"sourceRoot":""}