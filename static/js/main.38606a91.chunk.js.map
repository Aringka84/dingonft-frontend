{"version":3,"sources":["NFTController.jsx","assets/img/dingocoin.png","CreateController.jsx","App.jsx","index.jsx","CustomDivider.jsx"],"names":["post","link","data","a","controller","AbortController","setTimeout","abort","fetch","withCredentials","method","signal","headers","Accept","body","JSON","stringify","json","NFTController","props","React","useState","undefined","assetMeta","setAssetMeta","assetContent","setAssetContent","assetContentType","setAssetContentType","useEffect","address","meta","asset","contentRaw","content","Buffer","from","detectFileType","fromBuffer","err","res","mime","ext","className","style","textAlign","name","description","maxHeight","fileType","filePath","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","error","CreateController","setAsset","assetError","setAssetError","setName","setDescription","tags","setTags","tradeDeadline","setTradeDeadline","concealDeadline","setConcealDeadline","privatizeDeadline","setPrivatizeDeadline","showAdvanced","setShowAdvanced","success","setSuccess","setAddress","doSubmit","e","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","size","payload","details","parseInt","response","Container","Row","CustomDivider","Col","Form","onSubmit","Group","Label","Control","type","onChange","target","files","isInvalid","Text","value","placeholder","match","color","onClick","href","Button","variant","App","location","setLocation","window","pathname","console","log","Navbar","bg","expand","sticky","Brand","alt","src","DingocoinLogo","Collapse","Nav","Link","Toggle","startsWith","slice","ReactDOM","render","StrictMode","document","getElementById","icon","faAngleDown"],"mappings":"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","file":"static/js/main.38606a91.chunk.js","sourcesContent":["import {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Button,\n  Col,\n  Form,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport FileViewer from \"react-file-viewer\";\nimport detectFileType from \"detect-file-type\";\n\nconst post = async (link, data) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 5000);\n  return (\n    await fetch(link, {\n      withCredentials: true,\n      method: \"POST\",\n      signal: controller.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n  ).json();\n};\n\nfunction NFTController(props) {\n  const [assetMeta, setAssetMeta] = React.useState(undefined);\n  const [assetContent, setAssetContent] = React.useState(undefined);\n  const [assetContentType, setAssetContentType] = React.useState(undefined);\n\n  React.useEffect(async () => {\n    const meta = (\n      await post(\"http://localhost:33332/retrieve/meta\", {\n        address: props.address,\n      })\n    ).asset;\n    setAssetMeta(meta);\n\n    const contentRaw = (\n      await post(\"http://localhost:33332/retrieve/content\", {\n        address: props.address,\n      })\n    ).content;\n    if (contentRaw === null) {\n      setAssetContent(null);\n    } else {\n      const content = Buffer.from(contentRaw, 'base64');\n      detectFileType.fromBuffer(content, (err, res) => {\n        setAssetContent('data:' + res.mime + ';base64,' + contentRaw);\n        setAssetContentType(res.ext);\n      });\n    }\n\n  }, []);\n\n  return (\n    <div className=\"section-a\" style={{ textAlign: \"center\" }}>\n      {assetMeta == null && (\n        <Container>\n          <Row>\n            <h1 className=\"mt-4\">This NFT does not exist!</h1>\n          </Row>\n        </Container>\n      )}\n      {assetMeta !== undefined && assetMeta !== null && (\n        <Container>\n          <Row>\n            <div className=\"mt-4\">\n              {assetMeta.name !== \"\" && <h1>{assetMeta.name}</h1>}\n              {assetMeta.name === \"\" && <h3>Unnamed NFT</h3>}\n              <p>\n                <b>{assetMeta.address}</b>\n                {assetMeta.description !== \"\" && (\n                  <i>\n                    <br />\n                    \"asdasdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\"\n                  </i>\n                )}\n              </p>\n            </div>\n          </Row>\n          <Row>\n            {assetContent !== undefined && assetContent !== null && (\n              <div style={{ maxHeight: \"60vh\" }}>\n                <FileViewer fileType={assetContentType} filePath={assetContent}/>\n              </div>\n            )}\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n}\n\nexport default NFTController;\n","export default __webpack_public_path__ + \"static/media/dingocoin.15331900.png\";","import {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Button,\n  Col,\n  Form,\n} from \"react-bootstrap\";\nimport DingocoinLogo from \"./assets/img/dingocoin.png\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport bs58 from \"bs58\";\nimport crypto from \"crypto\";\n\nconst MAX_ASSET_SIZE = 1 * 1e6; // 2 MB.\n\nconst isBs58 = (x) => {\n  return x.match(/^[1-9A-HJ-NP-Za-km-z]+$/);\n};\n\nconst sha256 = (data) => {\n  return crypto.createHash(\"sha256\").update(data).digest();\n};\n\nconst isAddress = (address) => {\n  if (address === null || address === undefined || address === \"\") {\n    return false;\n  }\n  if (!isBs58(address)) {\n    return false;\n  }\n  const raw = bs58.decode(address);\n\n  if (raw.length !== 25) {\n    return false;\n  }\n  if (raw[0] !== 0x16 && raw[0] !== 0x1e) {\n    return false;\n  }\n  const checksum = sha256(sha256(raw.slice(0, 21)));\n  return raw.slice(21, 25).equals(checksum.slice(0, 4));\n};\n\nconst toBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader .readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(',')[1]);\n    reader.onerror = (error) => reject(error);\n  });\n\nconst post = async (link, data) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 5000);\n  return (\n    await fetch(link, {\n      withCredentials: true,\n      method: \"POST\",\n      signal: controller.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n  ).json();\n};\n\nfunction CreateController() {\n  const [asset, setAsset] = React.useState(null);\n  const [assetError, setAssetError] = React.useState(\"\");\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [tags, setTags] = React.useState(\"\");\n  const [tradeDeadline, setTradeDeadline] = React.useState(\"\");\n  const [concealDeadline, setConcealDeadline] = React.useState(\"\");\n  const [privatizeDeadline, setPrivatizeDeadline] = React.useState(\"\");\n  const [showAdvanced, setShowAdvanced] = React.useState(false);\n\n  const [success, setSuccess] = React.useState(null);\n  const [address, setAddress] = React.useState(null);\n\n  const doSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (asset === null) {\n      setAssetError(\"Asset required\");\n      return;\n    } else if (asset.size > MAX_ASSET_SIZE) {\n      setAssetError(\"Size limit exceeded\");\n      return;\n    } else {\n      setAssetError(\"\");\n    }\n\n    const payload = {};\n    payload.asset = await toBase64(asset);\n    payload.details = {\n      name: name,\n      description: description,\n      tags: tags,\n      tradeDeadline: tradeDeadline === \"\" ? -1 : parseInt(tradeDeadline),\n      concealDeadline: concealDeadline === \"\" ? -1 : parseInt(concealDeadline),\n      privatizeDeadline:\n        privatizeDeadline === \"\" ? -1 : parseInt(privatizeDeadline),\n    };\n\n    const response = await post(\"http://127.0.0.1:33332/create\", payload);\n    if (\"error\" in response) {\n      return;\n    }\n\n    setSuccess(true);\n    setAddress(response.address);\n  };\n\n  return (\n    <div>\n      <header className=\"App-header\">\n        <Container>\n          <Row>\n            <h1 className=\"mt-4\">Create NFT</h1>\n            <CustomDivider />\n          </Row>\n        </Container>\n      </header>\n      <section className=\"section-a\">\n        <Container>\n          <Row>\n            <Col>\n              <Form onSubmit={doSubmit}>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Asset (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setAsset(e.target.files[0])}\n                    isInvalid={assetError !== \"\"}\n                  />\n                  {assetError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {assetError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    The NFT will be locked uniquely to this file. You can only\n                    use this file once. (Max 1 MB).\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Name (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Description (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Tags (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={tags}\n                    onChange={(e) => setTags(e.target.value)}\n                  />\n                </Form.Group>\n\n                {showAdvanced && (\n                  <div>\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>Trade until (optional)</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"No deadline\"\n                        value={tradeDeadline}\n                        onChange={(e) => {\n                          const v = e.target.value;\n                          if (v.match(/^[0-9]+$/)) {\n                            setTradeDeadline(e.target.value);\n                          } else {\n                            e.preventDefault();\n                            e.stopPropagation();\n                          }\n                        }}\n                      />\n                      <Form.Text className=\"text-muted\">\n                        The asset can be traded only up to this block height.\n                      </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>Conceal content until (optional)</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"No concealment\"\n                        value={concealDeadline}\n                        onChange={(e) => {\n                          const v = e.target.value;\n                          if (v.match(/^[0-9]*$/)) {\n                            setConcealDeadline(e.target.value);\n                          } else {\n                            e.preventDefault();\n                            e.stopPropagation();\n                          }\n                        }}\n                      />\n                      <Form.Text className=\"text-muted\">\n                        The asset can be traded but not viewed before this block\n                        height.\n                      </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                      <Form.Label>\n                        Privatize content until (optional)\n                      </Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"No privatization\"\n                        value={privatizeDeadline}\n                        onChange={(e) => {\n                          const v = e.target.value;\n                          if (v.match(/^[0-9]*$/)) {\n                            setPrivatizeDeadline(e.target.value);\n                          } else {\n                            e.preventDefault();\n                            e.stopPropagation();\n                          }\n                        }}\n                      />\n                      <Form.Text className=\"text-muted\">\n                        Only the latest owner can view the asset's content\n                        before this block height, unless concealed.\n                      </Form.Text>\n                    </Form.Group>\n                  </div>\n                )}\n                {!showAdvanced && (\n                  <a\n                    style={{ color: \"#4CA4CD\" }}\n                    onClick={(e) => {\n                      setShowAdvanced(true);\n                      e.preventDefault();\n                      e.stopPropagation();\n                    }}\n                    href=\"#\"\n                  >\n                    Show advanced options ▼\n                  </a>\n                )}\n                {showAdvanced && (\n                  <a\n                    style={{ color: \"#4CA4CD\" }}\n                    onClick={(e) => {\n                      setShowAdvanced(false);\n                      e.preventDefault();\n                      e.stopPropagation();\n                    }}\n                    href=\"#\"\n                  >\n                    Hide advanced options ▲\n                  </a>\n                )}\n\n                <div style={{ textAlign: \"center\" }}>\n                  {success === null && (\n                    <Button\n                      className=\"popup-button mb-4\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                    >\n                      Create NFT\n                    </Button>\n                  )}\n                </div>\n              </Form>\n              {success === true && (\n                <div className=\"mt-4\" style={{ textAlign: \"center\" }}>\n                  {\" \"}\n                  <p>Created NFT: <b>{address}</b></p>\n                  <Button\n                    className=\"popup-button mb-4\"\n                    variant=\"primary\"\n                    type=\"submit\"\n                  >\n                    Go to NFT's page ►\n                  </Button>\n                </div>\n              )}\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </div>\n  );\n}\n\nexport default CreateController;\n","import \"./App.scss\";\nimport CreateController from \"./CreateController\";\nimport NFTController from \"./NFTController\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport DingocoinLogo from \"./assets/img/dingocoin.png\";\nimport React from \"react\";\n\nfunction App() {\n  const [location, setLocation] = React.useState(null);\n  React.useEffect(() => {\n    setLocation(window.location.pathname);\n  }, []);\n  React.useEffect(() => {}, [location]);\n\n  console.log(location);\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"navbar\" bg=\"dark\" expand=\"lg\" sticky=\"top\">\n        <Container>\n          <Navbar.Brand href=\"#home\" className=\"navbar-brand\">\n            <img alt=\"\" src={DingocoinLogo} />\n            <span>DINGOCOIN</span>\n            <span className=\"navbar-brand-subtitle\"> NFT Platform</span>\n          </Navbar.Brand>\n          <Navbar.Collapse>\n            <Nav className=\"ms-auto\">\n              <Nav.Link>Explore</Nav.Link>\n              <Nav.Link href=\"/create\">Create</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        </Container>\n      </Navbar>\n\n      {(location === null && <div />) ||\n        (location === \"/create\" && <CreateController />) ||\n        (location.startsWith(\"/nft/\") && <NFTController address={location.slice(5)} />)}\n\n      <section className=\"section-footer\">\n        <h6>Copyright © The Dingocoin Project 2021-2022</h6>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// Assets.\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nfunction CustomDivider() {\n  return (\n    <div className=\"divider-custom\">\n      <div className=\"divider-custom-line\"></div>\n      <div className=\"divider-custom-icon\"><FontAwesomeIcon icon={faAngleDown}/></div>\n      <div className=\"divider-custom-line\"></div>\n    </div>\n  );\n}\n\nexport default CustomDivider;\n"],"sourceRoot":""}