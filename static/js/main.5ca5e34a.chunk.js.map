{"version":3,"sources":["api.js","GetWalletModal.jsx","utils.js","CreateController.jsx","storage.js","NFTCard.jsx","CollectionCard.jsx","CreateCollectionModal.jsx","EditCollectionModal.jsx","EditProfileModal.jsx","ProfileCard.jsx","ProfileController.jsx","ExploreCollectionsController.jsx","ExploreNftsController.jsx","ExploreProfilesController.jsx","SearchController.jsx","assets/img/dingocoin.png","SideScroller.jsx","Main.jsx","App.jsx","index.jsx","CustomDivider.jsx"],"names":["API_URL","getBusy","data","a","post","address","result","busy","getContent","timestamp","signature","getBuyTransaction","price","sendBuyTransaction","transaction","getListTransaction","contentHash","royalty","sendListTransaction","content","preview","name","description","tags","updateProfile","owner","thumbnail","getProfileCreatedNfts","getProfileOwnedNfts","getProfileHistoricalNfts","getProfileStats","getProfileCreatedCount","getProfileCollectionCount","getProfileHistoricalCount","queryProfileBySearch","search","queryProfileByTradeCount","queryProfileByEarnings","queryNft","key","direction","offset","limit","queryNftBySearch","queryNftByNewest","beforeId","getCollectionStats","handle","queryCollectionByOwner","queryCollectionBySearch","queryUnassignedNftsByOwner","createCollection","updateCollection","setCollectionItem","getCollectionItems","getItemCollection","queryCollectionByTradeCountScaled","queryCollectionByTradeVolume","GetWalletModal","props","size","centered","show","onHide","Header","closeButton","Title","Body","className","href","target","rel","toSatoshi","x","undefined","Error","BigInt","Web3Utils","toWei","toString","toLocaleString","isNegative","integer","replace","satoshiToLocaleString","link","controller","AbortController","setTimeout","abort","fetch","withCredentials","method","signal","headers","Accept","body","JSON","stringify","json","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","CreateController","React","useState","setContent","contentError","setContentError","listingPrice","setListingPrice","setRoyalty","setName","setDescription","setPreview","previewError","setPreviewError","setTags","pending","setPending","success","setSuccess","setAddress","getWalletShow","setGetWalletShow","useEffect","Buffer","f","from","isPng","buffer","length","sizeOf","width","height","doSubmit","e","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","window","dingo","Hex","Sha256","Base64","parse","Math","floor","getListTransactionResponse","requestSignTransaction","vouts","signed","sendListTransactionResponse","style","maxWidth","onSubmit","Group","Label","Control","type","onChange","files","isInvalid","isValid","Text","value","placeholder","match","parseInt","toFixed","Range","textAlign","variant","disabled","animation","get","getMeta","response","status","getPreviewLink","getState","getProfile","getCollection","NFTCard","domRef","useRef","isVisible","setVisible","previewLink","setPreviewLink","stats","setStats","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","meta","state","Card","ref","role","Img","src","loading","Subtitle","icon","faCashRegister","tradeVolume","faExchangeAlt","tradeCount","CollectionCard","collection","setCollection","Container","faList","count","CreateCollectionModal","createdNfts","setCreatedNfts","setThumbnail","setHandle","results","reverse","all","map","createdNftNames","i","Modal","title","Form","Select","Button","EditCollectionModal","thumbnailIndex","setThumbnailIndex","currentThumbnailEntry","find","isinvalid","EditProfileModal","profile","concat","ProfileCard","setProfile","createdCount","collectionCount","historicalCount","faThLarge","faShoppingBag","ProfileController","useParams","profileAddress","collectionHandle","nftAddress","location","useLocation","view","pathname","endsWith","editProfileShow","setEditProfileShow","createCollectionShow","setCreateCollectionShow","collections","setCollections","unassignedList","setUnassignedList","profileLists","setProfileLists","profileStats","setProfileStats","collectionItems","setCollectionItems","editCollectionShow","setEditCollectionShow","nftMeta","setNftMeta","nftState","setNftState","nftItemCollection","setNftItemCollection","nftOwner","setNftOwner","nftBusy","setNftBusy","resellPrice","setResellPrice","resellPriceError","setResellPriceError","buyResult","setBuyResult","downloadLink","setDownloadLink","startsWith","ownedNfts","historicalNfts","console","log","nftItemCollectionHandle","creator","doEditProfileSubmit","payload","Date","now","message","requestSign","signResult","reload","doCreateCollectionSubmit","doEditCollectionSubmit","doMove","doDownload","doBuy","vins","Row","onClick","faPen","Nav","Item","Link","eventKey","active","faPlus","DropdownButton","y","Dropdown","filter","some","listCount","listSoldCount","royaltyVolume","buyVolume","sellVolume","display","txid","ExploreCollectionsController","pop","includes","collectionList","setCollectionList","setSearch","searchEntries","setSearchEntries","l","queryParam","URLSearchParams","doSearch","trim","assign","Tab","id","defaultActiveKey","faBolt","faFire","faSearch","Content","InputGroup","FormControl","autoFocus","faArrowRight","Spinner","ExploreNftsController","nftList","setNftList","nftListEnd","setNftListEnd","queryText","setQueryText","viewMoreEnabled","setViewMoreEnabled","doChangeQuery","event","innerText","onViewMore","onSelect","Toggle","Menu","ExploreProfilesController","profileList","setProfileList","faBullseye","faCoins","SearchController","searchSubView","setSearchSubView","searchNfts","setSearchNfts","searchCollections","setSearchCollections","searchProfiles","setSearchProfiles","doChangeSearchSubview","subview","activeKey","faUserCircle","Pane","SideScroller","scrollContainerRef","createRef","itemsContainerRef","canScrollLeft","setCanScrollLeft","canScrollRight","setCanScrollRight","onScroll","firstItemLeft","children","offsetLeft","lastItem","lastItemRight","offsetWidth","borderLeft","scrollLeft","borderRight","items","itemTemplate","containerWidth","itemWidth","scrollCount","scrollBy","left","behavior","faAngleLeft","faAngleRight","Main","hotCollections","setHotCollections","newNfts","setNewNfts","recentNfts","setRecentNfts","faPiggyBank","faHandHoldingUsd","faLock","CustomDivider","App","setLocation","searchQuery","setSearchQuery","searchErrorShow","setSearchErrorShow","Navbar","bg","expand","sticky","Brand","alt","DingocoinLogo","Collapse","minWidth","NavDropdown","index","element","path","to","ReactDOM","render","document","getElementById","faAngleDown"],"mappings":"8rCAEMA,EAAU,6BAEVC,EAAO,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACOC,YAAK,GAAD,OAAIJ,EAAJ,gBAA2B,CAClDK,QAASH,EAAKG,UAFF,UAIC,QAHTC,EADQ,iDAKL,MALK,gCAOLA,EAAOC,MAPF,2CAAH,sDAWPC,EAAa,SAACN,GAClB,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,mBAA8B,CACvCK,QAASH,EAAKG,QACdI,UAAWP,EAAKO,UAChBC,UAAWR,EAAKQ,aAIdC,EAAoB,SAACT,GACzB,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,0BAAqC,CAC9CK,QAASH,EAAKG,QACdO,MAAOV,EAAKU,SAIVC,EAAqB,SAACX,GAC1B,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,2BAAsC,CAC/Cc,YAAaZ,EAAKY,eAIhBC,EAAqB,SAACb,GAC1B,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,2BAAsC,CAC/CgB,YAAad,EAAKc,YAClBJ,MAAOV,EAAKU,MACZK,QAASf,EAAKe,WAIZC,EAAsB,SAAChB,GAC3B,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,4BAAuC,CAChDmB,QAASjB,EAAKiB,QACdC,QAASlB,EAAKkB,QACdC,KAAMnB,EAAKmB,KACXC,YAAapB,EAAKoB,YAClBC,KAAMrB,EAAKqB,KACXT,YAAaZ,EAAKY,eAIhBU,EAAgB,SAACtB,GACrB,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,mBAA8B,CACvCS,UAAWP,EAAKO,UAChBgB,MAAOvB,EAAKuB,MACZJ,KAAMnB,EAAKmB,KACXK,UAAWxB,EAAKwB,UAChBhB,UAAWR,EAAKQ,aAIdiB,EAAwB,SAACzB,GAC7B,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,2BAAsC,CAC/CyB,MAAOvB,EAAKuB,SAIVG,EAAsB,SAAC1B,GAC3B,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,yBAAoC,CAC7CyB,MAAOvB,EAAKuB,SAIVI,EAA2B,SAAC3B,GAChC,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,8BAAyC,CAClDyB,MAAOvB,EAAKuB,SAIVK,EAAkB,SAAC5B,GACvB,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,qBAAgC,CACzCyB,MAAOvB,EAAKuB,SAIVM,EAAyB,SAAC7B,GAC9B,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,4BAAuC,CAChDyB,MAAOvB,EAAKuB,SAIVO,EAA4B,SAAC9B,GACjC,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,+BAA0C,CACnDyB,MAAOvB,EAAKuB,SAIVQ,EAA4B,SAAC/B,GACjC,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,+BAA0C,CACnDyB,MAAOvB,EAAKuB,SAIVS,EAAuB,SAAChC,GAC5B,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,0BAAqC,CAC9CmC,OAAQjC,EAAKiC,UAIXC,EAA2B,SAAClC,GAChC,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,8BAAyC,KAGhDqC,EAAyB,SAACnC,GAC9B,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,4BAAuC,KAG9CsC,EAAW,SAACpC,GAChB,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,cAAyB,CAClCuC,IAAKrC,EAAKqC,IACVC,UAAWtC,EAAKsC,UAChBC,OAAQvC,EAAKuC,OACbC,MAAOxC,EAAKwC,SAIVC,EAAmB,SAACzC,GACxB,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,sBAAiC,CAC1CmC,OAAQjC,EAAKiC,UAIXS,EAAmB,SAAC1C,GACxB,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,sBAAiC,CAC1C6C,SAAU3C,EAAK2C,YAIbC,EAAqB,SAAC5C,GAC1B,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,wBAAmC,CAC5C+C,OAAQ7C,EAAK6C,UAIXC,EAAyB,SAAC9C,GAC9B,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,4BAAuC,CAChDyB,MAAOvB,EAAKuB,SAIVwB,EAA0B,SAAC/C,GAC/B,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,6BAAwC,CACjDmC,OAAQjC,EAAKiC,UAIXe,EAA6B,SAAChD,GAClC,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,0CAAqD,CAC9DyB,MAAOvB,EAAKuB,SAIV0B,EAAmB,SAACjD,GACxB,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,sBAAiC,CAC1CS,UAAWP,EAAKO,UAChBgB,MAAOvB,EAAKuB,MACZsB,OAAQ7C,EAAK6C,OACb1B,KAAMnB,EAAKmB,KACXK,UAAWxB,EAAKwB,UAChBJ,YAAapB,EAAKoB,YAClBZ,UAAWR,EAAKQ,aAId0C,EAAmB,SAAClD,GACxB,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,sBAAiC,CAC1CS,UAAWP,EAAKO,UAChBsC,OAAQ7C,EAAK6C,OACb1B,KAAMnB,EAAKmB,KACXK,UAAWxB,EAAKwB,UAChBJ,YAAapB,EAAKoB,YAClBZ,UAAWR,EAAKQ,aAId2C,EAAoB,SAACnD,GACzB,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,uBAAkC,CAC3CS,UAAWP,EAAKO,UAChBJ,QAASH,EAAKG,QACd0C,OAAQ7C,EAAK6C,OACbrC,UAAWR,EAAKQ,aAId4C,EAAqB,SAACpD,GAC1B,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,wBAAmC,CAC5C+C,OAAQ7C,EAAK6C,UAIXQ,EAAoB,SAACrD,GACzB,OAAOE,YAAK,GAAD,OAAIJ,EAAJ,iCAA4C,CACrDK,QAASH,EAAKG,WAIZmD,EAAoC,WACxC,OAAOpD,YAAK,GAAD,OAAIJ,EAAJ,uCAAkD,KAOzDyD,EAA+B,WACnC,OAAOrD,YAAK,GAAD,OAAIJ,EAAJ,kCAA6C,M,iCC3N1D,4CA+Be0D,IA5Bf,SAAwBC,GACtB,OACE,eAAC,IAAD,CACEC,KAAK,KACLC,UAAQ,EACRC,KAAMH,EAAMG,KACZC,OAAQJ,EAAMI,OAJhB,UAME,cAAC,IAAMC,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,wCAIF,cAAC,IAAMC,KAAP,UACE,eAAC,IAAD,CAAWC,UAAU,mBAArB,UACE,8EAAgD,uBAAhD,sCACA,mBAAGA,UAAU,OAAOC,KAAK,gCAAgCC,OAAO,SAASC,IAAI,aAA7E,SACE,cAAC,IAAD,CAAQH,UAAU,OAAlB,iCAEF,mBAAGA,UAAU,OAAOC,KAAK,gCAAgCC,OAAO,SAASC,IAAI,aAA7E,SACE,cAAC,IAAD,CAAQH,UAAU,OAAlB,4C,qNCnBNI,EAAY,SAACC,GACjB,GAAU,OAANA,QAAoBC,IAAND,GAAgC,kBAANA,GAAwB,KAANA,EAC5D,MAAM,IAAIE,MAAM,yBAElB,OAAQC,OAAOC,IAAUC,MAAML,EAAG,SAAW,KAAKM,YAG9CC,EAAiB,SAACP,GACtB,IAAMQ,EAAaL,OAAOH,GAAK,GAC3BQ,IACFR,GAAKA,GAEP,IAAMS,EAAUN,OAAOH,GAAGM,WAC1B,OACGE,EAAa,IAAM,IAApB,UAA6BC,EAAQC,QAAQ,wBAAyB,OAIpEC,EAAwB,SAACX,GAC7B,IAAMQ,EAAaL,OAAOH,GAAK,GAC3BQ,IACFR,GAAKA,GAEP,IAAMS,GAAWN,OAAOH,GAAK,YAAYM,WACzC,OACGE,EAAa,IAAM,IAApB,UAA6BC,EAAQC,QAAQ,wBAAyB,OAIpE/E,EAAI,uCAAG,WAAOiF,EAAMnF,GAAb,eAAAC,EAAA,6DACLmF,EAAa,IAAIC,gBACvBC,YAAW,kBAAMF,EAAWG,UAAS,KAF1B,SAIHC,MAAML,EAAM,CAChBM,iBAAiB,EACjBC,OAAQ,OACRC,OAAQP,EAAWO,OACnBC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUhG,KAZd,uCAcTiG,QAdS,2CAAH,yD,2QCDJC,EAAW,SAACC,GAAD,OACf,IAAIC,SAAQ,SAACC,EAASC,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOnG,OAAOuG,MAAM,KAAK,KACvDJ,EAAOK,QAAU,SAACC,GAAD,OAAWP,EAAOO,QAkVxBC,IA/Uf,WACE,MAA8BC,IAAMC,SAAS,MAA7C,mBAAO/F,EAAP,KAAgBgG,EAAhB,KACA,EAAwCF,IAAMC,SAAS,IAAvD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAwCJ,IAAMC,SAAS,QAAvD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAA8BN,IAAMC,SAAS,GAA7C,mBAAOjG,EAAP,KAAgBuG,EAAhB,KACA,EAAwBP,IAAMC,SAAS,IAAvC,mBAAO7F,EAAP,KAAaoG,EAAb,KACA,EAAsCR,IAAMC,SAAS,IAArD,mBAAO5F,EAAP,KAAoBoG,EAApB,KACA,EAA8BT,IAAMC,SAAS,MAA7C,mBAAO9F,EAAP,KAAgBuG,EAAhB,KACA,EAAwCV,IAAMC,SAAS,IAAvD,mBAAOU,EAAP,KAAqBC,EAArB,KACA,GAAwBZ,IAAMC,SAAS,IAAvC,qBAAO3F,GAAP,MAAauG,GAAb,MAEA,GAA8Bb,IAAMC,UAAS,GAA7C,qBAAOa,GAAP,MAAgBC,GAAhB,MACA,GAA8Bf,IAAMC,SAAS,MAA7C,qBAAOe,GAAP,MAAgBC,GAAhB,MACA,GAA8BjB,IAAMC,SAAS,MAA7C,qBAAO7G,GAAP,MAAgB8H,GAAhB,MAEA,GAA0ClB,IAAMC,UAAS,GAAzD,qBAAOkB,GAAP,MAAsBC,GAAtB,MAEApB,IAAMqB,WAAU,WACE,OAAZnH,EAGOA,EAAQyC,KAhCE,IAiCnByD,EAAgB,+CAGhBA,EAAgB,IANhBA,EAAgB,0BAQjB,CAAClG,IAEJ8F,IAAMqB,WAAU,WACd,sBAAC,4BAAAnI,EAAA,yDACiB,OAAZiB,EADL,4BAEamH,EAFb,SAE+BnC,EAAShF,GAFxC,mBAESoH,EAFT,KAEoBC,KAFpB,eAEkD,WAC1CC,YAAMF,OA7DHG,EA6DiBH,IA5DhBG,EAAOC,OAAS,IAKf,KAAdD,EAAO,IACO,KAAdA,EAAO,IACO,KAAdA,EAAO,IACO,KAAdA,EAAO,IACO,KAAdA,EAAO,IACO,KAAdA,EAAO,IACQ,KAAfA,EAAO,KACQ,KAAfA,EAAO,KAiDDd,EAAgB,yCACPzG,EAAQwC,KA7CF,IA8CfiE,EAAgB,6CACa,MAApBgB,IAAOL,GAAGM,OAAsC,MAArBD,IAAOL,GAAGO,OAC9ClB,EAAgB,+CAEhBA,EAAgB,IAVrB,uBAaGA,EAAgB,4BAbnB,kCA1DU,IAACc,IA0DX,MAAD,KAgBC,CAACvH,IAEJ,IAAM4H,GAAQ,uCAAG,WAAOC,GAAP,mBAAA9I,EAAA,yDACf8I,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,gCAEO3E,IAAjB4E,OAAOC,MALI,uBAMblB,IAAiB,GANJ,sCAU0BtH,IAV1B,KAaAyI,IAbA,KAacC,IAbd,KAaqBC,IAbrB,UAawCtD,EAASjF,GAbjD,qCAa4BwI,MAb5B,8CAaIzD,UAbJ,qBAcN1B,YAAU8C,GAdJ,KAeJ,GAAKsC,KAAKC,MAAiB,GAAV5I,EAAgB,KAf7B,OAabD,YAba,KAcbJ,MAda,KAebK,QAfa,2CAkBkB,QAR3B6I,EAVS,WAmBb,UAAWA,GAnBE,oEAyBPR,OAAOC,MAAMQ,uBACjB,GACAD,EAA2BE,OA3BhB,WA+BA,QAPTC,EAxBS,OA6Bb3J,cAEgCoE,IAAXuF,EA/BR,0DAmCfjC,IAAW,GAnCI,MAoC2B9G,IApC3B,UAqCEkF,EAASjF,GArCX,wBAsCQ,OAAZC,EAtCI,uBAsCe,KAtCf,yCAsC4BgF,EAAShF,GAtCrC,sDAuCPC,EAvCO,MAwCAC,EAxCA,MAyCPC,GAzCO,MA0CA0I,EA1CA,OAqCb9I,QArCa,MAsCbC,QAtCa,MAuCbC,KAvCa,MAwCbC,YAxCa,MAyCbC,KAzCa,MA0CbT,YA1Ca,6CA6CmB,QAT5BoJ,EApCS,cA8CyBxF,IAAtCwF,EAA4BnD,MA9Cf,wBAgDbmB,IAAW,GAhDE,2BAoDfF,IAAW,GACXE,IAAW,GACXC,GAAW+B,EAA4B7J,SAtDxB,4CAAH,sDAyDd,OACE,gCACE,cAAC,IAAD,CAAW+D,UAAU,aAArB,SACE,eAAC,IAAD,WACE,oBAAIA,UAAU,OAAd,wBACA,cAAC,IAAD,SAGJ,cAAC,IAAD,CAAW+F,MAAO,CAAEC,SAAU,SAA9B,SACE,cAAC,IAAD,UACE,eAAC,IAAD,YACgB,OAAZnC,KAAgC,IAAZA,KACpB,eAAC,IAAD,CAAMoC,SAAUrB,GAAhB,UACE,eAAC,IAAKsB,MAAN,CAAYlG,UAAU,YAAtB,UACE,cAAC,IAAKmG,MAAN,UACE,+DAEF,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,SAAU,SAACzB,GAAD,OAAO9B,EAAW8B,EAAE3E,OAAOqG,MAAM,KAC3CC,UAA4B,OAAjBxD,GAA0C,KAAjBA,EACpCyD,QAA0B,KAAjBzD,IAEVA,GACC,8BACE,cAAC,IAAK0D,KAAN,CAAW1G,UAAU,cAArB,SACGgD,MAIP,eAAC,IAAK0D,KAAN,CAAW1G,UAAU,aAArB,mHAGE,uBAHF,mGASF,eAAC,IAAKkG,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAAC,IAAKmG,MAAN,UACE,8DAEF,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,SAAU,SAACzB,GAAD,OAAOtB,EAAWsB,EAAE3E,OAAOqG,MAAM,KAC3CC,UAA4B,OAAjBhD,GAA0C,KAAjBA,EACpCiD,QAA0B,KAAjBjD,IAEVA,GACC,8BACE,cAAC,IAAKkD,KAAN,CAAW1G,UAAU,cAArB,SACGwD,MAIP,eAAC,IAAKkD,KAAN,CAAW1G,UAAU,aAArB,iGAEE,uBAFF,sDAOF,eAAC,IAAKkG,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAAC,IAAKmG,MAAN,kCACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLM,MAAO1J,EACP2J,YAAY,oBACZN,SAAU,SAACzB,GAAD,OAAOxB,EAAQwB,EAAE3E,OAAOyG,QAClCF,QAAkB,KAATxJ,GAAeA,EAAKuH,QAAU,GACvCgC,UAAoB,KAATvJ,GAAeA,EAAKuH,OAAS,KAEzCvH,EAAKuH,OAAS,IACb,8BACE,cAAC,IAAKkC,KAAN,CAAW1G,UAAU,cAArB,6BAKJ,cAAC,IAAK0G,KAAN,CAAW1G,UAAU,aAArB,8DAKF,eAAC,IAAKkG,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAAC,IAAKmG,MAAN,yCACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLM,MAAOzJ,EACP0J,YAAY,qBACZN,SAAU,SAACzB,GAAD,OAAOvB,EAAeuB,EAAE3E,OAAOyG,QACzCF,QAAyB,KAAhBvJ,GAAsBA,EAAYsH,QAAU,IACrDgC,UAA2B,KAAhBtJ,GAAsBA,EAAYsH,OAAS,MAEvDtH,EAAYsH,OAAS,KACpB,8BACE,cAAC,IAAKkC,KAAN,CAAW1G,UAAU,cAArB,gCAKJ,cAAC,IAAK0G,KAAN,CAAW1G,UAAU,aAArB,8DAKF,eAAC,IAAKkG,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAAC,IAAKmG,MAAN,kCACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLM,MAAOxJ,GACPyJ,YAAY,sCACZN,SAAU,SAACzB,GAAD,OAAOnB,GAAQmB,EAAE3E,OAAOyG,QAClCF,QAAkB,KAATtJ,IAAeA,GAAKqH,QAAU,IACvCgC,UAAoB,KAATrJ,IAAeA,GAAKqH,OAAS,MAEzCrH,GAAKqH,OAAS,KACb,8BACE,cAAC,IAAKkC,KAAN,CAAW1G,UAAU,cAArB,yBAGJ,cAAC,IAAK0G,KAAN,CAAW1G,UAAU,aAArB,8DAKF,eAAC,IAAKkG,MAAN,CAAYlG,UAAU,YAAtB,UACE,cAAC,IAAKmG,MAAN,UACE,4DAEF,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLM,MAAOzD,EACPoD,SAAU,SAACzB,GAEPA,EAAE3E,OAAOyG,MAAME,MAAM,aACrBC,SAASjC,EAAE3E,OAAOyG,QAAU,EAE5BxD,EAAgB0B,EAAE3E,OAAOyG,OAEzBxD,EAAgB,WAItB,cAAC,IAAKuD,KAAN,CAAW1G,UAAU,aAArB,4EAKF,eAAC,IAAKkG,MAAN,CAAYlG,UAAU,OAAtB,UACE,eAAC,IAAKmG,MAAN,WACE,+DACE,IAAMX,KAAKC,MAAiB,GAAV5I,EAAgB,KAAO,IAAIkK,QAAQ,GACrD,OAEJ,cAAC,IAAKC,MAAN,CACEL,MAAO9J,EACPyJ,SAAU,SAACzB,GAAD,OAAOzB,EAAWyB,EAAE3E,OAAOyG,UAEvC,cAAC,IAAKD,KAAN,CAAW1G,UAAU,aAArB,uEAKF,sBAAK+F,MAAO,CAAEkB,UAAW,UAAzB,UACe,OAAZpD,KAAgC,IAAZF,IACnB,cAAC,IAAD,CACE3D,UAAU,yBACVkH,QAAQ,UACRb,KAAK,SACLc,SACc,OAAZpK,GACiB,KAAjBiG,GACa,OAAZhG,GAAqC,KAAjBwG,EAPzB,wBAaW,OAAZK,KAAgC,IAAZF,IACnB,gCACE,cAAC,IAAD,CAASyD,UAAU,WACnB,uDAEE,uBAFF,kCAOS,IAAZvD,IACC,8BACE,oDAEE,uBAFF,oDAUG,IAAZA,IACC,sBAAKkC,MAAO,CAAEkB,UAAW,UAAzB,UACG,IACD,8CACA,8CACe,4BAAIhL,QAEnB,qBAAK8J,MAAO,CAAEkB,UAAW,UAAzB,SACE,mBAAGhH,KAAM,QAAUhE,GAAnB,SACE,cAAC,IAAD,CAAQ+D,UAAU,oBAAoBkH,QAAQ,UAA9C,2CAWd,cAAC,IAAD,CACExH,KAAMsE,GACNrE,OAAQ,kBAAMsE,IAAiB,Y,6dC3WjCoD,EAAM,SAACpG,GACX,IAAMC,EAAa,IAAIC,gBAEvB,OADAC,YAAW,kBAAMF,EAAWG,UAAS,KAC9BC,MAAML,EAAM,CACjBM,iBAAiB,EACjBC,OAAQ,MACRC,OAAQP,EAAWO,UAIjB6F,EAAO,uCAAG,WAAOrL,GAAP,eAAAF,EAAA,sEACSsL,EAAI,GAAD,OAjBR,kDAiBQ,YAAmBpL,IAD/B,UAEU,OADlBsL,EADQ,QAEDC,OAFC,yCAGLD,EAASxF,QAHJ,gCAKL,MALK,2CAAH,sDASP0F,EAAiB,SAACxL,GACtB,MAAM,GAAN,OAzBqB,qDAyBrB,YAA4BA,EAA5B,SAGIyL,EAAQ,uCAAG,WAAOzL,GAAP,eAAAF,EAAA,sEACQsL,EAAI,GAAD,OA5BP,mDA4BO,YAAoBpL,IAD/B,UAES,OADlBsL,EADS,QAEFC,OAFE,yCAGND,EAASxF,QAHH,gCAKN,MALM,2CAAH,sDASR4F,EAAU,uCAAG,WAAOtK,GAAP,eAAAtB,EAAA,sEACMsL,EAAI,GAAD,OApCL,qDAoCK,YAAsBhK,IAD/B,UAEO,OADlBkK,EADW,QAEJC,OAFI,yCAGRD,EAASxF,QAHD,gCAKR,MALQ,2CAAH,sDASV6F,EAAa,uCAAG,WAAOjJ,GAAP,eAAA5C,EAAA,sEACGsL,EAAI,GAAD,OA5CF,wDA4CE,YAAyB1I,IAD/B,UAEI,OADlB4I,EADc,QAEPC,OAFO,yCAGXD,EAASxF,QAHE,gCAKX,MALW,2CAAH,sD,wCC0CJ8F,MA/Ef,SAAiBtI,GACf,IAAMuI,EAASjF,IAAMkF,SACrB,EAAgClF,IAAMC,UAAS,GAA/C,mBAAOkF,EAAP,KAAkBC,EAAlB,KACA,EAAsCpF,IAAMC,SAAS,MAArD,mBAAOoF,EAAP,KAAoBC,EAApB,KACA,EAAwBtF,IAAMC,SAAS,MAAvC,mBAAO7F,EAAP,KAAaoG,EAAb,KACA,EAA0BR,IAAMC,SAAS,MAAzC,mBAAOsF,EAAP,KAAcC,EAAd,KAgCA,OA9BAxF,IAAMqB,WAAU,WACd,IAAMoE,EAAW,IAAIC,sBAAqB,SAACC,GACzCA,EAAQC,SAAQ,SAACC,GACXA,EAAMC,gBACRV,GAAW,SAKjB,OADAK,EAASM,QAAQd,EAAOe,SACjB,WACL,IACEP,EAASQ,UAAUhB,EAAOe,SAC1B,cAEH,IAEHhG,IAAMqB,WAAU,WACd,sBAAC,gCAAAnI,EAAA,0DACKiM,EADL,iCAEsBV,EAAQ/H,EAAMtD,SAFpC,cAES8M,EAFT,gBAG6BtB,EAAelI,EAAMtD,SAHlD,cAGSiM,EAHT,gBAIuBR,EAASnI,EAAMtD,SAJtC,OAIS+M,EAJT,OAMGb,EAAeD,GACf7E,EAAiB,OAAT0F,EAAgB,KAAOA,EAAK9L,MACpCoL,EAAmB,OAAVW,EAAiB,KAAOA,EAAMZ,OAR1C,2CAAD,KAWC,CAAC7I,EAAMtD,QAAS+L,IAGjB,eAACiB,EAAA,EAAD,CACEjJ,UAAU,mDACVkJ,IAAKpB,EAFP,UAIE,sBAAK9H,UAAU,aAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,8BAA8BmJ,KAAK,aAGpD,cAACF,EAAA,EAAKG,IAAN,CAAUlC,QAAQ,MAAMmC,IAAKnB,EAAaoB,QAAQ,YAEpD,uBACA,eAACL,EAAA,EAAKlJ,KAAN,WACE,cAACkJ,EAAA,EAAKnJ,MAAN,CAAYE,UAAU,aAAtB,SACY,OAAT/C,EAAgB,IAAe,KAATA,EAAc,cAAgBA,IAEvD,cAACgM,EAAA,EAAKM,SAAN,CAAevJ,UAAU,wBAAzB,SAAkDT,EAAMtD,UACxD,eAACgN,EAAA,EAAKvC,KAAN,WACE,sBAAM1G,UAAU,aAAhB,SACa,OAAVoI,EAAiB,IAAMpH,YAAsBoH,EAAM5L,SAEtD,uBACA,sBAAMwD,UAAU,sBAAhB,yBAGJ,uBACA,sBAAKA,UAAU,2BAAf,UACE,uBAAMA,UAAU,eAAhB,UACE,cAAC,IAAD,CAAiBwJ,KAAMC,MAAmB,IAC/B,OAAVrB,EAAiB,IAAMpH,YAAsBoH,EAAMsB,gBAHxD,eAME,uBAAM1J,UAAU,eAAhB,UACE,cAAC,IAAD,CAAiBwJ,KAAMG,MAAkB,IAC9B,OAAVvB,EAAiB,IAAMA,EAAMwB,qB,0BCgBzBC,MAtFf,SAAwBtK,GACtB,IAAMuI,EAASjF,IAAMkF,SACrB,EAAgClF,IAAMC,UAAS,GAA/C,mBAAOkF,EAAP,KAAkBC,EAAlB,KACA,EAAsCpF,IAAMC,SAAS,MAArD,mBAAOoF,EAAP,KAAoBC,EAApB,KACA,EAAoCtF,IAAMC,SAAS,MAAnD,mBAAOgH,EAAP,KAAmBC,EAAnB,KACA,EAA0BlH,IAAMC,SAAS,MAAzC,mBAAOsF,EAAP,KAAcC,EAAd,KAkCA,OAhCAxF,IAAMqB,WAAU,WACd,IAAMoE,EAAW,IAAIC,sBAAqB,SAACC,GACzCA,EAAQC,SAAQ,SAACC,GACXA,EAAMC,gBACRV,GAAW,SAKjB,OADAK,EAASM,QAAQd,EAAOe,SACjB,WACL,IACEP,EAASQ,UAAUhB,EAAOe,SAC1B,cAEH,IAEHhG,IAAMqB,WAAU,WACd,sBAAC,8BAAAnI,EAAA,0DACKiM,EADL,iCAE4BJ,EAAcrI,EAAMZ,QAFhD,UAESmL,EAFT,OAGGC,EAAcD,GAEK,OAAfA,EALP,wBAMK3B,EAAeV,EAAeqC,EAAWxM,YAN9C,SAQyBoB,YAAmB,CAAEC,OAAQY,EAAMZ,SAR5D,OAQWyJ,EARX,OASKC,EAASD,GATd,2CAAD,KAaC,CAACJ,EAAWzI,EAAMZ,SAGnB,eAACqL,EAAA,EAAD,CAAWhK,UAAU,yBAAyBkJ,IAAKpB,EAAnD,UACkB,OAAfgC,GACY,OAAV1B,GACC,qBAAKpI,UAAU,qCAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBACEA,UAAU,8BACVmJ,KAAK,iBAMD,OAAfW,GAAiC,OAAV1B,GACtB,sBAAKpI,UAAU,qCAAf,UACE,qBAAKA,UAAU,oBAAoBqJ,IAAKnB,IACxC,sBAAMlI,UAAU,gBAAhB,SACkB,OAAf8J,GAAuBA,EAAW7M,OAErC,sBAAM+C,UAAU,kCAAhB,SACkB,OAAf8J,GAAuBA,EAAW5M,cAErC,oBAAI8C,UAAU,YACd,sBAAKA,UAAU,2CAAf,UACE,uBAAMA,UAAU,UAAhB,UACE,cAAC,IAAD,CAAiBwJ,KAAMS,MAAW,IACvB,OAAV7B,EAAiB,IAAMA,EAAM8B,SAHlC,eAME,iCACE,cAAC,IAAD,CAAiBV,KAAMC,MAAmB,IAC/B,OAAVrB,EAAiB,IAAMxH,YAAewH,EAAMsB,gBARjD,eAWE,uBAAM1J,UAAU,UAAhB,UACE,cAAC,IAAD,CAAiBwJ,KAAMG,MAAkB,IAC9B,OAAVvB,EAAiB,IAAMA,EAAMwB,wB,SC+F7BO,MAnLf,SAA+B5K,GAC7B,MAAsCsD,IAAMC,SAAS,MAArD,mBAAOsH,EAAP,KAAoBC,EAApB,KACA,EAAkCxH,IAAMC,SAAS,MAAjD,mBAAOxF,EAAP,KAAkBgN,EAAlB,KACA,EAAwBzH,IAAMC,SAAS,IAAvC,mBAAO7F,EAAP,KAAaoG,EAAb,KACA,EAA4BR,IAAMC,SAAS,IAA3C,mBAAOnE,EAAP,KAAe4L,EAAf,KACA,EAAsC1H,IAAMC,SAAS,IAArD,mBAAO5F,EAAP,KAAoBoG,EAApB,KAoBA,OAlBAT,IAAMqB,WAAU,WACd,sBAAC,8BAAAnI,EAAA,8DACqBuE,IAAhBf,EAAMlC,OAAuC,OAAhBkC,EAAMlC,MADxC,iCAG8BE,YAAsB,CAAEF,MAAOkC,EAAMlC,QAHnE,aAGS+M,EAHT,OAG6EI,QAAQC,WAClEjG,OAAS,GAJ5B,iCAKmCtC,QAAQwI,IACpCN,EAAYO,IAAZ,uCAAgB,WAAOtK,GAAP,SAAAtE,EAAA,sEACAuL,EAAQjH,GADR,uCACYpD,MADZ,2CAAhB,wDANP,OAKW2N,EALX,OAUKP,EAAeD,EAAYO,KAAI,SAACtK,EAAGwK,GAAJ,MAAU,CAACxK,EAAGuK,EAAgBC,QAC7DP,EAAaF,EAAY,IAX9B,2CAAD,KAeC,CAAC7K,EAAMlC,QAGR,eAACyN,EAAA,EAAD,CAAOtL,KAAK,KAAKC,UAAQ,EAACC,KAAMH,EAAMG,KAAMC,OAAQJ,EAAMI,OAA1D,UACE,cAACmL,EAAA,EAAMlL,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACiL,EAAA,EAAMhL,MAAP,UAAcP,EAAMwL,UAEtB,cAACD,EAAA,EAAM/K,KAAP,UACE,eAACiL,EAAA,EAAD,CACEhL,UAAU,MACViG,SAAU,SAACpB,GACTA,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAES,OAAnB1F,EAAM0G,eAAwC3F,IAAnBf,EAAM0G,UACnC1G,EAAM0G,SAAS,CACb3I,UAAWA,EACXL,KAAMA,EACN0B,OAAQA,EACRzB,YAAaA,KAZrB,UAiBE,eAAC8N,EAAA,EAAK9E,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAACgL,EAAA,EAAK7E,MAAN,UACE,8DAEe,OAAhBiE,GACC,gCACE,cAACY,EAAA,EAAKC,OAAN,CAAa9D,UAAQ,IACrB,cAAC6D,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAAcwG,WAAW,EAA9C,uEAKa,OAAhB4D,GACC,gCACE,cAACY,EAAA,EAAKC,OAAN,CACExE,SAAS,EACTE,MAAOrJ,EACPgJ,SAAU,SAACzB,GAAD,OAAOyF,EAAazF,EAAE3E,OAAOyG,QAHzC,SAKGyD,EAAYO,KAAI,SAACtK,GAAD,OACf,wBAAmBsG,MAAOtG,EAAE,GAA5B,SACGA,EAAE,IADQA,EAAE,SAKnB,cAAC2K,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,aAArB,qHAON,eAACgL,EAAA,EAAK9E,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAACgL,EAAA,EAAK7E,MAAN,UACE,8DAEF,cAAC6E,EAAA,EAAK5E,QAAN,CACEC,KAAK,OACLO,YAAY,oBACZD,MAAO1J,EACPqJ,SAAU,SAACzB,GAAD,OAAOxB,EAAQwB,EAAE3E,OAAOyG,QAClCF,QAAkB,KAATxJ,GAAeA,EAAKuH,QAAU,GACvCgC,UAAoB,KAATvJ,GAAeA,EAAKuH,OAAS,KAEhC,KAATvH,GACC,8BACE,cAAC+N,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAArB,6BAGM,KAAT/C,GAAeA,EAAKuH,OAAS,IAC5B,8BACE,cAACwG,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAArB,gCAIN,eAACgL,EAAA,EAAK9E,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAACgL,EAAA,EAAK7E,MAAN,UACE,gEAEF,cAAC6E,EAAA,EAAK5E,QAAN,CACEC,KAAK,OACLO,YAAY,oBACZD,MAAOhI,EACP2H,SAAU,SAACzB,GAAD,OAAO0F,EAAU1F,EAAE3E,OAAOyG,QACpCF,QAAoB,KAAX9H,GAAiBA,EAAO6F,QAAU,GAC3CgC,UAAsB,KAAX7H,GAAiBA,EAAO6F,OAAS,KAElC,KAAX7F,GACC,8BACE,cAACqM,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAArB,+BAGQ,KAAXrB,GAAiBA,EAAO6F,OAAS,IAChC,8BACE,cAACwG,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAArB,+BAGQ,KAAXrB,IAAkBA,EAAOkI,MAAM,kBAC9B,8BACE,cAACmE,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAArB,wFAMJ,cAACgL,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,aAArB,2GAKF,eAACgL,EAAA,EAAK9E,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAACgL,EAAA,EAAK7E,MAAN,gDACA,cAAC6E,EAAA,EAAK5E,QAAN,CACEC,KAAK,OACLO,YAAY,qBACZD,MAAOzJ,EACPoJ,SAAU,SAACzB,GAAD,OAAOvB,EAAeuB,EAAE3E,OAAOyG,QACzCF,QAAyB,KAAhBvJ,GAAsBA,EAAYsH,QAAU,IACrDgC,UAA2B,KAAhBtJ,GAAsBA,EAAYsH,OAAS,MAEvC,KAAhBtH,GAAsBA,EAAYsH,OAAS,KAC1C,8BACE,cAACwG,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAArB,uCAMN,qBAAKA,UAAU,cAAf,SACE,cAACkL,EAAA,EAAD,CACElL,UAAU,YACVkH,QAAQ,UACRb,KAAK,SACLc,SACgB,OAAd7J,GACS,KAATL,GACAA,EAAKuH,OAAS,IACH,KAAX7F,GACAA,EAAO6F,OAAS,IAChBtH,EAAYsH,OAAS,IAVzB,+BCXG2G,MAlJf,SAA6B5L,GAC3B,MAAsCsD,IAAMC,SAAS,MAArD,mBAAOsH,EAAP,KAAoBC,EAApB,KACA,EAA4CxH,IAAMC,SAAS,MAA3D,mBAAOsI,EAAP,KAAuBC,EAAvB,KACA,EAAwBxI,IAAMC,SAAS,IAAvC,mBAAO7F,EAAP,KAAaoG,EAAb,KACA,EAAsCR,IAAMC,SAAS,IAArD,mBAAO5F,EAAP,KAAoBoG,EAApB,KAyBA,OAvBAT,IAAMqB,WAAU,WACd,sBAAC,kCAAAnI,EAAA,8DACsBuE,IAAjBf,EAAMZ,QAAyC,OAAjBY,EAAMZ,OADzC,iCAE4BiJ,EAAcrI,EAAMZ,QAFhD,cAESmL,EAFT,OAGGzG,EAAQyG,EAAW7M,MACnBqG,EAAewG,EAAW5M,aAJ7B,SAM8BK,YAAsB,CAAEF,MAAOyM,EAAWzM,QANxE,aAMS+M,EANT,OAMkFI,QAAQC,WACvEjG,OAAS,GAP5B,kCAQmCtC,QAAQwI,IACpCN,EAAYO,IAAZ,uCAAgB,WAAOtK,GAAP,SAAAtE,EAAA,sEACAuL,EAAQjH,GADR,uCACYpD,MADZ,2CAAhB,wDATP,QAQW2N,EARX,OAaKP,EAAeD,EAAYO,KAAI,SAACtK,EAAGwK,GAAJ,MAAU,CAACxK,EAAGuK,EAAgBC,QAEvDS,EAAwBlB,EAAYO,KAAI,SAACtK,EAAGwK,GAAJ,MAAU,CAACxK,EAAGwK,MAAIU,MAAK,SAAClL,GAAD,OAAOA,EAAE,KAAOyJ,EAAWxM,aAChG+N,EAAkBC,EAAsB,IAhB7C,2CAAD,KAoBC,CAAC/L,EAAMZ,SAGR,eAACmM,EAAA,EAAD,CAAOtL,KAAK,KAAKC,UAAQ,EAACC,KAAMH,EAAMG,KAAMC,OAAQJ,EAAMI,OAA1D,UACE,cAACmL,EAAA,EAAMlL,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACiL,EAAA,EAAMhL,MAAP,UAAcP,EAAMwL,UAEtB,cAACD,EAAA,EAAM/K,KAAP,UACE,eAACiL,EAAA,EAAD,CACEhL,UAAU,MACViG,SAAU,SAACpB,GACTA,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAES,OAAnB1F,EAAM0G,eAAwC3F,IAAnBf,EAAM0G,UACnC1G,EAAM0G,SAAS,CACb3I,UAAW8M,EAAYgB,GAAgB,GACvCnO,KAAMA,EACN0B,OAAQY,EAAMZ,OACdzB,YAAaA,KAZrB,UAiBE,eAAC8N,EAAA,EAAK9E,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAACgL,EAAA,EAAK7E,MAAN,UACE,8DAEe,OAAhBiE,GACC,gCACE,cAACY,EAAA,EAAKC,OAAN,CAAa9D,UAAQ,IACrB,cAAC6D,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAAcwL,WAAW,EAA9C,uEAKa,OAAhBpB,GAA2C,OAAnBgB,GACvB,gCACE,cAACJ,EAAA,EAAKC,OAAN,CACExE,SAAS,EACTE,MAAOyE,EACP9E,SAAU,SAACzB,GAAD,OAAOwG,EAAkBxG,EAAE3E,OAAOyG,QAH9C,SAKGyD,EAAYO,KAAI,SAACtK,EAAGwK,GAAJ,OACf,wBAAgBlE,MAAOkE,EAAvB,SACGxK,EAAE,IADQwK,QAKjB,cAACG,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,aAArB,qHAON,eAACgL,EAAA,EAAK9E,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAACgL,EAAA,EAAK7E,MAAN,UACE,8DAEF,cAAC6E,EAAA,EAAK5E,QAAN,CACEC,KAAK,OACLO,YAAY,oBACZD,MAAO1J,EACPqJ,SAAU,SAACzB,GAAD,OAAOxB,EAAQwB,EAAE3E,OAAOyG,QAClCF,QAAkB,KAATxJ,GAAeA,EAAKuH,QAAU,GACvCgC,UAAoB,KAATvJ,GAAeA,EAAKuH,OAAS,KAEhC,KAATvH,GACC,8BACE,cAAC+N,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAArB,6BAGM,KAAT/C,GAAeA,EAAKuH,OAAS,IAC5B,8BACE,cAACwG,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAArB,gCAIN,eAACgL,EAAA,EAAK9E,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAACgL,EAAA,EAAK7E,MAAN,gDACA,cAAC6E,EAAA,EAAK5E,QAAN,CACEC,KAAK,OACLO,YAAY,qBACZD,MAAOzJ,EACPoJ,SAAU,SAACzB,GAAD,OAAOvB,EAAeuB,EAAE3E,OAAOyG,QACzCF,QAAyB,KAAhBvJ,GAAsBA,EAAYsH,QAAU,IACrDgC,UAA2B,KAAhBtJ,GAAsBA,EAAYsH,OAAS,MAEvC,KAAhBtH,GAAsBA,EAAYsH,OAAS,KAC1C,8BACE,cAACwG,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAArB,uCAMN,qBAAKA,UAAU,cAAf,SACE,cAACkL,EAAA,EAAD,CACElL,UAAU,YACVkH,QAAQ,UACRb,KAAK,SACLc,SACqB,OAAnBiE,GACS,KAATnO,GACAA,EAAKuH,OAAS,IACdtH,EAAYsH,OAAS,IARzB,+BCGGiH,MAjIf,SAA0BlM,GACxB,MAAsCsD,IAAMC,SAAS,MAArD,mBAAOsH,EAAP,KAAoBC,EAApB,KACA,EAA4CxH,IAAMC,cAASxC,GAA3D,mBAAO8K,EAAP,KAAuBC,EAAvB,KACA,EAAwBxI,IAAMC,SAAS,IAAvC,mBAAO7F,EAAP,KAAaoG,EAAb,KA0CA,OAxCAR,IAAMqB,WAAU,WACd,sBAAC,kCAAAnI,EAAA,8DACuBuE,IAAlBf,EAAMtD,SAA2C,OAAlBsD,EAAMtD,QAD1C,iCAEyB0L,EAAWpI,EAAMtD,SAF1C,cAESyP,EAFT,OAIKrI,EADc,OAAZqI,EACM,GAEAA,EAAQzO,MANrB,SAUWM,YAAsB,CAAEF,MAAOkC,EAAMtD,UAVhD,cASSmO,EATT,OAWKI,QAAQC,UAXb,UAa+BvI,QAAQwI,IAClCN,EAAYO,IAAZ,uCAAgB,WAAOtK,GAAP,SAAAtE,EAAA,sEACAuL,EAAQjH,GADR,uCACYpD,MADZ,2CAAhB,wDAdL,QAaO2N,EAbP,OAkBGP,EACE,CAAC,CAAC,KAAM,uBAAuBsB,OAC7BvB,EAAYO,KAAI,SAACtK,EAAGwK,GAAJ,MAAU,CAACxK,EAAGuK,EAAgBC,SAI5CS,EAAwB,CAAC,MAC5BK,OAAOvB,GACPO,KAAI,SAACtK,EAAGwK,GAAJ,MAAU,CAACxK,EAAGwK,MAClBU,MACC,SAAClL,GAAD,OACEA,EAAE,MACW,OAAZqL,QAA0CpL,IAAtBoL,EAAQpO,UACzB,KACAoO,EAAQpO,cAElB+N,EAAkBC,EAAsB,IAlC3C,2CAAD,KAqCC,CAAC/L,EAAMtD,UAGR,eAAC6O,EAAA,EAAD,CAAOtL,KAAK,KAAKC,UAAQ,EAACC,KAAMH,EAAMG,KAAMC,OAAQJ,EAAMI,OAA1D,UACE,cAACmL,EAAA,EAAMlL,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACiL,EAAA,EAAMhL,MAAP,UAAcP,EAAMwL,UAEtB,cAACD,EAAA,EAAM/K,KAAP,UACE,eAACiL,EAAA,EAAD,CACEhL,UAAU,MACViG,SAAU,SAACpB,GACTA,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAES,OAAnB1F,EAAM0G,eAAwC3F,IAAnBf,EAAM0G,UACnC1G,EAAM0G,SAAS,CACbhK,QAASsD,EAAMtD,QACfqB,UAAW8M,EAAYgB,GAAgB,GACvCnO,KAAMA,KAXd,UAgBE,eAAC+N,EAAA,EAAK9E,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAACgL,EAAA,EAAK7E,MAAN,uCACiB,OAAhBiE,GACC,gCACE,cAACY,EAAA,EAAKC,OAAN,CAAa9D,UAAQ,IACrB,cAAC6D,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAAcwL,WAAW,EAA9C,uEAKa,OAAhBpB,QAA2C9J,IAAnB8K,GACvB,gCACE,cAACJ,EAAA,EAAKC,OAAN,CACExE,SAAS,EACTE,MAAOyE,EACP9E,SAAU,SAACzB,GAAD,OAAOwG,EAAkBxG,EAAE3E,OAAOyG,QAH9C,SAKGyD,EAAYO,KAAI,SAACtK,EAAGwK,GAAJ,OACf,wBAAgBlE,MAAOkE,EAAvB,SACGxK,EAAE,IADQwK,QAKjB,cAACG,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,aAArB,qHAON,eAACgL,EAAA,EAAK9E,MAAN,CAAYlG,UAAU,OAAtB,UACE,cAACgL,EAAA,EAAK7E,MAAN,sCACA,cAAC6E,EAAA,EAAK5E,QAAN,CACEC,KAAK,OACLO,YAAY,oBACZD,MAAO1J,EACPqJ,SAAU,SAACzB,GAAD,OAAOxB,EAAQwB,EAAE3E,OAAOyG,QAClCF,QAASxJ,EAAKuH,QAAU,GACxBgC,UAAWvJ,EAAKuH,OAAS,KAE1BvH,EAAKuH,OAAS,IACb,8BACE,cAACwG,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAArB,gCAIN,qBAAKA,UAAU,cAAf,SACE,cAACkL,EAAA,EAAD,CACElL,UAAU,YACVkH,QAAQ,UACRb,KAAK,SACLc,SAA6B,OAAnBiE,GAA2BnO,EAAKuH,OAAS,GAJrD,+B,QCjBGoH,MA3Ff,SAAqBrM,GACnB,IAAMuI,EAASjF,IAAMkF,SACrB,EAAgClF,IAAMC,UAAS,GAA/C,mBAAOkF,EAAP,KAAkBC,EAAlB,KACA,EAAsCpF,IAAMC,SAAS,MAArD,mBAAOoF,EAAP,KAAoBC,EAApB,KACA,EAA8BtF,IAAMC,cAASxC,GAA7C,mBAAOoL,EAAP,KAAgBG,EAAhB,KACA,EAA0BhJ,IAAMC,SAAS,MAAzC,mBAAOsF,EAAP,KAAcC,EAAd,KAqCA,OAnCAxF,IAAMqB,WAAU,WACd,IAAMoE,EAAW,IAAIC,sBAAqB,SAACC,GACzCA,EAAQC,SAAQ,SAACC,GACXA,EAAMC,gBACRV,GAAW,SAKjB,OADAK,EAASM,QAAQd,EAAOe,SACjB,WACL,IACEP,EAASQ,UAAUhB,EAAOe,SAC1B,cAEH,IAEHhG,IAAMqB,WAAU,WACd,sBAAC,4BAAAnI,EAAA,0DACKiM,GAA+B,OAAlBzI,EAAMtD,QADxB,iCAEyB0L,EAAWpI,EAAMtD,SAF1C,cAESyP,EAFT,OAGGG,EAAWH,GAEK,OAAZA,GAA0C,OAAtBA,EAAQpO,gBAA4CgD,IAAtBoL,EAAQpO,WAC5D6K,EAAeV,EAAeiE,EAAQpO,YAN3C,KASG+K,EATH,SAUyB1K,YAAuB,CAACN,MAAOkC,EAAMtD,UAV9D,oCAW4B2B,YAA0B,CAACP,MAAOkC,EAAMtD,UAXpE,qCAY4B4B,YAA0B,CAACR,MAAOkC,EAAMtD,UAZpE,0BAUK6P,aAVL,KAWKC,gBAXL,KAYKC,gBAZL,gEAAD,KAgBC,CAAChE,EAAWzI,EAAMtD,UAGnB,eAAC+N,EAAA,EAAD,CAAWhK,UAAU,sBAAsBkJ,IAAKpB,EAAhD,eACexH,IAAZoL,GACY,OAAVtD,GACC,qBAAKpI,UAAU,kCAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBACEA,UAAU,8BACVmJ,KAAK,sBAMJ7I,IAAZoL,GAAmC,OAAVtD,GACxB,sBAAKpI,UAAU,+BAAf,UACE,qBACEA,UAAU,oBACVqJ,IAAqB,OAAhBnB,EAAuBT,EAAe,sCAAwCS,IAErF,sBAAKlI,UAAU,qCAAf,UACE,uBAAMA,UAAU,8CAAhB,UACe,OAAZ0L,GAAoBA,EAAQzO,KAChB,OAAZyO,GAAoB,sBAAM1L,UAAU,aAAhB,gCAEvB,sBAAKA,UAAU,mCAAf,UACE,uBAAMA,UAAU,UAAhB,UACE,cAAC,IAAD,CAAiBwJ,KAAMS,MAAW,IACvB,OAAV7B,EAAiB,IAAMA,EAAM0D,gBAHlC,eAME,iCACE,cAAC,IAAD,CAAiBtC,KAAMyC,MAAc,IAC1B,OAAV7D,EAAiB,IAAMA,EAAM2D,mBARlC,eAWE,uBAAM/L,UAAU,UAAhB,UACE,cAAC,IAAD,CAAiBwJ,KAAM0C,MAAkB,IAC9B,OAAV9D,EAAiB,IAAMA,EAAM4D,gBAAkB5D,EAAM0D,6BC80BvDK,MA33Bf,WACE,MAAyDC,cAAjDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,iBAAkBC,EAA1C,EAA0CA,WACpCC,EAAWC,cACXC,OACepM,IAAnB+L,EACIG,EAASG,SAASC,SAAS,UACzB,eACAJ,EAASG,SAASC,SAAS,UAC3B,eACA,eACmBtM,IAArBgM,EACA,kBACehM,IAAfiM,EACA,MACA,UAGN,EAA8C1J,IAAMC,SAAS,MAA7D,mBAAO+J,EAAP,KAAwBC,EAAxB,KACA,EAA8BjK,IAAMC,SAAS,MAA7C,mBAAO4I,EAAP,KAAgBG,EAAhB,KAGA,EAAwDhJ,IAAMC,UAAS,GAAvE,mBAAOiK,EAAP,KAA6BC,EAA7B,KACA,EAAsCnK,IAAMC,SAAS,MAArD,mBAAOmK,EAAP,KAAoBC,EAApB,KACA,EAA4CrK,IAAMC,SAAS,MAA3D,mBAAOqK,EAAP,KAAuBC,GAAvB,KACA,GAAwCvK,IAAMC,SAAS,MAAvD,qBAAOuK,GAAP,MAAqBC,GAArB,MACA,GAAwCzK,IAAMC,SAAS,MAAvD,qBAAOyK,GAAP,MAAqBC,GAArB,MAGA,GAAoC3K,IAAMC,SAAS,MAAnD,qBAAOgH,GAAP,MAAmBC,GAAnB,MACA,GAA8ClH,IAAMC,SAAS,MAA7D,qBAAO2K,GAAP,MAAwBC,GAAxB,MACA,GAAoD7K,IAAMC,UAAS,GAAnE,qBAAO6K,GAAP,MAA2BC,GAA3B,MAGA,GAA8B/K,IAAMC,SAAS,MAA7C,qBAAO+K,GAAP,MAAgBC,GAAhB,MACA,GAAgCjL,IAAMC,SAAS,MAA/C,qBAAOiL,GAAP,MAAiBC,GAAjB,MACA,GAAkDnL,IAAMC,cAASxC,GAAjE,qBAAO2N,GAAP,MAA0BC,GAA1B,MACA,GAAgCrL,IAAMC,cAASxC,GAA/C,qBAAO6N,GAAP,MAAiBC,GAAjB,MACA,GAA8BvL,IAAMC,cAASxC,GAA7C,qBAAO+N,GAAP,MAAgBC,GAAhB,MACA,GAAsCzL,IAAMC,SAAS,IAArD,qBAAOyL,GAAP,MAAoBC,GAApB,MACA,GAAgD3L,IAAMC,SAAS,IAA/D,qBAAO2L,GAAP,MAAyBC,GAAzB,MACA,GAAkC7L,IAAMC,SAAS,MAAjD,qBAAO6L,GAAP,MAAkBC,GAAlB,MACA,GAAwC/L,IAAMC,SAAS,MAAvD,qBAAO+L,GAAP,MAAqBC,GAArB,MAEA,GAA0CjM,IAAMC,UAAS,GAAzD,qBAAOkB,GAAP,MAAsBC,GAAtB,MAGApB,IAAMqB,WAAU,WACVwI,EAAKqC,WAAW,YAClB,sBAAC,4BAAAhT,EAAA,sEAEqB4L,EAAW0E,GAFhC,OAGiB,QADZX,EAFL,UAIGA,EAAU,IAEZA,EAAQzP,QAAUoQ,EAClBR,EAAWH,GAPZ,0CAAD,KAUD,IAGH7I,IAAMqB,WAAU,WACD,YAATwI,GACF,sBAAC,8BAAA3Q,EAAA,sEAE2B6C,YAAuB,CAC/CvB,MAAOgP,IAHV,cAKqB,QAHdY,EAFP,SAMGC,EAAeD,EAAYxC,WAN9B,SAU8B3L,YAA2B,CACtDzB,MAAOgP,IAXV,OAUOc,EAVP,OAaCC,GAAkBD,EAAe1C,WAblC,0CAAD,KAgBD,IAGH5H,IAAMqB,WAAU,WACD,iBAATwI,GACF,sBAAC,sBAAA3Q,EAAA,kEACCuR,GADD,SAGW/P,YAAsB,CAAEF,MAAOgP,IAH1C,0BAIK7B,QAAQC,UAJb,SAMWjN,YAAoB,CAAEH,MAAOgP,IANxC,0BAOK7B,QAAQC,UAPb,SASWhN,YAAyB,CAAEJ,MAAOgP,IAT7C,mBAUK7B,QAAQC,UAVb,MAEGL,YAFH,KAKG4E,UALH,KAQGC,eARH,gEAAD,KAcD,IAGHpM,IAAMqB,WAAU,WACD,iBAATwI,GACF,sBAAC,sBAAA3Q,EAAA,kEACCyR,GADD,SACuB9P,YAAgB,CAAEL,MAAOgP,IADhD,8CAEC6C,QAFD,SAEmBxR,YAAgB,CAAEL,MAAOgP,IAF5C,wBAES8C,IAFT,2DAAD,KAKD,IAGHtM,IAAMqB,WAAU,WACd,sBAAC,8BAAAnI,EAAA,yDACc,eAAT2Q,EADL,iCAE4B9E,EAAc0E,GAF1C,cAESxC,EAFT,QAGcnL,OAAS2N,EACpBvC,GAAcD,GAJjB,SAKuBnC,EAAWmC,EAAWzM,OAL7C,cAMmB,QADZqO,EALP,UAOKA,EAAU,IAEZA,EAAQzP,QAAU6N,EAAWzM,MAC7BwO,EAAWH,GAVd,KAWGgC,GAXH,UAYYxO,YAAmB,CAAEP,OAAQ2N,IAZzC,oBAY8D7B,WAZ9D,yDAAD,KAgBC,IAGH5H,IAAMqB,WAAU,WACd,sBAAC,sCAAAnI,EAAA,yDACc,QAAT2Q,EADL,iCAEyBpF,EAAQiF,GAFjC,cAESsB,EAFT,OAGGC,GAAWD,GAHd,SAI0BnG,EAAS6E,GAJnC,cAISwB,EAJT,OAKGC,GAAYD,GALf,UAQW5O,YAAkB,CACtBlD,QAASsQ,IAThB,WAYmC,QAL1B6C,EAPT,OAWKzQ,QAXL,iBAaKuP,GAAqB,MAb1B,yCAe8BtG,EAAcwH,GAf5C,SAeWtF,EAfX,QAgBgBnL,OAASyQ,EACpBlB,GAAqBpE,GAjB1B,WAoBoB,OAAbiE,GAAqBA,EAAS1Q,QAAU0Q,EAASsB,QApBxD,kCAqB0B1H,EAAWoG,EAAS1Q,OArB9C,QAsBsB,QADb8Q,EArBT,UAuBOA,EAAW,IAEbA,EAASlS,QAAU8R,EAAS1Q,MAC5B+Q,GAAYD,GA1BjB,wBA4BKC,GAAY,MA5BjB,WA+BoB,OAAbL,GAAiC,OAAZF,EA/B5B,kCAgCyBlG,EAAWoG,EAASsB,SAhC7C,QAiCqB,QADZ3D,EAhCT,UAkCOA,EAAU,IAEZA,EAAQzP,QAAU8R,EAASsB,QAC3BxD,EAAWH,GArChB,oBAwCG4C,GAxCH,UAwCoBzS,YAAQ,CAAEI,QAASsQ,IAxCvC,8EAAD,KA2CC,IAGH1J,IAAMqB,WAAU,WACM,KAAhBqK,GACFG,GAAoB,yBACE,OAAbX,IAEPvN,OAAOJ,YAAUmO,KACjB/N,OAAO,IAAMA,OAAOuN,GAAS3F,MAAM5L,OAEnCkS,GAAoB,sDAOtBA,GAAoB,MAErB,CAACH,GAAaR,KAEjB,IAAMuB,GAAmB,uCAAG,WAAO5D,GAAP,mBAAA3P,EAAA,8DACLuE,IAAjB4E,OAAOC,MADe,uBAExBlB,IAAiB,GAFO,iCAMpBsL,EAAU,CACdlT,UAAWmT,KAAKC,MAChBpS,MAAOgP,EACPpP,KAAMyO,EAAQzO,KACdK,UAAWoO,EAAQpO,WAEfoS,EAAU7N,KAAKC,UAAUyN,GAZL,SAcDrK,OAAOC,MAAMwK,YACpCvK,IAAItD,UAAUuD,IAAOqK,KAfG,eAiBDpP,KAHnBsP,EAdoB,QAiBXjN,MAjBW,0DAoB1B4M,EAAQjT,UAAYsT,EAAW1T,OApBL,UAsBCkB,YAAcmS,GAtBf,aAuBtB,UAvBsB,2DA2B1BrK,OAAOsH,SAASqD,QAAO,GA3BG,4CAAH,sDA8BnBC,GAAwB,uCAAG,WAAOhG,GAAP,mBAAA/N,EAAA,6DAEzBwT,EAAU,CACdlT,UAAWmT,KAAKC,MAChBpS,MAAOgP,EACP1N,OAAQmL,EAAWnL,OACnB1B,KAAM6M,EAAW7M,KACjBK,UAAWwM,EAAWxM,UACtBJ,YAAa4M,EAAW5M,aAEpBwS,EAAU7N,KAAKC,UAAUyN,GAVA,SAaNrK,OAAOC,MAAMwK,YACpCvK,IAAItD,UAAUuD,IAAOqK,KAdQ,eAgBNpP,KAHnBsP,EAbyB,QAgBhBjN,MAhBgB,wDAmB/B4M,EAAQjT,UAAYsT,EAAW1T,OAnBA,UAsBJ6C,YAAiBwQ,GAtBb,aAuB3B,UAvB2B,2DA2B/BrK,OAAOsH,SAASqD,QAAO,GA3BQ,4CAAH,sDA8BxBE,GAAsB,uCAAG,WAAOjG,GAAP,mBAAA/N,EAAA,6DAEvBwT,EAAU,CACdlT,UAAWmT,KAAKC,MAChB9Q,OAAQmL,EAAWnL,OACnB1B,KAAM6M,EAAW7M,KACjBK,UAAWwM,EAAWxM,UACtBJ,YAAa4M,EAAW5M,aAEpBwS,EAAU7N,KAAKC,UAAUyN,GATF,SAYJrK,OAAOC,MAAMwK,YACpCvK,IAAItD,UAAUuD,IAAOqK,KAbM,eAeJpP,KAHnBsP,EAZuB,QAedjN,MAfc,wDAkB7B4M,EAAQjT,UAAYsT,EAAW1T,OAlBF,UAqBF8C,YAAiBuQ,GArBf,aAsBzB,UAtByB,2DA0B7BrK,OAAOsH,SAASqD,QAAO,GA1BM,4CAAH,sDA6BtBG,GAAM,uCAAG,WAAO/T,EAAS0C,GAAhB,mBAAA5C,EAAA,6DAEPwT,EAAU,CACdlT,UAAWmT,KAAKC,MAChBxT,QAASA,EACT0C,OAAQA,GAEJ+Q,EAAU7N,KAAKC,UAAUyN,GAPlB,SAUYrK,OAAOC,MAAMwK,YACpCvK,IAAItD,UAAUuD,IAAOqK,KAXV,eAaYpP,KAHnBsP,EAVO,QAaEjN,MAbF,wDAgBb4M,EAAQjT,UAAYsT,EAAW1T,OAhBlB,UAmBc+C,YAAkBsQ,GAnBhC,aAoBT,UApBS,2DAwBbrK,OAAOsH,SAASqD,QAAO,GAxBV,4CAAH,wDA2BNI,GAAU,uCAAG,WAAOpL,GAAP,qBAAA9I,EAAA,yDACjB8I,EAAEC,iBACFD,EAAEE,uBAEmBzE,IAAjB4E,OAAOC,MAJM,uBAKflB,IAAiB,GALF,iCASX5H,EAAYmT,KAAKC,MACjBC,EAVW,UAUEnD,EAVF,YAUgBlQ,GAVhB,SAWQ6I,OAAOC,MAAMwK,YACpCvK,IAAItD,UAAUuD,IAAOqK,KAZN,eAcQpP,KAHnBsP,EAXW,QAcFjN,MAdE,oEAkBIvG,YAAW,CAC9BH,QAASsQ,EACTlQ,UAAWA,EACXC,UAAWsT,EAAW1T,SArBP,WAuBF,QALTA,EAlBW,cAuBuBoE,IAAjBpE,EAAOyG,MAvBb,wDA2BMrC,IAAnBpE,EAAOa,SACT+R,GAAgB5S,EAAOa,SA5BR,4CAAH,sDAgCVmT,GAAK,uCAAG,WAAOrL,GAAP,uBAAA9I,EAAA,yDACZ8I,EAAEC,iBACFD,EAAEE,uBAEmBzE,IAAjB4E,OAAOC,MAJC,uBAKVlB,IAAiB,GALP,0CASkB1H,YAAkB,CAC9CN,QAASsQ,EACT/P,MAAO4D,YAAUmO,MAXP,uBASJ4B,EATI,EASJA,KAAMvK,EATF,EASEA,MATF,UAaUV,OAAOC,MAAMQ,uBAAuBwK,EAAMvK,GAbpD,WAeG,QAFTC,EAbM,OAcT3J,cAC+BoE,IAAXuF,EAfX,oEAmBSpJ,YAAmB,CAAEC,YAAamJ,IAnB3C,QAmBN3J,EAnBM,OAoBZ0S,GAAa1S,GApBD,4CAAH,sDAuBX,OACE,sBAAK8D,UAAU,mDAAf,UACG0M,EAAKqC,WAAW,YAA0B,OAAZrD,GAC7B,cAAC0E,EAAA,EAAD,UACE,sBAAKpQ,UAAU,2CAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,oBACVqQ,QAAS,kBAAMvD,GAAmB,IAFpC,UAIE,cAAC,IAAD,CAAiB9M,UAAU,OAAOwJ,KAAM8G,MAJ1C,aAOF,qBAAKtQ,UAAU,kBAAf,SACE,oBAAIA,UAAU,4CAAd,SACE,cAAC,EAAD,CAAa/D,QAASoQ,QAG1B,uBACA,eAACkE,EAAA,EAAD,CAAKrJ,QAAQ,OAAOlH,UAAU,kBAA9B,UACE,cAACuQ,EAAA,EAAIC,KAAL,UACE,cAACD,EAAA,EAAIE,KAAL,CACEC,SAAS,YACTC,OACW,YAATjE,GACS,eAATA,GACS,QAATA,EAEFzM,KAAI,mBAAcyL,EAAQzP,QAAtB,KAPN,6BAYF,cAACsU,EAAA,EAAIC,KAAL,UACE,cAACD,EAAA,EAAIE,KAAL,CACEC,SAAS,aACTC,OAAiB,iBAATjE,EACRzM,KAAI,mBAAcyL,EAAQzP,QAAtB,UAHN,0BAQF,cAACsU,EAAA,EAAIC,KAAL,UACE,cAACD,EAAA,EAAIE,KAAL,CACEC,SAAS,aACTC,OAAiB,iBAATjE,EACRzM,KAAI,mBAAcyL,EAAQzP,QAAtB,UAHN,6BAaA,YAATyQ,GACC,cAAC0D,EAAA,EAAD,UACE,sBAAKpQ,UAAU,4CAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,sBAAMA,UAAU,+BAAhB,yBACA,uBACEA,UAAU,YACVqQ,QAAS,kBAAMrD,GAAwB,IAFzC,UAIE,cAAC,IAAD,CAAiBhN,UAAU,OAAOwJ,KAAMoH,MAJ1C,oBAOe,OAAhB3D,GAAwBA,EAAYzI,OAAS,GAC5C,oBAAIxE,UAAU,kCAAd,SACGiN,EAAYtC,KAAI,SAACtK,GAAD,OACf,mBAAWJ,KAAI,sBAAiBI,GAAhC,SACE,cAAC,EAAD,CAAgB1B,OAAQ0B,KADlBA,QAMG,OAAhB4M,GAA+C,IAAvBA,EAAYzI,QACnC,qBAAKxE,UAAU,4BAAf,SACE,sBAAMA,UAAU,qBAAhB,2CASA,YAAT0M,GACoB,OAAnBS,GACAA,EAAe3I,OAAS,GACtB,cAAC4L,EAAA,EAAD,UACE,sBAAKpQ,UAAU,4CAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,sBAAMA,UAAU,+BAAhB,+BAIF,oBAAIA,UAAU,uBAAd,SACGmN,EAAexC,KAAI,SAACtK,GAAD,OAClB,gCACE,mBAAGJ,KAAI,eAAUI,GAAjB,SACE,cAAC,EAAD,CAASpE,QAASoE,MAEpB,cAACwQ,EAAA,EAAD,CACE7Q,UAAU,iBACV+K,MAAM,qBAFR,SAImB,OAAhBkC,GACCA,EAAYtC,KAAI,SAACmG,GAAD,OACd,cAACC,EAAA,EAASP,KAAV,CAAuBH,QAAS,kBAAML,GAAO3P,EAAGyQ,IAAhD,SACGA,GADiBA,UAVlBzQ,aAsBZ,iBAATqM,GACkB,OAAjBW,IACAA,GAAa2B,UAAUgC,QACrB,SAAC3Q,GAAD,OAAQgN,GAAajD,YAAY6G,MAAK,SAACH,GAAD,OAAOA,IAAMzQ,QACnDmE,OAAS,GACT,cAAC4L,EAAA,EAAD,UACE,sBAAKpQ,UAAU,4CAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,sBAAMA,UAAU,+BAAhB,0BAEF,oBAAIA,UAAU,uBAAd,SACGqN,GAAa2B,UACXgC,QAAO,SAAC3Q,GAAD,OAAQgN,GAAajD,YAAY6G,MAAK,SAACH,GAAD,OAAOA,IAAMzQ,QAC1DsK,KAAI,SAACtK,GAAD,OACH,mBAAWJ,KAAI,eAAUI,GAAzB,SACE,cAAC,EAAD,CAASpE,QAASoE,KADZA,aASZ,iBAATqM,GACkB,OAAjBW,IACAA,GAAa4B,eACV+B,QAAO,SAAC3Q,GAAD,OAAQgN,GAAajD,YAAY6G,MAAK,SAACH,GAAD,OAAOA,IAAMzQ,QAC1D2Q,QAAO,SAAC3Q,GAAD,OAAQgN,GAAa2B,UAAUiC,MAAK,SAACH,GAAD,OAAOA,IAAMzQ,QAAImE,OAC7D,GACA,cAAC4L,EAAA,EAAD,UACE,sBAAKpQ,UAAU,4CAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,sBAAMA,UAAU,+BAAhB,qCAIF,oBAAIA,UAAU,uBAAd,SACGqN,GAAa4B,eACX+B,QAAO,SAAC3Q,GAAD,OAAQgN,GAAajD,YAAY6G,MAAK,SAACH,GAAD,OAAOA,IAAMzQ,QAC1D2Q,QAAO,SAAC3Q,GAAD,OAAQgN,GAAa2B,UAAUiC,MAAK,SAACH,GAAD,OAAOA,IAAMzQ,QACxDsK,KAAI,SAACtK,GAAD,OACH,mBAAWJ,KAAI,eAAUI,GAAzB,SACE,cAAC,EAAD,CAASpE,QAASoE,KADZA,aASZ,iBAATqM,GAA4C,OAAjBa,IAC1B,cAAC6C,EAAA,EAAD,UACE,sBAAKpQ,UAAU,4CAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,sBAAMA,UAAU,+BAAhB,6BAIF,sBAAKA,UAAU,YAAf,UACE,8BACE,8CACA,+BACE,gDAAmBuN,GAAa2D,aAChC,8CAAiB3D,GAAa4D,iBAC9B,kDACmB,IAChBnQ,YAAsBuM,GAAa6D,wBAK1C,8BACE,uCACA,+BACE,oDAAuB7D,GAAa3D,cACpC,kDACmB,IAChB5I,YAAsBuM,GAAa8D,cAEtC,8CACe,IACZrQ,YAAsBuM,GAAa+D,qBAK1C,8BACE,wCACA,6BACE,iDACkB,IACftQ,YACCR,OAAO+M,GAAa6D,eAClB5Q,OAAO+M,GAAa+D,YACpB9Q,OAAO+M,GAAa8D,4BAU5B,eAAT3E,GAAwC,OAAf5C,IACxB,cAACsG,EAAA,EAAD,UACE,sBAAKpQ,UAAU,4CAAf,UACe,OAAZ0L,GACC,sBAAK1L,UAAU,iCAAf,UACE,sBACEA,UAAU,wBACV+F,MAAO,CAAEwL,QAAS,UAFpB,UAIE,sBAAMvR,UAAU,uBAAhB,6BACA,mBACEA,UAAU,cACVC,KAAI,mBAAcyL,EAAQzP,QAAtB,KAFN,SAIoB,KAAjByP,EAAQzO,MACQ,OAAjByO,EAAQzO,WACSqD,IAAjBoL,EAAQzO,KACJyO,EAAQzP,QACRyP,EAAQzO,UAGhB,sBACE+C,UAAU,oBACVqQ,QAAS,kBAAMzC,IAAsB,IAFvC,SAIE,iCACE,cAAC,IAAD,CAAiB5N,UAAU,OAAOwJ,KAAM8G,MAD1C,gBAMN,qBAAKtQ,UAAU,kBAAf,SACE,oBAAIA,UAAU,+CAAd,SACE,cAAC,EAAD,CAAgBrB,OAAQ2N,aAMxB,eAATI,GAAwC,OAAf5C,IACxB,cAACsG,EAAA,EAAD,UACE,qBAAKpQ,UAAU,4CAAf,SACE,oBAAIA,UAAU,uBAAd,SACuB,OAApByN,IACCA,GAAgB9C,KAAI,SAACtK,GAAD,OAClB,mBAAWJ,KAAI,eAAUI,GAAzB,SACE,cAAC,EAAD,CAASpE,QAASoE,KADZA,YASV,QAATqM,GACa,OAAZmB,SACsBvN,IAAtB2N,SACa3N,IAAb6N,IACE,cAACiC,EAAA,EAAD,UACE,sBAAKpQ,UAAU,4CAAf,UACE,sBAAKA,UAAU,iCAAf,UACyB,OAAtBiO,IAA0C,OAAZvC,GAC7B,sBAAK1L,UAAU,gBAAf,UACE,sBAAMA,UAAU,uBAAhB,0BACA,mBACEA,UAAU,cACVC,KAAkB,OAAZyL,GAAA,mBAAgCA,EAAQzP,QAAxC,KAFR,SAIoB,KAAjByP,EAAQzO,MACQ,OAAjByO,EAAQzO,WACSqD,IAAjBoL,EAAQzO,KACJyO,EAAQzP,QACRyP,EAAQzO,UAIK,OAAtBgR,IACC,sBAAKjO,UAAU,gBAAf,UACE,uBAAMA,UAAU,uBAAhB,2BACiB,OAEjB,mBACEA,UAAU,cACVC,KACc,OAAZyL,GAAA,sBACeuC,GAAkBtP,OADjC,KAHJ,SAOGsP,GAAkBhR,aAK3B,gCACE,oBAAI+C,UAAU,uBAAd,SACE,cAAC,EAAD,CAAS/D,QAASsQ,MAEN,OAAb4B,IACC,sBAAKnO,UAAU,mBAAf,UACE,sBAAMA,UAAU,uBAAhB,SACE,6CAEF,mBACEA,UAAU,cACVC,KAAI,mBAAckO,GAASlS,QAAvB,UAFN,SAIqB,KAAlBkS,GAASlR,MACQ,OAAlBkR,GAASlR,WACSqD,IAAlB6N,GAASlR,KACLkR,GAASlS,QACTkS,GAASlR,UAInB,sBAAK+C,UAAU,8BAAf,UACE,+BACE,4BAAI6N,GAAQ5Q,SAEd,mBAAG+C,UAAU,cAAb,SACE,4BAAI6N,GAAQ3Q,mBAId,sBAAK8C,UAAU,uBAAf,UACE,sBAAMA,UAAU,iBAAhB,SACE,oDAFJ,OAKoB,OAAjB6O,IACC,sBAAM7O,UAAU,oBAAoBqQ,QAASJ,GAA7C,8BAIgB,OAAjBpB,IACC,mBACE7O,UAAU,sBACVC,KAAM4O,GACN3O,OAAO,SACPC,IAAI,aAJN,6BAgBN,QAATuM,GAA8B,OAAZmB,SAA0CvN,IAAtB2N,IACrC,cAACmC,EAAA,EAAD,UACE,sBAAKpQ,UAAU,4CAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,sBAAMA,UAAU,+BAAhB,4BAEF,qCACeM,IAAZ+N,IAAqC,OAAZA,IACxB,sBAAKrO,UAAU,mBAAf,UACG,IACD,0CACA,8BACE,mBACEA,UAAU,cACVC,KACE,6CACAoO,GAAQmD,KAEVrR,IAAI,aACJD,OAAO,SAPT,2BAUK,IAXP,6CAY4C,uBAZ5C,gDAiBSI,IAAZ+N,IAAqC,OAAZA,IAAkC,OAAdM,IAC5C,sBAAK3O,UAAU,qBAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,eAACgL,EAAA,EAAK9E,MAAN,WACE,cAAC8E,EAAA,EAAK7E,MAAN,UACE,wDAEF,cAAC6E,EAAA,EAAK5E,QAAN,CACEC,KAAK,OACLM,MAAO4H,GACPjI,SAAU,SAACzB,GACLA,EAAE3E,OAAOyG,MAAME,MAAM,aACvB2H,GAAe3J,EAAE3E,OAAOyG,QAG5BZ,MAAO,CAAEkB,UAAW,UACpBT,UAAgC,KAArBiI,KAEZA,IACC,8BACE,cAACzD,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,cAArB,SACGyO,OAIP,cAACzD,EAAA,EAAKtE,KAAN,CAAW1G,UAAU,aAArB,8EAMJ,qBAAKA,UAAU,kBAAf,SACE,cAACkL,EAAA,EAAD,CACElL,UAAU,iCACV+F,MAAO,CAAErB,MAAO,QAChByC,SAA+B,KAArBsH,GACV4B,QAASH,GAJX,qCAWS,OAAdvB,SAA0CrO,IAApBqO,GAAUhM,OAC/B,sBAAK3C,UAAU,mBAAf,UACG,IACD,wDACA,gDACkB,IAChB,mBACEA,UAAU,cACVC,KACE,6CACA0O,GAAU6C,KAEZrR,IAAI,aACJD,OAAO,SAPT,SASGyO,GAAU6C,OAEb,uBAbF,wEAmBW,OAAd7C,SAA0CrO,IAApBqO,GAAUhM,OAC/B,sBAAKoD,MAAO,CAAEkB,UAAW,UAAYjH,UAAU,OAA/C,UACG,IACD,qDACA,yFAEE,uBAFF,+DAWZ,cAACV,EAAA,EAAD,CACEI,KAAMsE,GACNrE,OAAQ,kBAAMsE,IAAiB,OAGtB,YAATyI,GAA+B,iBAATA,IACtB,cAAC,EAAD,CACE3B,MAAM,eACNrL,KAAMmN,EACNlN,OAAQ,kBAAMmN,GAAmB,IACjC7Q,QAASoQ,EACTpG,SAAUqJ,KAIJ,YAAT5C,GACC,cAAC,EAAD,CACE3B,MAAM,wBACNrL,KAAMqN,EACN1P,MAAOgP,EACP1M,OAAQ,kBAAMqN,GAAwB,IACtC/G,SAAU6J,KAIJ,eAATpD,GAAwC,OAAf5C,IACxB,cAAC,EAAD,CACEiB,MAAM,kBACNrL,KAAMiO,GACNhP,OAAQmL,GAAWnL,OACnBgB,OAAQ,kBAAMiO,IAAsB,IACpC3H,SAAU8J,S,oCCzuBL0B,MAhKf,WACE,IAAMjF,EAAWC,cACbC,EAAOF,EAASG,SAASlK,MAAM,KAAKiP,MACxChF,EAAO,CAAC,MAAO,UAAUiF,SAASjF,GAAQA,EAAO,MAGjD,MAA4C7J,IAAMC,SAAS,MAA3D,mBAAO8O,EAAP,KAAuBC,EAAvB,KACA,EAA4BhP,IAAMC,SAAS,IAA3C,mBAAO/E,EAAP,KAAe+T,EAAf,KACA,EAA0CjP,IAAMC,cAASxC,GAAzD,mBAAOyR,EAAP,KAAsBC,EAAtB,KAEAnP,IAAMqB,WAAU,WACd,sBAAC,gCAAAnI,EAAA,yDACc,QAAT2Q,EADL,gCAEmBtN,cAFnB,OAES6S,EAFT,OAGGJ,EAAkBI,EAAEzH,SAHvB,0BAIqB,QAATkC,EAJZ,kCAKmBrN,cALnB,QAKS4S,EALT,OAMGJ,EAAkBI,EAAEzH,SANvB,2BAOqB,WAATkC,EAPZ,oBASsB,QADbwF,EAAa,IAAIC,gBAAgB3F,EAASzO,QAAQsJ,IAAI,UAR/D,iBAUKyK,EAAU,IACVE,EAAiB,MAXtB,+BAaKF,EAAUI,GAbf,KAcKF,EAdL,UAecnT,YAAwB,CAAEd,OAAQmU,IAfhD,oBAe+D1H,SAf/D,yDAAD,KAoBC,IAEH,IAAM4H,EAAQ,uCAAG,WAAOvN,GAAP,SAAA9I,EAAA,sDACf8I,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAEQ,KAAlBlH,EAAOsU,QACTnN,OAAOsH,SAAS8F,OAAhB,oCAAoDvU,EAAOsU,SAN9C,2CAAH,sDAUd,OACE,sBAAKrS,UAAU,qBAAf,UACE,qBACEA,UAAU,qDACV+F,MAAO,CAAEC,SAAU,QAAStB,MAAO,QAFrC,SAIE,uDAED,CAAC,MAAO,MAAO,UAAUiN,SAASjF,IACjC,eAAC6F,EAAA,EAAIvI,UAAL,CAAewI,GAAG,oBAAoBC,iBAAiB,QAAvD,UACE,eAACrC,EAAA,EAAD,WACE,eAACG,EAAA,EAAD,CAAKrJ,QAAQ,OAAOlH,UAAU,sCAA9B,UACE,cAACuQ,EAAA,EAAIC,KAAL,CAAUxQ,UAAU,sBAApB,SACE,eAACuQ,EAAA,EAAIE,KAAL,CAAUxQ,KAAK,gBAAgB0Q,OAAiB,QAATjE,EAAvC,UACE,cAAC,IAAD,CAAiBlD,KAAMkJ,IAAQ1S,UAAU,SAD3C,gBAKF,cAACuQ,EAAA,EAAIC,KAAL,CAAUxQ,UAAU,cAApB,SACE,eAACuQ,EAAA,EAAIE,KAAL,CAAUxQ,KAAK,mBAAmB0Q,OAAiB,QAATjE,EAA1C,UACE,cAAC,IAAD,CAAiBlD,KAAMmJ,IAAQ3S,UAAU,SAD3C,WAKF,cAACuQ,EAAA,EAAIC,KAAL,CAAUxQ,UAAU,sBAApB,SACE,eAACuQ,EAAA,EAAIE,KAAL,CAAUxQ,KAAK,sBAAsB0Q,OAAiB,WAATjE,EAA7C,UACE,cAAC,IAAD,CAAiBlD,KAAMoJ,IAAU5S,UAAU,SAD7C,iBAMJ,oBAAIA,UAAU,oBAEhB,eAACoQ,EAAA,EAAD,WACG,CAAC,MAAO,OAAOuB,SAASjF,IAA4B,OAAnBkF,GAChC,cAACW,EAAA,EAAIM,QAAL,UACE,oBAAI7S,UAAU,kCAAd,SACG4R,EAAejH,KAAI,SAACtK,GAAD,OAClB,mBAAWJ,KAAI,sBAAiBI,GAAhC,SACE,cAAC,EAAD,CAAgB1B,OAAQ0B,KADlBA,UAOf,CAAC,UAAUsR,SAASjF,IACnB,cAAC6F,EAAA,EAAIM,QAAL,UACE,sBAAK7S,UAAU,qBAAf,UACE,cAACgL,EAAA,EAAD,CACEjF,MAAO,CAAEC,SAAU,QAAStB,MAAO,QACnCuB,SAAUmM,EACVpS,UAAU,UAHZ,SAKE,eAAC8S,EAAA,EAAD,CAAY9S,UAAU,OAAtB,UACE,cAAC8S,EAAA,EAAWpM,KAAZ,CAAiB8L,GAAG,eAApB,SACE,cAAC,IAAD,CAAiBhJ,KAAMoJ,QAEb,OAAX7U,GACC,cAACgV,EAAA,EAAD,CACE/S,UAAU,aACV4G,YAAa,2BACbD,MAAO5I,EACPiV,UAAU,OACV1M,SAAU,SAACzB,GACLA,EAAE3E,OAAOyG,MAAMnC,QAAU,IAC3BsN,EAAUjN,EAAE3E,OAAOyG,UAKf,KAAX5I,GACC,cAACmN,EAAA,EAAD,CAAQhE,QAAQ,UAAUb,KAAK,SAA/B,SACE,cAAC,IAAD,CAAiBmD,KAAMyJ,aAK/B,qBAAIjT,UAAU,kCAAd,UACqB,OAAlB+R,GACC,qBAAK/R,UAAU,kBAAf,SACE,mBAAGA,UAAU,qBAAqBoH,UAAU,SAA5C,qEAKe9G,IAAlByR,GACC,qBAAK/R,UAAU,kBAAf,SACE,cAACkT,EAAA,EAAD,CAASlT,UAAU,UAAUoH,UAAU,kBAGxB9G,IAAlByR,GACmB,OAAlBA,GACAA,EAAcpH,KAAI,SAACtK,GAAD,OAChB,mBAAWJ,KAAI,sBAAiBI,GAAhC,SACE,cAAC,EAAD,CAAgB1B,OAAQ0B,KADlBA,WAIOC,IAAlByR,GACmB,OAAlBA,GACyB,IAAzBA,EAAcvN,QACZ,qBAAKxE,UAAU,kBAAf,SACE,mBAAGA,UAAU,qBAAqBoH,UAAU,SAA5C,wDC4FX+L,MA5Of,WACE,IAAM3G,EAAWC,cACbC,EAAOF,EAASG,SAASlK,MAAM,KAAKiP,MACxChF,EAAO,CAAC,UAAUiF,SAASjF,GAAQA,EAAO,MAG1C,MAA8B7J,IAAMC,SAAS,MAA7C,mBAAOsQ,EAAP,KAAgBC,EAAhB,KACA,EAAoCxQ,IAAMC,UAAS,GAAnD,mBAAOwQ,EAAP,KAAmBC,EAAnB,KACA,EAAkC1Q,IAAMC,SAAS,gBAAjD,mBAAO0Q,EAAP,KAAkBC,EAAlB,KACA,EAA4B5Q,IAAMC,SAAS,IAA3C,mBAAO/E,EAAP,KAAe+T,EAAf,KACA,EAA0CjP,IAAMC,cAASxC,GAAzD,mBAAOyR,EAAP,KAAsBC,EAAtB,KAEA,EAA8CnP,IAAMC,UAAS,GAA7D,mBAAO4Q,EAAP,KAAwBC,EAAxB,KAEA9Q,IAAMqB,WAAU,WACd,sBAAC,8BAAAnI,EAAA,yDACc,QAAT2Q,EADL,gCAEoBlO,YAAiB,CAAEC,SAAU,OAFjD,QAESwT,EAFT,OAE0DzH,SACjDhG,OAAS,KACb+O,GAAc,GAEhBF,EAAWpB,GANd,0BAOqB,WAATvF,EAPZ,oBASsB,QADbwF,EAAa,IAAIC,gBAAgB3F,EAASzO,QAAQsJ,IAAI,UAR/D,iBAUKyK,EAAU,IACVE,EAAiB,MAXtB,+BAaKF,EAAUI,GAbf,KAcKF,EAdL,UAeczT,YAAiB,CAAER,OAAQmU,IAfzC,oBAewD1H,SAfxD,yDAAD,KAoBC,IAEH,IAAM4H,EAAQ,uCAAG,WAAOvN,GAAP,SAAA9I,EAAA,sDACf8I,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAEQ,KAAlBlH,EAAOsU,QACTnN,OAAOsH,SAAS8F,OAAhB,6BAA6CvU,EAAOsU,SANvC,2CAAH,sDAURuB,EAAa,uCAAG,WAAOlD,EAAUmD,GAAjB,yBAAA9X,EAAA,2DACK2U,EAASjO,MAAM,KADpB,mBACbtE,EADa,KACRC,EADQ,KAEpBqV,EAAaI,EAAM3T,OAAO4T,WAE1BP,GAAc,GACF,eAARpV,EALgB,iCAMDK,YAAiB,CAAEC,SAAU,OAN5B,QAMZwT,EANY,OAMqCzH,SACjDhG,OAAS,KACb+O,GAAc,GAEhBF,EAAWpB,GACX0B,GAAmB,GAXD,yCAaFzV,YAAS,CACvBC,IAAKA,EACLC,UAAWA,EACXE,MAAO,IACPD,OAAQ,IAjBQ,QAaZ4T,EAbY,OAmBlBoB,EACEpB,EAAEzH,QAAQG,KAAI,SAACtK,GACb,MAAO,CACLpE,QAASoE,OAIfsT,GAAmB,GA1BD,4CAAH,wDA8BbI,EAAU,uCAAG,4BAAAhY,EAAA,sEAETyC,YAAiB,CAAEC,SAAU2U,EAAQA,EAAQ5O,OAAS,GAAGgO,KAFhD,QACXP,EADW,OAGfzH,SACIhG,OAAS,KACb+O,GAAc,GAEhBF,EAAWD,EAAQzH,OAAOsG,IAPT,2CAAH,qDAUhB,OACE,sBAAKjS,UAAU,qBAAf,UACE,qBACEA,UAAU,qDACV+F,MAAO,CAAEC,SAAU,QAAStB,MAAO,QAFrC,SAIE,gDAED,CAAC,MAAO,UAAUiN,SAASjF,IAC1B,eAAC6F,EAAA,EAAIvI,UAAL,CAAewI,GAAG,oBAAoBC,iBAAiB,QAAvD,UACE,eAACrC,EAAA,EAAD,WACE,eAACG,EAAA,EAAD,CAAKrJ,QAAQ,OAAOlH,UAAU,sCAA9B,UACE,cAACuQ,EAAA,EAAIC,KAAL,CAAUxQ,UAAU,sBAApB,SACE,eAACuQ,EAAA,EAAIE,KAAL,CAAUxQ,KAAK,QAAQ0Q,OAAiB,QAATjE,EAA/B,UACE,cAAC,IAAD,CAAiBlD,KAAMS,IAAQjK,UAAU,SAD3C,gBAKF,cAACuQ,EAAA,EAAIC,KAAL,CAAUxQ,UAAU,sBAApB,SACE,eAACuQ,EAAA,EAAIE,KAAL,CAAUxQ,KAAK,eAAe0Q,OAAiB,WAATjE,EAAtC,UACE,cAAC,IAAD,CAAiBlD,KAAMoJ,IAAU5S,UAAU,SAD7C,iBAMJ,oBAAIA,UAAU,oBAEhB,eAACoQ,EAAA,EAAD,WACY,QAAT1D,GACC,eAAC6F,EAAA,EAAIM,QAAL,WACE,eAAC9B,EAAA,EAAD,CACEiD,SAAUJ,EACV7N,MAAO,CAAEkB,UAAW,UAFtB,UAIE,cAAC8J,EAAA,EAASkD,OAAV,CAAiBjU,UAAU,YAA3B,SACGwT,IAEH,eAACzC,EAAA,EAASmD,KAAV,WACE,cAACnD,EAAA,EAASP,KAAV,CAAeE,SAAS,kBAAxB,0BAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,mBAAxB,2BAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,aAAxB,2BAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,YAAxB,0BAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,kBAAxB,iCAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,iBAAxB,gCAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,mBAAxB,kCAGA,cAACK,EAAA,EAASP,KAAV,CAAeE,SAAS,kBAAxB,uCAKJ,qBAAI1Q,UAAU,uBAAd,UACe,OAAZoT,GACCA,EAAQzI,KAAI,SAACtK,GAAD,OACV,mBAAmBJ,KAAI,eAAUI,EAAEpE,SAAnC,SACE,cAAC,EAAD,CAASA,QAASoE,EAAEpE,WADdoE,EAAEpE,YAIbyX,GAA+B,OAAZN,IAAqBE,GACvC,cAACpI,EAAA,EAAD,CAAQmF,QAAS0D,EAAjB,6BAKP,CAAC,UAAUpC,SAASjF,IACnB,cAAC6F,EAAA,EAAIM,QAAL,UACE,sBAAK7S,UAAU,qBAAf,UACE,cAACgL,EAAA,EAAD,CACEjF,MAAO,CAAEC,SAAU,QAAStB,MAAO,QACnCuB,SAAUmM,EACVpS,UAAU,UAHZ,SAKE,eAAC8S,EAAA,EAAD,CAAY9S,UAAU,OAAtB,UACE,cAAC8S,EAAA,EAAWpM,KAAZ,CAAiB8L,GAAG,eAApB,SACE,cAAC,IAAD,CAAiBhJ,KAAMoJ,QAEb,OAAX7U,GACC,cAACgV,EAAA,EAAD,CACEC,UAAU,OACVhT,UAAU,aACV4G,YAAa,oBACbD,MAAO5I,EACPuI,SAAU,SAACzB,GACLA,EAAE3E,OAAOyG,MAAMnC,QAAU,IAC3BsN,EAAUjN,EAAE3E,OAAOyG,UAKf,KAAX5I,GACC,cAACmN,EAAA,EAAD,CAAQhE,QAAQ,UAAUb,KAAK,SAA/B,SACE,cAAC,IAAD,CAAiBmD,KAAMyJ,aAK/B,qBAAIjT,UAAU,uBAAd,UACqB,OAAlB+R,GACC,qBAAK/R,UAAU,kBAAf,SACE,mBAAGA,UAAU,qBAAqBoH,UAAU,SAA5C,8DAKe9G,IAAlByR,GACC,qBAAK/R,UAAU,kBAAf,SACE,cAACkT,EAAA,EAAD,CAASlT,UAAU,UAAUoH,UAAU,kBAGxB9G,IAAlByR,GACmB,OAAlBA,GACAA,EAAcpH,KAAI,SAACtK,GAAD,OAChB,mBAAmBJ,KAAI,eAAUI,GAAjC,SACE,cAAC,EAAD,CAASpE,QAASoE,KADZA,EAAEpE,iBAIKqE,IAAlByR,GACmB,OAAlBA,GACyB,IAAzBA,EAAcvN,QACZ,qBAAKxE,UAAU,kBAAf,SACE,mBAAGA,UAAU,qBAAqBoH,UAAU,SAA5C,iDCxDX+M,MApKf,WACE,IAAM3H,EAAWC,cACbC,EAAOF,EAASG,SAASlK,MAAM,KAAKiP,MACxChF,EAAO,CAAC,WAAY,UAAUiF,SAASjF,GAAQA,EAAO,YAGtD,MAAsC7J,IAAMC,SAAS,MAArD,mBAAOsR,EAAP,KAAoBC,EAApB,KACA,EAA4BxR,IAAMC,SAAS,IAA3C,mBAAO/E,EAAP,KAAe+T,EAAf,KACA,EAA0CjP,IAAMC,cAASxC,GAAzD,mBAAOyR,EAAP,KAAsBC,EAAtB,KAEAnP,IAAMqB,WAAU,WACd,sBAAC,gCAAAnI,EAAA,yDACc,cAAT2Q,EADL,gCAEmB1O,cAFnB,OAESiU,EAFT,OAGGoC,EAAepC,EAAEzH,SAHpB,0BAIqB,aAATkC,EAJZ,kCAKmBzO,cALnB,QAKSgU,EALT,OAMGoC,EAAepC,EAAEzH,SANpB,2BAOqB,WAATkC,EAPZ,oBASsB,QADbwF,EAAa,IAAIC,gBAAgB3F,EAASzO,QAAQsJ,IAAI,UAR/D,iBAUKyK,EAAU,IACVE,EAAiB,MAXtB,+BAaKF,EAAUI,GAbf,KAcKF,EAdL,UAeclU,YAAqB,CAAEC,OAAQmU,IAf7C,oBAe4D1H,SAf5D,yDAAD,KAoBC,IAEH,IAAM4H,EAAQ,uCAAG,WAAOvN,GAAP,SAAA9I,EAAA,sDACf8I,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAEQ,KAAlBlH,EAAOsU,QACTnN,OAAOsH,SAAS8F,OAAhB,iCAAiDvU,EAAOsU,SAN3C,2CAAH,sDAUd,OACE,sBAAKrS,UAAU,qBAAf,UACE,qBACEA,UAAU,qDACV+F,MAAO,CAAEC,SAAU,QAAStB,MAAO,QAFrC,SAIE,oDAED,CAAC,YAAa,WAAY,UAAUiN,SAASjF,IAC5C,eAAC6F,EAAA,EAAIvI,UAAL,CAAewI,GAAG,oBAAoBC,iBAAiB,QAAvD,UACE,eAACrC,EAAA,EAAD,WACE,eAACG,EAAA,EAAD,CAAKrJ,QAAQ,OAAOlH,UAAU,sCAA9B,UACE,cAACuQ,EAAA,EAAIC,KAAL,CAAUxQ,UAAU,sBAApB,SACE,eAACuQ,EAAA,EAAIE,KAAL,CAAUxQ,KAAK,YAAY0Q,OAAiB,cAATjE,EAAnC,UACE,cAAC,IAAD,CAAiBlD,KAAM8K,IAAYtU,UAAU,SAD/C,iBAKF,cAACuQ,EAAA,EAAIC,KAAL,CAAUxQ,UAAU,cAApB,SACE,eAACuQ,EAAA,EAAIE,KAAL,CACExQ,KAAK,qBACL0Q,OAAiB,aAATjE,EAFV,UAIE,cAAC,IAAD,CAAiBlD,KAAM+K,IAASvU,UAAU,SAJ5C,gBAQF,cAACuQ,EAAA,EAAIC,KAAL,CAAUxQ,UAAU,sBAApB,SACE,eAACuQ,EAAA,EAAIE,KAAL,CAAUxQ,KAAK,mBAAmB0Q,OAAiB,WAATjE,EAA1C,UACE,cAAC,IAAD,CAAiBlD,KAAMoJ,IAAU5S,UAAU,SAD7C,iBAMJ,oBAAIA,UAAU,oBAEhB,eAACoQ,EAAA,EAAD,WACG,CAAC,YAAa,YAAYuB,SAASjF,IAAyB,OAAhB0H,GAC3C,cAAC7B,EAAA,EAAIM,QAAL,UACE,oBAAI7S,UAAU,+BAAd,SACmB,OAAhBoU,GACCA,EAAYzJ,KAAI,SAACtK,GAAD,OACd,mBAAWJ,KAAI,mBAAcI,GAA7B,SACE,cAAC,EAAD,CAAapE,QAASoE,KADhBA,UAOjB,CAAC,UAAUsR,SAASjF,IACnB,cAAC6F,EAAA,EAAIM,QAAL,UACE,sBAAK7S,UAAU,qBAAf,UACE,cAACgL,EAAA,EAAD,CACEjF,MAAO,CAAEC,SAAU,QAAStB,MAAO,QACnCuB,SAAUmM,EACVpS,UAAU,UAHZ,SAKE,eAAC8S,EAAA,EAAD,CAAY9S,UAAU,OAAtB,UACE,cAAC8S,EAAA,EAAWpM,KAAZ,CAAiB8L,GAAG,eAApB,SACE,cAAC,IAAD,CAAiBhJ,KAAMoJ,QAEb,OAAX7U,GACC,cAACgV,EAAA,EAAD,CACE/S,UAAU,aACV4G,YAAa,wBACbD,MAAO5I,EACPiV,UAAU,OACV1M,SAAU,SAACzB,GACLA,EAAE3E,OAAOyG,MAAMnC,QAAU,IAC3BsN,EAAUjN,EAAE3E,OAAOyG,UAKf,KAAX5I,GACC,cAACmN,EAAA,EAAD,CAAQhE,QAAQ,UAAUb,KAAK,SAA/B,SACE,cAAC,IAAD,CAAiBmD,KAAMyJ,aAK/B,qBAAIjT,UAAU,+BAAd,UACqB,OAAlB+R,GACC,qBAAK/R,UAAU,kBAAf,SACE,mBAAGA,UAAU,qBAAqBoH,UAAU,SAA5C,kEAKe9G,IAAlByR,GACC,qBAAK/R,UAAU,kBAAf,SACE,cAACkT,EAAA,EAAD,CAASlT,UAAU,UAAUoH,UAAU,kBAGxB9G,IAAlByR,GACmB,OAAlBA,GACAA,EAAcpH,KAAI,SAACtK,GAAD,OAChB,mBAAWJ,KAAI,mBAAcI,GAA7B,SACE,cAAC,EAAD,CAAapE,QAASoE,KADhBA,WAIOC,IAAlByR,GACmB,OAAlBA,GACyB,IAAzBA,EAAcvN,QACZ,qBAAKxE,UAAU,kBAAf,SACE,mBAAGA,UAAU,qBAAqBoH,UAAU,SAA5C,qDCsCXoN,MAvLf,WACE,IAAMhI,EAAWC,cAGjB,EAA4B5J,IAAMC,SAAS,IAA3C,mBAAO/E,EAAP,KAAe+T,EAAf,KACA,EAA0CjP,IAAMC,SAAS,MAAzD,mBAAO2R,EAAP,KAAsBC,EAAtB,KACA,EAAoC7R,IAAMC,SAAS,MAAnD,mBAAO6R,EAAP,KAAmBC,EAAnB,KACA,EAAkD/R,IAAMC,SAAS,MAAjE,mBAAO+R,EAAP,KAA0BC,EAA1B,KACA,EAA4CjS,IAAMC,SAAS,MAA3D,mBAAOiS,EAAP,KAAuBC,EAAvB,KAEAnS,IAAMqB,WAAU,WACd,sBAAC,sBAAAnI,EAAA,6DACC+V,EAAU,IAAIK,gBAAgB3F,EAASzO,QAAQsJ,IAAI,UADpD,SAEO4N,EAAsB,QAF7B,0CAAD,KAIC,IAEH,IAAM7C,EAAQ,uCAAG,WAAOvN,GAAP,SAAA9I,EAAA,sDACf8I,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAEQ,KAAlBlH,EAAOsU,QACTnN,OAAOsH,SAAS8F,OAAhB,wBAAwCvU,EAAOsU,SANlC,2CAAH,sDAUR4C,EAAqB,uCAAG,WAAOC,GAAP,eAAAnZ,EAAA,yDAEtBgC,EAAS,IAAIoU,gBAAgB3F,EAASzO,QAAQsJ,IAAI,SAExDqN,EAAiBQ,GAED,SAAZA,GAAqC,OAAfP,EANE,4BAO1BC,EAP0B,SAOLrW,YAAiB,CAAER,OAAQA,IAPtB,mBAOiCyM,SAPjC,wBASZ,gBAAZ0K,GAAmD,OAAtBL,EATL,6BAU1BC,EAV0B,UAWjBjW,YAAwB,CAAEd,OAAQA,IAXjB,oBAW4ByM,SAX5B,yBAcZ,aAAZ0K,GAA6C,OAAnBH,EAdF,6BAe1BC,EAf0B,UAgBjBlX,YAAqB,CAAEC,OAAQA,IAhBd,oBAgByByM,SAhBzB,0DAAH,sDAqB3B,OACE,sBAAKxK,UAAU,qBAAf,UACE,sBACEA,UAAU,qDACV+F,MAAO,CAAEC,SAAU,QAAStB,MAAO,QAFrC,UAIE,qDACA,cAACsG,EAAA,EAAD,CAAM/E,SAAUmM,EAAhB,SACE,eAACU,EAAA,EAAD,CAAY9S,UAAU,OAAtB,UACE,cAAC8S,EAAA,EAAWpM,KAAZ,CAAiB8L,GAAG,eAApB,SACE,cAAC,IAAD,CAAiBhJ,KAAMoJ,QAEb,OAAX7U,GACC,cAACgV,EAAA,EAAD,CACE/S,UAAU,aACV4G,YAAa,wCACbD,MAAO5I,EACPuI,SAAU,SAACzB,GACLA,EAAE3E,OAAOyG,MAAMnC,QAAU,IAC3BsN,EAAUjN,EAAE3E,OAAOyG,UAKf,KAAX5I,GACC,cAACmN,EAAA,EAAD,CAAQhE,QAAQ,UAAUb,KAAK,SAA/B,SACE,cAAC,IAAD,CAAiBmD,KAAMyJ,gBAMjC,eAACV,EAAA,EAAIvI,UAAL,CACEwI,GAAG,oBACH2C,UAAWV,EACXT,SAAUiB,EAHZ,UAKE,eAAC7E,EAAA,EAAD,WACE,eAACG,EAAA,EAAD,CAAKrJ,QAAQ,OAAOlH,UAAU,sCAA9B,UACE,cAACuQ,EAAA,EAAIC,KAAL,CAAUxQ,UAAU,sBAApB,SACE,eAACuQ,EAAA,EAAIE,KAAL,CAAUC,SAAS,OAAnB,UACE,cAAC,IAAD,CAAiBlH,KAAMS,IAAQjK,UAAU,SAD3C,YAKF,cAACuQ,EAAA,EAAIC,KAAL,CAAUxQ,UAAU,cAApB,SACE,eAACuQ,EAAA,EAAIE,KAAL,CAAUC,SAAS,cAAnB,UACE,cAAC,IAAD,CAAiBlH,KAAMkJ,IAAQ1S,UAAU,SAD3C,mBAKF,cAACuQ,EAAA,EAAIC,KAAL,CAAUxQ,UAAU,sBAApB,SACE,eAACuQ,EAAA,EAAIE,KAAL,CAAUC,SAAS,WAAnB,UACE,cAAC,IAAD,CAAiBlH,KAAM4L,IAAcpV,UAAU,SADjD,mBAMJ,oBAAIA,UAAU,oBAEhB,cAACoQ,EAAA,EAAD,UACE,eAACmC,EAAA,EAAIM,QAAL,WACE,cAACN,EAAA,EAAI8C,KAAL,CAAU3E,SAAS,OAAnB,SACE,qBAAI1Q,UAAU,uBAAd,UACkB,OAAf2U,GACC,qBAAK3U,UAAU,kBAAf,SACE,cAACkT,EAAA,EAAD,CAASlT,UAAU,UAAUoH,UAAU,aAG3B,OAAfuN,GACCA,EAAWhK,KAAI,SAACtK,GAAD,OACb,mBAAmBJ,KAAI,eAAUI,GAAjC,SACE,cAAC,EAAD,CAASpE,QAASoE,KADZA,EAAEpE,YAIE,OAAf0Y,GAA6C,IAAtBA,EAAWnQ,QACjC,qBAAKxE,UAAU,kBAAf,SACE,mBAAGA,UAAU,qBAAqBoH,UAAU,SAA5C,qCAOR,cAACmL,EAAA,EAAI8C,KAAL,CAAU3E,SAAS,cAAnB,SACE,qBAAI1Q,UAAU,kCAAd,UACyB,OAAtB6U,GACC,qBAAK7U,UAAU,kBAAf,SACE,cAACkT,EAAA,EAAD,CAASlT,UAAU,UAAUoH,UAAU,aAGpB,OAAtByN,GACCA,EAAkBlK,KAAI,SAACtK,GAAD,OACpB,mBAAWJ,KAAI,sBAAiBI,GAAhC,SACE,cAAC,EAAD,CAAgB1B,OAAQ0B,KADlBA,MAIW,OAAtBwU,GAA2D,IAA7BA,EAAkBrQ,QAC/C,qBAAKxE,UAAU,kBAAf,SACE,mBAAGA,UAAU,qBAAqBoH,UAAU,SAA5C,2CAOR,cAACmL,EAAA,EAAI8C,KAAL,CAAU3E,SAAS,WAAnB,SACE,qBAAI1Q,UAAU,+BAAd,UACsB,OAAnB+U,GACC,qBAAK/U,UAAU,kBAAf,SACE,cAACkT,EAAA,EAAD,CAASlT,UAAU,UAAUoH,UAAU,aAGvB,OAAnB2N,GACCA,EAAepK,KAAI,SAACtK,GAAD,OACjB,mBAAWJ,KAAI,mBAAcI,GAA7B,SACE,cAAC,EAAD,CAAapE,QAASoE,KADhBA,MAIQ,OAAnB0U,GAAqD,IAA1BA,EAAevQ,QACzC,qBAAKxE,UAAU,kBAAf,SACE,mBAAGA,UAAU,qBAAqBoH,UAAU,SAA5C,oD,mBCtML,OAA0B,sC,SCoE1BkO,OA/Df,SAAsB/V,GACpB,IAAMgW,EAAqB1S,IAAM2S,YAC3BC,EAAoB5S,IAAM2S,YAChC,EAA0C3S,IAAMC,UAAS,GAAzD,mBAAO4S,EAAP,KAAsBC,EAAtB,KACA,EAA4C9S,IAAMC,UAAS,GAA3D,mBAAO8S,EAAP,KAAuBC,EAAvB,KAoCA,OACE,sBAAK7V,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,YAAYkJ,IAAKqM,EAAoBO,SArCzC,SAACjR,GAChB,IACMkR,EADYN,EAAkB5M,QAAQmN,SAAS,GACrBC,WAE1BC,EAAWT,EAAkB5M,QAAQmN,SAASP,EAAkB5M,QAAQmN,SAASxR,OAAS,GAC1F2R,EAAgBD,EAASD,WAAaC,EAASE,YAE/CC,EAAad,EAAmB1M,QAAQyN,WACxCC,EAAcF,EAAad,EAAmB1M,QAAQuN,YAE5DT,EAAiBI,EAAgBM,GACjCR,EAAkBM,EAAgBI,IA0B9B,SACE,oBAAIrN,IAAKuM,EAAT,SACGlW,EAAMiX,MAAM7L,KAAI,SAACtK,GAAD,OAAOd,EAAMkX,aAAapW,YAIhDqV,GACC,cAACxK,EAAA,EAAD,CAAQlL,UAAU,qBAAqBqQ,QA9B1B,SAACxL,GAClB,IAAM6R,EAAiBnB,EAAmB1M,QAAQuN,YAC5CO,EAAYlB,EAAkB5M,QAAQmN,SAAS,GAAGI,YAClDQ,EAAcpR,KAAKC,MAAMiR,EAAiBC,GAChDpB,EAAmB1M,QAAQgO,SAAS,CAClCC,MAAOF,EAAcD,EACrBI,SAAU,YAwBR,SACE,cAAC,IAAD,CAAiBvN,KAAMwN,QAG1BpB,GACC,cAAC1K,EAAA,EAAD,CAAQlL,UAAU,sBAAsBqQ,QAzB1B,SAACxL,GACnB,IAAM6R,EAAiBnB,EAAmB1M,QAAQuN,YAC5CO,EAAYlB,EAAkB5M,QAAQmN,SAAS,GAAGI,YAClDQ,EAAcpR,KAAKC,MAAMiR,EAAiBC,GAChDpB,EAAmB1M,QAAQgO,SAAS,CAClCC,KAAMF,EAAcD,EACpBI,SAAU,YAmBR,SACE,cAAC,IAAD,CAAiBvN,KAAMyN,Y,SCiElBC,OAjHf,WACE,MAA4CrU,IAAMC,SAAS,MAA3D,mBAAOqU,EAAP,KAAuBC,EAAvB,KACA,EAA8BvU,IAAMC,SAAS,MAA7C,mBAAOuU,EAAP,KAAgBC,EAAhB,KACA,EAAoCzU,IAAMC,SAAS,MAAnD,mBAAOyU,EAAP,KAAmBC,EAAnB,KA4BA,OA1BA3U,IAAMqB,WAAU,WACd,sBAAC,sBAAAnI,EAAA,kEACCqb,EADD,SAC0BhY,cAD1B,0BAC+DoL,SAD/D,mBAEC8M,EAFD,SAIWpZ,YAAS,CACbC,IAAK,aACLC,UAAW,OACXE,MAAO,GACPD,OAAQ,IARf,0BAUKmM,SAVL,mBAYCgN,EAZD,UAcWtZ,YAAS,CACbC,IAAK,cACLC,UAAW,OACXE,MAAO,GACPD,OAAQ,IAlBf,oBAoBKmM,SApBL,yDAAD,KAuBC,IAGD,sBAAKxK,UAAU,qBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,kBAGnB,oBAAIA,UAAU,sBAAd,oCACA,mBAAGA,UAAU,eAAb,yCACA,sBAAKA,UAAU,+DAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAiBA,UAAU,SAASwJ,KAAMiO,QAE5C,iDACA,4DAA+B,UAA/B,kBAEF,sBAAKzX,UAAU,eAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAiBA,UAAU,SAASwJ,KAAMkO,QAE5C,kDACA,kFAEF,sBAAK1X,UAAU,eAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAiBA,UAAU,SAASwJ,KAAMmO,QAE5C,0DACA,0FAGJ,cAACC,GAAA,EAAD,IACoB,OAAnBT,GACC,sBAAKnX,UAAU,OAAf,UACE,oBAAIA,UAAU,wBAAd,0CACA,cAAC,GAAD,CACEwW,MAAOW,EACPV,aAAc,SAACpW,GAAD,OACZ,6BACE,mBAAGJ,KAAI,sBAAiBI,GAAxB,SACE,cAAC,EAAD,CAAgB1B,OAAQ0B,OAFnBA,SASJ,OAAZgX,GACC,sBAAKrX,UAAU,OAAf,UACE,oBAAIA,UAAU,wBAAd,iCACA,cAAC,GAAD,CACEwW,MAAOa,EACPZ,aAAc,SAACpW,GAAD,OACZ,6BACE,mBAAGJ,KAAI,eAAUI,GAAjB,SACE,cAAC,EAAD,CAASpE,QAASoE,OAFbA,SASD,OAAfkX,GACC,sBAAKvX,UAAU,OAAf,UACE,oBAAIA,UAAU,wBAAd,wCACA,cAAC,GAAD,CACEwW,MAAOe,EACPd,aAAc,SAACpW,GAAD,OACZ,6BACE,mBAAGJ,KAAI,eAAUI,GAAjB,SACE,cAAC,EAAD,CAASpE,QAASoE,OAFbA,aCkERwX,OA/If,WACE,MAAgChV,IAAMC,SAAS,MAA/C,mBAAO0J,EAAP,KAAiBsL,EAAjB,KACAjV,IAAMqB,WAAU,WACd4T,EAAY5S,OAAOsH,SAASG,YAC3B,IACH9J,IAAMqB,WAAU,cAAU,CAACsI,IAE3B,MAAsC3J,IAAMC,SAAS,IAArD,mBAAOiV,EAAP,KAAoBC,EAApB,KACA,EAA8CnV,IAAMC,SAAS,MAA7D,mBAAOmV,EAAP,KAAwBC,EAAxB,KAEM9F,EAAQ,uCAAG,WAAOvN,GAAP,SAAA9I,EAAA,sDACf8I,EAAEC,iBACFD,EAAEE,kBACFF,EAAEG,YAAYC,2BAEa,KAAvB8S,EAAY1F,QACdnN,OAAOsH,SAAS8F,OAAhB,wBAAwCyF,EAAY1F,SANvC,2CAAH,sDAUd,OACE,sBAAKrS,UAAU,MAAf,UACE,eAACmY,EAAA,EAAD,CAAQnY,UAAU,SAASoY,GAAG,OAAOC,OAAO,KAAKC,OAAO,MAAxD,UACE,eAACH,EAAA,EAAOI,MAAR,CAActY,KAAK,IAAID,UAAU,kCAAjC,UACE,qBAAKwY,IAAI,GAAGnP,IAAKoP,KACjB,6CACA,sBAAMzY,UAAU,wBAAhB,8BAEF,cAACmY,EAAA,EAAOlE,OAAR,CAAe,gBAAc,qBAC7B,cAACkE,EAAA,EAAOO,SAAR,UACE,eAACnI,EAAA,EAAD,CAAKvQ,UAAU,UAAf,UACE,cAACgL,EAAA,EAAD,CAAMhL,UAAU,SAASiG,SAAUmM,EAAnC,SACE,eAACU,EAAA,EAAD,CACE/M,MAAO,CACL4S,SAAU,SAFd,UAKE,cAAC5F,EAAA,EAAD,CACE/S,UAAU,aACV4G,YAAa,wCACbD,MAAOoR,EACPzR,SAAU,SAACzB,GACLA,EAAE3E,OAAOyG,MAAMnC,QAAU,IAC3BwT,EAAenT,EAAE3E,OAAOyG,UAIb,KAAhBoR,GACC,cAAC7M,EAAA,EAAD,CAAQhE,QAAQ,YAAYb,KAAK,SAAjC,SACE,cAAC,IAAD,CAAiBmD,KAAMyN,aAK/B,cAAC1G,EAAA,EAAIE,KAAL,CAAUxQ,KAAK,IAAf,SACE,0CAEF,eAAC2Y,GAAA,EAAD,CAAa5Y,UAAU,mBAAmB+K,MAAM,UAAhD,UACE,eAAC6N,GAAA,EAAYpI,KAAb,CAAkBvQ,KAAK,eAAvB,UACE,cAAC,IAAD,CAAiBD,UAAU,cAAcwJ,KAAMyC,MADjD,iBAIA,eAAC2M,GAAA,EAAYpI,KAAb,CAAkBvQ,KAAK,QAAvB,UACE,cAAC,IAAD,CAAiBD,UAAU,cAAcwJ,KAAMS,MADjD,UAIA,eAAC2O,GAAA,EAAYpI,KAAb,CAAkBvQ,KAAK,YAAvB,UACE,cAAC,IAAD,CAAiBD,UAAU,cAAcwJ,KAAM4L,MADjD,iBAKF,cAAC7E,EAAA,EAAIE,KAAL,CAAUxQ,KAAK,UAAf,oBACA,cAACsQ,EAAA,EAAIE,KAAL,CAAUxQ,KAAK,wBAAwBC,OAAO,SAA9C,SACE,6DAMR,yBAASF,UAAU,kBAAnB,SACE,cAAC,KAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6Y,OAAK,EAACC,QAAS,cAAC,GAAD,MACtB,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACE,eAAC,IAAD,CAAOA,KAAK,kBAAkBD,QAAS,cAAC,EAAD,IAAvC,UACE,cAAC,IAAD,CAAOC,KAAK,QAAQD,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOC,KAAK,QAAQD,QAAS,cAAC,EAAD,WAGjC,cAAC,IAAD,CACEC,KAAK,gCACLD,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CAAOC,KAAK,mBAAmBD,QAAS,cAAC,EAAD,MACxC,eAAC,IAAD,CACEC,KAAK,eACLD,QAAS,cAAC,EAAD,IAFX,UAIE,cAAC,IAAD,CAAOC,KAAK,MAAMD,QAAS,cAAC,EAAD,MAC3B,cAAC,IAAD,CAAOC,KAAK,MAAMD,QAAS,cAAC,EAAD,MAC3B,cAAC,IAAD,CAAOC,KAAK,SAASD,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CAAOC,KAAK,QAAQD,QAAS,cAAC,EAAD,IAA7B,SACE,cAAC,IAAD,CAAOC,KAAK,SAASD,QAAS,cAAC,EAAD,QAEhC,eAAC,IAAD,CAAOC,KAAK,YAAYD,QAAS,cAAC,EAAD,IAAjC,UACE,cAAC,IAAD,CAAOC,KAAK,WAAWD,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOC,KAAK,SAASD,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CAAOC,KAAK,UAAUD,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOC,KAAK,UAAUD,QAAS,cAAClW,EAAA,EAAD,MAC/B,cAAC,IAAD,CAAOkW,QAAS,cAAC,IAAD,CAAUE,GAAG,eAInC,kCACE,qBAAKhZ,UAAU,2DAAf,SACE,oFAIJ,eAAC8K,EAAA,EAAD,CACEtL,KAAK,KACLC,UAAQ,EACRC,KAAMuY,EACNtY,OAAQ,kBAAMuY,GAAmB,IAJnC,UAME,cAACpN,EAAA,EAAMlL,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACiL,EAAA,EAAMhL,MAAP,sCAEF,cAACgL,EAAA,EAAM/K,KAAP,UACE,eAACiK,EAAA,EAAD,CAAWhK,UAAU,mBAArB,UACE,kDACA,cAACkL,EAAA,EAAD,CAAQlL,UAAU,OAAOqQ,QAAS,kBAAM6H,GAAmB,IAA3D,+BCrKZe,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,U,gCCN1B,2BAgBexB,IAZf,WACE,OACE,sBAAK5X,UAAU,iBAAf,UACE,qBAAKA,UAAU,kCACf,qBAAKA,UAAU,gCAAf,SACE,cAAC,IAAD,CAAiBwJ,KAAM6P,QAEzB,qBAAKrZ,UAAU,wC","file":"static/js/main.5ca5e34a.chunk.js","sourcesContent":["import { post } from \"./utils\";\n\nconst API_URL = \"https://nftp0.dingocoin.io\";\n\nconst getBusy = async (data) => {\n  const result = await post(`${API_URL}/nft/getBusy`, {\n    address: data.address,\n  });\n  if (result === null) {\n    return null;\n  } else {\n    return result.busy;\n  }\n};\n\nconst getContent = (data) => {\n  return post(`${API_URL}/nft/getContent`, {\n    address: data.address,\n    timestamp: data.timestamp,\n    signature: data.signature,\n  });\n};\n\nconst getBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/getBuyTransaction`, {\n    address: data.address,\n    price: data.price,\n  });\n};\n\nconst sendBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/sendBuyTransaction`, {\n    transaction: data.transaction,\n  });\n};\n\nconst getListTransaction = (data) => {\n  return post(`${API_URL}/nft/getListTransaction`, {\n    contentHash: data.contentHash,\n    price: data.price,\n    royalty: data.royalty,\n  });\n};\n\nconst sendListTransaction = (data) => {\n  return post(`${API_URL}/nft/sendListTransaction`, {\n    content: data.content,\n    preview: data.preview,\n    name: data.name,\n    description: data.description,\n    tags: data.tags,\n    transaction: data.transaction,\n  });\n};\n\nconst updateProfile = (data) => {\n  return post(`${API_URL}/profile/update`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    signature: data.signature,\n  });\n};\n\nconst getProfileCreatedNfts = (data) => {\n  return post(`${API_URL}/profile/getCreatedNfts`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileOwnedNfts = (data) => {\n  return post(`${API_URL}/profile/getOwnedNfts`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileHistoricalNfts = (data) => {\n  return post(`${API_URL}/profile/getHistoricalNfts`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileStats = (data) => {\n  return post(`${API_URL}/profile/getStats`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileCreatedCount = (data) => {\n  return post(`${API_URL}/profile/getCreatedCount`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileCollectionCount = (data) => {\n  return post(`${API_URL}/profile/getCollectionCount`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileHistoricalCount = (data) => {\n  return post(`${API_URL}/profile/getHistoricalCount`, {\n    owner: data.owner,\n  });\n};\n\nconst queryProfileBySearch = (data) => {\n  return post(`${API_URL}/profile/queryBySearch`, {\n    search: data.search,\n  });\n};\n\nconst queryProfileByTradeCount = (data) => {\n  return post(`${API_URL}/profile/queryByTradeCount`, {});\n};\n\nconst queryProfileByEarnings = (data) => {\n  return post(`${API_URL}/profile/queryByEarnings`, {});\n};\n\nconst queryNft = (data) => {\n  return post(`${API_URL}/nft/query`, {\n    key: data.key,\n    direction: data.direction,\n    offset: data.offset,\n    limit: data.limit,\n  });\n};\n\nconst queryNftBySearch = (data) => {\n  return post(`${API_URL}/nft/queryBySearch`, {\n    search: data.search,\n  });\n};\n\nconst queryNftByNewest = (data) => {\n  return post(`${API_URL}/nft/queryByNewest`, {\n    beforeId: data.beforeId,\n  });\n};\n\nconst getCollectionStats = (data) => {\n  return post(`${API_URL}/collection/getStats`, {\n    handle: data.handle,\n  });\n};\n\nconst queryCollectionByOwner = (data) => {\n  return post(`${API_URL}/collection/queryByOwner`, {\n    owner: data.owner,\n  });\n};\n\nconst queryCollectionBySearch = (data) => {\n  return post(`${API_URL}/collection/queryBySearch`, {\n    search: data.search,\n  });\n};\n\nconst queryUnassignedNftsByOwner = (data) => {\n  return post(`${API_URL}/collection/queryUnassignedNftsByOwner`, {\n    owner: data.owner,\n  });\n};\n\nconst createCollection = (data) => {\n  return post(`${API_URL}/collection/create`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    handle: data.handle,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    description: data.description,\n    signature: data.signature,\n  });\n};\n\nconst updateCollection = (data) => {\n  return post(`${API_URL}/collection/update`, {\n    timestamp: data.timestamp,\n    handle: data.handle,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    description: data.description,\n    signature: data.signature,\n  });\n};\n\nconst setCollectionItem = (data) => {\n  return post(`${API_URL}/collection/setItem`, {\n    timestamp: data.timestamp,\n    address: data.address,\n    handle: data.handle,\n    signature: data.signature,\n  });\n};\n\nconst getCollectionItems = (data) => {\n  return post(`${API_URL}/collection/getItems`, {\n    handle: data.handle,\n  });\n};\n\nconst getItemCollection = (data) => {\n  return post(`${API_URL}/collection/getItemCollection`, {\n    address: data.address,\n  });\n};\n\nconst queryCollectionByTradeCountScaled = () => {\n  return post(`${API_URL}/collection/queryByTradeCountScaled`, {});\n};\n\nconst queryCollectionByTradeVolumeScaled = () => {\n  return post(`${API_URL}/collection/queryByTradeVolumeScaled`, {});\n};\n\nconst queryCollectionByTradeVolume = () => {\n  return post(`${API_URL}/collection/queryByTradeVolume`, {});\n};\n\nconst queryCollectionByValuable = () => {\n  return post(`${API_URL}/collection/queryByValuable`, {});\n};\n\nconst getPlatformStats = () => {\n  return post(`${API_URL}/getPlatformStats`, {});\n};\n\nexport {\n  getBusy,\n  getContent,\n  getBuyTransaction,\n  sendBuyTransaction,\n  getListTransaction,\n  sendListTransaction,\n  updateProfile,\n  getProfileCreatedNfts,\n  getProfileOwnedNfts,\n  getProfileHistoricalNfts,\n  getProfileStats,\n  getProfileCreatedCount,\n  getProfileCollectionCount,\n  getProfileHistoricalCount,\n  queryProfileBySearch,\n  queryProfileByTradeCount,\n  queryProfileByEarnings,\n  queryNft,\n  queryNftBySearch,\n  queryNftByNewest,\n  createCollection,\n  updateCollection,\n  getCollectionStats,\n  queryCollectionByOwner,\n  queryCollectionBySearch,\n  queryUnassignedNftsByOwner,\n  setCollectionItem,\n  getCollectionItems,\n  getItemCollection,\n  queryCollectionByTradeCountScaled,\n  queryCollectionByTradeVolumeScaled,\n  queryCollectionByTradeVolume,\n  queryCollectionByValuable,\n  getPlatformStats\n};\n","import { Modal, Container, Button } from \"react-bootstrap\";\nimport React from \"react\";\n\nfunction GetWalletModal(props) {\n  return (\n    <Modal\n      size=\"md\"\n      centered\n      show={props.show}\n      onHide={props.onHide}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Browser Wallet required\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container className=\"text-center my-2\">\n          <p>You need a Dingocoin browser wallet for this.<br/>Set it up in less than a minute.</p>\n          <a className=\"my-1\" href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Chrome wallet</Button>\n          </a>\n          <a className=\"my-1\" href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Firefox wallet</Button>\n          </a>\n        </Container>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default GetWalletModal;\n","/* global BigInt */\n\nimport Web3Utils from \"web3-utils\";\n\nconst toSatoshi = (x) => {\n  if (x === null || x === undefined || typeof x !== \"string\" || x === \"\") {\n    throw new Error(\"Expected string input\");\n  }\n  return (BigInt(Web3Utils.toWei(x, \"gwei\")) / 10n).toString();\n};\n\nconst toLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = BigInt(x).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst satoshiToLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = (BigInt(x) / 100000000n).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst post = async (link, data) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 300000);\n  return (\n    await fetch(link, {\n      withCredentials: true,\n      method: \"POST\",\n      signal: controller.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n  ).json();\n};\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 300000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nexport { toSatoshi, toLocaleString, satoshiToLocaleString, post, get };\n","import { Container, Row, Button, Col, Form, Spinner } from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport isPng from \"is-png\";\nimport sizeOf from \"buffer-image-size\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport { sendListTransaction, getListTransaction } from \"./api\";\nimport { toSatoshi } from \"./utils\";\n\nconst isWebp = (buffer) => {\n  if (!buffer || buffer.length < 12) {\n    return false;\n  }\n\n  return (\n    buffer[0] === 0x52 &&\n    buffer[1] === 0x49 &&\n    buffer[2] === 0x46 &&\n    buffer[3] === 0x46 &&\n    buffer[8] === 0x57 &&\n    buffer[9] === 0x45 &&\n    buffer[10] === 0x42 &&\n    buffer[11] === 0x50\n  );\n};\n\nconst MAX_CONTENT_SIZE = 10 * 1e6; // 10 MB.\nconst MAX_PREVIEW_SIZE = 1 * 1e6; // 1 MB.\n\nconst toBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(\",\")[1]);\n    reader.onerror = (error) => reject(error);\n  });\n\nfunction CreateController() {\n  const [content, setContent] = React.useState(null);\n  const [contentError, setContentError] = React.useState(\"\");\n  const [listingPrice, setListingPrice] = React.useState(\"1000\");\n  const [royalty, setRoyalty] = React.useState(0);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [preview, setPreview] = React.useState(null);\n  const [previewError, setPreviewError] = React.useState(\"\");\n  const [tags, setTags] = React.useState(\"\");\n\n  const [pending, setPending] = React.useState(false);\n  const [success, setSuccess] = React.useState(null);\n  const [address, setAddress] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  React.useEffect(() => {\n    if (content === null) {\n      setContentError(\"NFT content required\");\n      return;\n    } else if (content.size > MAX_CONTENT_SIZE) {\n      setContentError(\"NFT content size limit exceeded (max 10 MB)\");\n      return;\n    } else {\n      setContentError(\"\");\n    }\n  }, [content]);\n\n  React.useEffect(() => {\n    (async () => {\n      if (preview !== null) {\n        const f = Buffer.from(await toBase64(preview), \"base64\");\n        if (!isPng(f) && !isWebp(f)) {\n          setPreviewError(\"Cover thumbnail must be a PNG or WEBP\");\n        } else if (preview.size > MAX_PREVIEW_SIZE) {\n          setPreviewError(\"Cover file size limit exceeded (max 1 MB)\");\n        } else if (sizeOf(f).width !== 256 || sizeOf(f).height !== 256) {\n          setPreviewError(\"Cover thumbnail must have dimension 256x256\");\n        } else {\n          setPreviewError(\"\");\n        }\n      } else {\n        setPreviewError(\"Cover thumbnail required\");\n      }\n    })();\n  }, [preview]);\n\n  const doSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const getListTransactionResponse = await getListTransaction({\n      // CryptoJS expects inputs to be a utf8 string. So we encode our data\n      // into that.\n      contentHash: Hex.stringify(Sha256(Base64.parse(await toBase64(content)))),\n      price: toSatoshi(listingPrice),\n      royalty: 25 + Math.floor((royalty * 75) / 100),\n    });\n    if (\n      getListTransactionResponse === null ||\n      \"error\" in getListTransactionResponse\n    ) {\n      return;\n    }\n\n    const signed = (\n      await window.dingo.requestSignTransaction(\n        [],\n        getListTransactionResponse.vouts\n      )\n    ).result;\n\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    setPending(true);\n    const sendListTransactionResponse = await sendListTransaction({\n      content: await toBase64(content),\n      preview: preview === null ? null : await toBase64(preview),\n      name: name,\n      description: description,\n      tags: tags,\n      transaction: signed,\n    });\n    if (\n      sendListTransactionResponse === null ||\n      sendListTransactionResponse.error !== undefined\n    ) {\n      setSuccess(false);\n      return;\n    }\n\n    setPending(false);\n    setSuccess(true);\n    setAddress(sendListTransactionResponse.address);\n  };\n\n  return (\n    <div>\n      <Container className=\"App-header\">\n        <Row>\n          <h1 className=\"mt-4\">Create NFT</h1>\n          <CustomDivider />\n        </Row>\n      </Container>\n      <Container style={{ maxWidth: \"900px\" }}>\n        <Row>\n          <Col>\n            {(success === null || success === false) && (\n              <Form onSubmit={doSubmit}>\n                <Form.Group className=\"mb-3 mt-4\">\n                  <Form.Label>\n                    <b>Original content (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setContent(e.target.files[0])}\n                    isInvalid={contentError !== null && contentError !== \"\"}\n                    isValid={contentError === \"\"}\n                  />\n                  {contentError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {contentError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    Attach your original work in all it's glory. The NFT will be\n                    locked uniquely to this file (max 10 MB).\n                    <br />\n                    You can only use this file once. Only the current owner of\n                    the NFT can download this file.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Cover thumbnail (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setPreview(e.target.files[0])}\n                    isInvalid={previewError !== null && previewError !== \"\"}\n                    isValid={previewError === \"\"}\n                  />\n                  {previewError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {previewError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    Attach a thumbnail sized version for public display (256x256 PNG or WEBP; max 1 MB).\n                    <br />\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Name (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={name}\n                    placeholder=\"Max 40 characters\"\n                    onChange={(e) => setName(e.target.value)}\n                    isValid={name !== \"\" && name.length <= 40}\n                    isInvalid={name !== \"\" && name.length > 40}\n                  />\n                  {name.length > 40 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Name too long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Description (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={description}\n                    placeholder=\"Max 500 characters\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    isValid={description !== \"\" && description.length <= 500}\n                    isInvalid={description !== \"\" && description.length > 500}\n                  />\n                  {description.length > 500 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Description long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Tags (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={tags}\n                    placeholder=\"Max 100 characters; space separated\"\n                    onChange={(e) => setTags(e.target.value)}\n                    isValid={tags !== \"\" && tags.length <= 100}\n                    isInvalid={tags !== \"\" && tags.length > 100}\n                  />\n                  {tags.length > 100 && (\n                    <div>\n                      <Form.Text className=\"input-error\">Tags long</Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3 mt-2\">\n                  <Form.Label>\n                    <b>Listing price (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={listingPrice}\n                    onChange={(e) => {\n                      if (\n                        e.target.value.match(/^[0-9]+$/) &&\n                        parseInt(e.target.value) >= 1\n                      ) {\n                        setListingPrice(e.target.value);\n                      } else {\n                        setListingPrice(\"1000\");\n                      }\n                    }}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Initial selling price for your NFT in DINGO (min. 1 DINGO).\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Creator royalty (*required): </b>\n                    {(2.5 + Math.floor((royalty * 75) / 100) / 10).toFixed(1) +\n                      \"%\"}\n                  </Form.Label>\n                  <Form.Range\n                    value={royalty}\n                    onChange={(e) => setRoyalty(e.target.value)}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Royalty paid to you for every transaction of this NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <div style={{ textAlign: \"center\" }}>\n                  {success === null && pending === false && (\n                    <Button\n                      className=\"popup-button mt-4 px-4\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                      disabled={\n                        content === null ||\n                        contentError !== \"\" ||\n                        (preview !== null && previewError !== \"\")\n                      }\n                    >\n                      Create NFT\n                    </Button>\n                  )}\n                  {success === null && pending === true && (\n                    <div>\n                      <Spinner animation=\"border\" />\n                      <p>\n                        Transaction pending...\n                        <br />\n                        (DO NOT CLOSE THIS PAGE)\n                      </p>\n                    </div>\n                  )}\n                  {success === false && (\n                    <div>\n                      <p>\n                        Transaction failed!\n                        <br />\n                        Please reload this page and try again\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </Form>\n            )}\n            {success === true && (\n              <div style={{ textAlign: \"center\" }}>\n                {\" \"}\n                <h3>NFT Created!</h3>\n                <p>\n                  NFT Address: <b>{address}</b>\n                </p>\n                <div style={{ textAlign: \"center\" }}>\n                  <a href={\"/nft/\" + address}>\n                    <Button className=\"popup-button px-4\" variant=\"primary\">\n                      View NFT ►\n                    </Button>\n                  </a>\n                </div>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n    </div>\n  );\n}\n\nexport default CreateController;\n","const META_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-meta\";\nconst PREVIEW_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-preview\";\nconst STATE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-state\";\nconst PROFILE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-profile\";\nconst COLLECTION_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-collection\";\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 5000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nconst getMeta = async (address) => {\n  const response = await get(`${META_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getPreviewLink = (address) => {\n  return `${PREVIEW_BUCKET}/${address}.png`;\n};\n\nconst getState = async (address) => {\n  const response = await get(`${STATE_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getProfile = async (owner) => {\n  const response = await get(`${PROFILE_BUCKET}/${owner}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getCollection = async (handle) => {\n  const response = await get(`${COLLECTION_BUCKET}/${handle}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nexport { getMeta, getPreviewLink, getState, getProfile, getCollection };\n","import React from \"react\";\nimport { getMeta, getPreviewLink, getState } from \"./storage\";\nimport { Card } from \"react-bootstrap\";\nimport { satoshiToLocaleString } from \"./utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCashRegister,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction NFTCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [name, setName] = React.useState(null);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const meta = await getMeta(props.address);\n        const previewLink = await getPreviewLink(props.address);\n        const state = await getState(props.address);\n\n        setPreviewLink(previewLink);\n        setName(meta === null ? null : meta.name);\n        setStats(state === null ? null : state.stats);\n      }\n    })();\n  }, [props.address, isVisible]);\n\n  return (\n    <Card\n      className=\"nft-card floating-borders floating-borders-press\"\n      ref={domRef}\n    >\n      <div className=\"header-box\">\n        <div className=\"spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n          </div>\n        </div>\n        <Card.Img variant=\"top\" src={previewLink} loading=\"lazy\"></Card.Img>\n      </div>\n      <hr />\n      <Card.Body>\n        <Card.Title className=\"text-start\">\n          {name === null ? \"-\" : name === \"\" ? \"Unnamed NFT\" : name}\n        </Card.Title>\n        <Card.Subtitle className=\"text-start text-muted\">{props.address}</Card.Subtitle>\n        <Card.Text>\n          <span className=\"card-price\">\n            {stats === null ? \"-\" : satoshiToLocaleString(stats.price)}\n          </span>\n          <br />\n          <span className=\"card-price-subtitle\">DINGO</span>\n        </Card.Text>\n      </Card.Body>\n      <hr />\n      <div className=\"card-sub-body text-muted\">\n        <span className=\"align-middle\">\n          <FontAwesomeIcon icon={faCashRegister} />{\" \"}\n          {stats === null ? \"-\" : satoshiToLocaleString(stats.tradeVolume)}\n        </span>\n        &nbsp;&nbsp;&nbsp;\n        <span className=\"align-middle\">\n          <FontAwesomeIcon icon={faExchangeAlt} />{\" \"}\n          {stats === null ? \"-\" : stats.tradeCount}\n        </span>\n      </div>\n    </Card>\n  );\n}\n\nexport default NFTCard;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { getCollection, getPreviewLink } from \"./storage\";\nimport { getCollectionStats } from \"./api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faCashRegister,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { toLocaleString } from \"./utils\";\n\nfunction CollectionCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [collection, setCollection] = React.useState(null);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const collection = await getCollection(props.handle);\n        setCollection(collection);\n\n        if (collection !== null) {\n          setPreviewLink(getPreviewLink(collection.thumbnail));\n\n          const stats = await getCollectionStats({ handle: props.handle });\n          setStats(stats);\n        }\n      }\n    })();\n  }, [isVisible, props.handle]);\n\n  return (\n    <Container className=\"collection-card-holder\" ref={domRef}>\n      {collection === null ||\n        (stats === null && (\n          <div className=\"collection-card d-flex flex-column\">\n            <div className=\"d-flex flex-row my-auto\">\n              <div className=\"spinner mx-auto\">\n                <div\n                  className=\"spinner-border text-primary\"\n                  role=\"status\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {collection !== null && stats !== null && (\n        <div className=\"collection-card d-flex flex-column\">\n          <img className=\"mx-auto mt-4 mb-3\" src={previewLink} />\n          <span className=\"mx-auto title\">\n            {collection !== null && collection.name}\n          </span>\n          <span className=\"truncate text-muted description\">\n            {collection !== null && collection.description}\n          </span>\n          <hr className=\"mt-auto\" />\n          <div className=\"d-flex flex-row text-muted card-sub-body\">\n            <span className=\"ms-auto\">\n              <FontAwesomeIcon icon={faList} />{\" \"}\n              {stats === null ? \"-\" : stats.count}\n            </span>\n            &nbsp;&nbsp;&nbsp;\n            <span>\n              <FontAwesomeIcon icon={faCashRegister} />{\" \"}\n              {stats === null ? \"-\" : toLocaleString(stats.tradeVolume)}\n            </span>\n            &nbsp;&nbsp;&nbsp;\n            <span className=\"me-auto\">\n              <FontAwesomeIcon icon={faExchangeAlt} />{\" \"}\n              {stats === null ? \"-\" : stats.tradeCount}\n            </span>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default CollectionCard;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getMeta } from \"./storage\";\nimport { getProfileCreatedNfts } from \"./api\";\n\nfunction CreateCollectionModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnail, setThumbnail] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const [handle, setHandle] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.owner !== undefined && props.owner !== null) {\n\n        const createdNfts = (await getProfileCreatedNfts({ owner: props.owner })).results.reverse();\n        if (createdNfts.length > 0) {\n          const createdNftNames = await Promise.all(\n            createdNfts.map(async (x) => {\n              return (await getMeta(x)).name;\n            })\n          );\n          setCreatedNfts(createdNfts.map((x, i) => [x, createdNftNames[i]]));\n          setThumbnail(createdNfts[0]);\n        }\n      }\n    })();\n  }, [props.owner]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                thumbnail: thumbnail,\n                name: name,\n                handle: handle,\n                description: description,\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Thumbnail image (*required)</b>\n            </Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isInvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnail}\n                  onChange={(e) => setThumbnail(e.target.value)}\n                >\n                  {createdNfts.map((x) => (\n                    <option key={x[0]} value={x[0]}>\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection name (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name !== \"\" && name.length <= 40}\n              isInvalid={name === \"\" || name.length > 40}\n            />\n            {name === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Name required</Form.Text>\n              </div>\n            )}\n            {name !== \"\" && name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection handle (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={handle}\n              onChange={(e) => setHandle(e.target.value)}\n              isValid={handle !== \"\" && handle.length <= 40}\n              isInvalid={handle === \"\" || handle.length > 40}\n            />\n            {handle === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Handle required</Form.Text>\n              </div>\n            )}\n            {handle !== \"\" && handle.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Handle too long</Form.Text>\n              </div>\n            )}\n            {handle !== \"\" && !handle.match(/^([a-z0-9])+$/) && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Incorrect handle format (only lowercase alphanumeric\n                  characters allowed)\n                </Form.Text>\n              </div>\n            )}\n            <Form.Text className=\"text-muted\">\n              Used for your collection's permalink. You can't change this after\n              creating the collection.\n            </Form.Text>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Collection description (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 500 characters\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              isValid={description !== \"\" && description.length <= 500}\n              isInvalid={description !== \"\" && description.length > 500}\n            />\n            {description !== \"\" && description.length > 500 && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Description too long\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                thumbnail === null ||\n                name === \"\" ||\n                name.length > 40 ||\n                handle === \"\" ||\n                handle.length > 40 ||\n                description.length > 500\n              }\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default CreateCollectionModal;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getProfileCreatedNfts } from \"./api\";\nimport { getMeta, getCollection } from \"./storage\";\n\nfunction EditCollectionModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnailIndex, setThumbnailIndex] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.handle !== undefined && props.handle !== null) {\n        const collection = await getCollection(props.handle);\n        setName(collection.name);\n        setDescription(collection.description);\n\n        const createdNfts = (await getProfileCreatedNfts({ owner: collection.owner })).results.reverse();\n        if (createdNfts.length > 0) {\n          const createdNftNames = await Promise.all(\n            createdNfts.map(async (x) => {\n              return (await getMeta(x)).name;\n            })\n          );\n          setCreatedNfts(createdNfts.map((x, i) => [x, createdNftNames[i]]));\n\n          const currentThumbnailEntry = createdNfts.map((x, i) => [x, i]).find((x) => x[0] === collection.thumbnail);\n          setThumbnailIndex(currentThumbnailEntry[1]);\n        }\n      }\n    })();\n  }, [props.handle]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                thumbnail: createdNfts[thumbnailIndex][0],\n                name: name,\n                handle: props.handle,\n                description: description\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Thumbnail image (*required)</b>\n            </Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isinvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && thumbnailIndex !== null && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnailIndex}\n                  onChange={(e) => setThumbnailIndex(e.target.value)}\n                >\n                  {createdNfts.map((x, i) => (\n                    <option key={i} value={i} >\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection name (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name !== \"\" && name.length <= 40}\n              isInvalid={name === \"\" || name.length > 40}\n            />\n            {name === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Name required</Form.Text>\n              </div>\n            )}\n            {name !== \"\" && name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Collection description (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 500 characters\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              isValid={description !== \"\" && description.length <= 500}\n              isInvalid={description !== \"\" && description.length > 500}\n            />\n            {description !== \"\" && description.length > 500 && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Description too long\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                thumbnailIndex === null ||\n                name === \"\" ||\n                name.length > 40 ||\n                description.length > 500\n              }\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default EditCollectionModal;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getProfileCreatedNfts } from \"./api\";\nimport { getMeta, getProfile } from \"./storage\";\n\nfunction EditProfileModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnailIndex, setThumbnailIndex] = React.useState(undefined);\n  const [name, setName] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.address !== undefined && props.address !== null) {\n        const profile = await getProfile(props.address);\n        if (profile === null) {\n          setName(\"\");\n        } else {\n          setName(profile.name);\n        }\n\n        const createdNfts = (\n          await getProfileCreatedNfts({ owner: props.address })\n        ).results.reverse();\n\n        let createdNftNames = await Promise.all(\n          createdNfts.map(async (x) => {\n            return (await getMeta(x)).name;\n          })\n        );\n        setCreatedNfts(\n          [[null, \"(No profile image)\"]].concat(\n            createdNfts.map((x, i) => [x, createdNftNames[i]])\n          )\n        );\n\n        const currentThumbnailEntry = [null]\n          .concat(createdNfts)\n          .map((x, i) => [x, i])\n          .find(\n            (x) =>\n              x[0] ===\n              (profile === null || profile.thumbnail === undefined\n                ? null\n                : profile.thumbnail)\n          );\n        setThumbnailIndex(currentThumbnailEntry[1]);\n      }\n    })();\n  }, [props.address]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                address: props.address,\n                thumbnail: createdNfts[thumbnailIndex][0],\n                name: name,\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Profile image (optional)</Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isinvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && thumbnailIndex !== undefined && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnailIndex}\n                  onChange={(e) => setThumbnailIndex(e.target.value)}\n                >\n                  {createdNfts.map((x, i) => (\n                    <option key={i} value={i}>\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Profile name (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name.length <= 40}\n              isInvalid={name.length > 40}\n            />\n            {name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={thumbnailIndex === null || name.length > 40}\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default EditProfileModal;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { getProfile, getPreviewLink } from \"./storage\";\nimport { getProfileCreatedCount, getProfileHistoricalCount, getProfileCollectionCount } from \"./api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faThLarge,\n  faShoppingBag\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ProfileCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [profile, setProfile] = React.useState(undefined);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible && props.address !== null) {\n        const profile = await getProfile(props.address);\n        setProfile(profile);\n\n        if (profile !== null && profile.thumbnail !== null && profile.thumbnail !== undefined) {\n          setPreviewLink(getPreviewLink(profile.thumbnail));\n        }\n\n        setStats( {\n          createdCount: await getProfileCreatedCount({owner: props.address}),\n          collectionCount: await getProfileCollectionCount({owner: props.address}),\n          historicalCount: await getProfileHistoricalCount({owner: props.address})\n        });\n      }\n    })();\n  }, [isVisible, props.address]);\n\n  return (\n    <Container className=\"profile-card-holder\" ref={domRef}>\n      {profile === undefined ||\n        (stats === null && (\n          <div className=\"profile-card d-flex flex-column\">\n            <div className=\"d-flex flex-row my-auto\">\n              <div className=\"spinner mx-auto\">\n                <div\n                  className=\"spinner-border text-primary\"\n                  role=\"status\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {profile !== undefined && stats !== null && (\n        <div className=\"profile-card d-flex flex-row\">\n          <img\n            className=\"my-auto ms-4 me-3\"\n            src={previewLink === null ? getPreviewLink('DP7CwNZ2AwbvYmFU5bQ8m49AUYLeTePsLt') : previewLink}\n          />\n          <div className=\"my-auto d-flex flex-column me-auto\">\n            <span className=\"title text-truncate text-start me-auto ms-0\">\n              {profile !== null && profile.name}\n              {profile === null && <span className=\"text-muted\">Unnamed profile</span>}\n            </span>\n            <div className=\"card-sub-body text-muted me-auto\">\n              <span className=\"ms-auto\">\n                <FontAwesomeIcon icon={faList} />{\" \"}\n                {stats === null ? \"-\" : stats.createdCount}\n              </span>\n              &nbsp;&nbsp;&nbsp;\n              <span>\n                <FontAwesomeIcon icon={faThLarge} />{\" \"}\n                {stats === null ? \"-\" : stats.collectionCount}\n              </span>\n              &nbsp;&nbsp;&nbsp;\n              <span className=\"me-auto\">\n                <FontAwesomeIcon icon={faShoppingBag} />{\" \"}\n                {stats === null ? \"-\" : stats.historicalCount - stats.createdCount}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default ProfileCard;\n","/* global BigInt */\n\nimport {\n  Container,\n  Row,\n  Button,\n  Form,\n  Nav,\n  Dropdown,\n  DropdownButton,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport { getMeta, getState, getProfile } from \"./storage\";\nimport { toSatoshi } from \"./utils\";\nimport NFTCard from \"./NFTCard\";\nimport {\n  getContent,\n  updateProfile,\n  getProfileCreatedNfts,\n  getProfileOwnedNfts,\n  getProfileHistoricalNfts,\n  createCollection,\n  updateCollection,\n  queryCollectionByOwner,\n  queryUnassignedNftsByOwner,\n  getBusy,\n  getCollectionItems,\n  setCollectionItem,\n  getItemCollection,\n  getBuyTransaction,\n  sendBuyTransaction,\n  getProfileStats,\n} from \"./api\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport CollectionCard from \"./CollectionCard\";\nimport CreateCollectionModal from \"./CreateCollectionModal\";\nimport EditCollectionModal from \"./EditCollectionModal\";\nimport EditProfileModal from \"./EditProfileModal\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { getCollection } from \"./storage\";\nimport { faPlus, faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport { satoshiToLocaleString } from \"./utils\";\nimport ProfileCard from \"./ProfileCard\";\n\nfunction ProfileController() {\n  const { profileAddress, collectionHandle, nftAddress } = useParams();\n  const location = useLocation();\n  const view =\n    profileAddress !== undefined\n      ? location.pathname.endsWith(\"/owned\")\n        ? \"profileOwned\"\n        : location.pathname.endsWith(\"/stats\")\n        ? \"profileStats\"\n        : \"profile\"\n      : collectionHandle !== undefined\n      ? \"collection\"\n      : nftAddress !== undefined\n      ? \"nft\"\n      : \"unknown\";\n\n  // Variables always required.\n  const [editProfileShow, setEditProfileShow] = React.useState(null);\n  const [profile, setProfile] = React.useState(null);\n\n  // For profile view.\n  const [createCollectionShow, setCreateCollectionShow] = React.useState(false);\n  const [collections, setCollections] = React.useState(null);\n  const [unassignedList, setUnassignedList] = React.useState(null);\n  const [profileLists, setProfileLists] = React.useState(null);\n  const [profileStats, setProfileStats] = React.useState(null);\n\n  // For collection view.\n  const [collection, setCollection] = React.useState(null);\n  const [collectionItems, setCollectionItems] = React.useState(null);\n  const [editCollectionShow, setEditCollectionShow] = React.useState(false);\n\n  // For NFT view.\n  const [nftMeta, setNftMeta] = React.useState(null);\n  const [nftState, setNftState] = React.useState(null);\n  const [nftItemCollection, setNftItemCollection] = React.useState(undefined);\n  const [nftOwner, setNftOwner] = React.useState(undefined);\n  const [nftBusy, setNftBusy] = React.useState(undefined);\n  const [resellPrice, setResellPrice] = React.useState(\"\");\n  const [resellPriceError, setResellPriceError] = React.useState(\"\");\n  const [buyResult, setBuyResult] = React.useState(null);\n  const [downloadLink, setDownloadLink] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  // Initialize for profile view, commons.\n  React.useEffect(() => {\n    if (view.startsWith(\"profile\")) {\n      (async () => {\n        // Retrieve and set profile.\n        let profile = await getProfile(profileAddress);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = profileAddress;\n        setProfile(profile);\n      })();\n    }\n  }, []);\n\n  // Initialize for profile view (cretions).\n  React.useEffect(() => {\n    if (view === \"profile\") {\n      (async () => {\n        // Retrieve and set collections.\n        const collections = await queryCollectionByOwner({\n          owner: profileAddress,\n        });\n        if (collections !== null) {\n          setCollections(collections.reverse());\n        }\n\n        // Retrieve and set unassigned list.\n        const unassignedList = await queryUnassignedNftsByOwner({\n          owner: profileAddress,\n        });\n        setUnassignedList(unassignedList.reverse());\n      })();\n    }\n  }, []);\n\n  // Initialize for profileOwned view.\n  React.useEffect(() => {\n    if (view === \"profileOwned\") {\n      (async () => {\n        setProfileLists({\n          createdNfts: (\n            await getProfileCreatedNfts({ owner: profileAddress })\n          ).results.reverse(),\n          ownedNfts: (\n            await getProfileOwnedNfts({ owner: profileAddress })\n          ).results.reverse(),\n          historicalNfts: (\n            await getProfileHistoricalNfts({ owner: profileAddress })\n          ).results.reverse(),\n        });\n      })();\n    }\n  }, []);\n\n  // Initialize for profileStats view.\n  React.useEffect(() => {\n    if (view === \"profileStats\") {\n      (async () => {\n        setProfileStats(await getProfileStats({ owner: profileAddress }));\n        console.log(await getProfileStats({ owner: profileAddress }));\n      })();\n    }\n  }, []);\n\n  // Initialize for collection view.\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"collection\") {\n        const collection = await getCollection(collectionHandle);\n        collection.handle = collectionHandle;\n        setCollection(collection);\n        let profile = await getProfile(collection.owner);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = collection.owner;\n        setProfile(profile);\n        setCollectionItems(\n          (await getCollectionItems({ handle: collectionHandle })).reverse()\n        );\n      }\n    })();\n  }, []);\n\n  // Initialize for nft view.\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"nft\") {\n        const nftMeta = await getMeta(nftAddress);\n        setNftMeta(nftMeta);\n        const nftState = await getState(nftAddress);\n        setNftState(nftState);\n\n        const nftItemCollectionHandle = (\n          await getItemCollection({\n            address: nftAddress,\n          })\n        ).handle;\n        if (nftItemCollectionHandle === null) {\n          setNftItemCollection(null);\n        } else {\n          const collection = await getCollection(nftItemCollectionHandle);\n          collection.handle = nftItemCollectionHandle;\n          setNftItemCollection(collection);\n        }\n\n        if (nftState !== null && nftState.owner !== nftState.creator) {\n          let nftOwner = await getProfile(nftState.owner);\n          if (nftOwner === null) {\n            nftOwner = {};\n          }\n          nftOwner.address = nftState.owner;\n          setNftOwner(nftOwner);\n        } else {\n          setNftOwner(null);\n        }\n\n        if (nftState !== null && nftMeta !== null) {\n          let profile = await getProfile(nftState.creator);\n          if (profile === null) {\n            profile = {};\n          }\n          profile.address = nftState.creator;\n          setProfile(profile);\n        }\n\n        setNftBusy(await getBusy({ address: nftAddress }));\n      }\n    })();\n  }, []);\n\n  // Effect for NFT view.\n  React.useEffect(() => {\n    if (resellPrice === \"\") {\n      setResellPriceError(\"Resell price required\");\n    } else if (nftState !== null) {\n      if (\n        BigInt(toSatoshi(resellPrice)) >\n        BigInt(10) * BigInt(nftState.stats.price)\n      ) {\n        setResellPriceError(\n          `Resell price must be at most 10x the current price`\n        );\n      } else {\n        setResellPriceError(\"\");\n      }\n    } else {\n      setResellPriceError(\"\");\n    }\n  }, [resellPrice, nftState]);\n\n  const doEditProfileSubmit = async (profile) => {\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const payload = {\n      timestamp: Date.now(),\n      owner: profileAddress,\n      name: profile.name,\n      thumbnail: profile.thumbnail,\n    };\n    const message = JSON.stringify(payload);\n\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    const updateResult = await updateProfile(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doCreateCollectionSubmit = async (collection) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      owner: profileAddress,\n      handle: collection.handle,\n      name: collection.name,\n      thumbnail: collection.thumbnail,\n      description: collection.description,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await createCollection(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doEditCollectionSubmit = async (collection) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      handle: collection.handle,\n      name: collection.name,\n      thumbnail: collection.thumbnail,\n      description: collection.description,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await updateCollection(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doMove = async (address, handle) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      address: address,\n      handle: handle,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await setCollectionItem(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doDownload = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const timestamp = Date.now();\n    const message = `${nftAddress}|${timestamp}`;\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n\n    const result = await getContent({\n      address: nftAddress,\n      timestamp: timestamp,\n      signature: signResult.result,\n    });\n    if (result === null || result.error !== undefined) {\n      return;\n    }\n\n    if (result.content !== undefined) {\n      setDownloadLink(result.content);\n    }\n  };\n\n  const doBuy = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const { vins, vouts } = await getBuyTransaction({\n      address: nftAddress,\n      price: toSatoshi(resellPrice),\n    });\n    const signed = (await window.dingo.requestSignTransaction(vins, vouts))\n      .result;\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    const result = await sendBuyTransaction({ transaction: signed });\n    setBuyResult(result);\n  };\n\n  return (\n    <div className=\"profile-container justify-content-center mx-auto\">\n      {view.startsWith(\"profile\") && profile !== null && (\n        <Row>\n          <div className=\"profile-section profile-header mt-3 pt-3\">\n            <div className=\"d-flex flex-row\">\n              <span\n                className=\"clickable ms-auto\"\n                onClick={() => setEditProfileShow(true)}\n              >\n                <FontAwesomeIcon className=\"me-1\" icon={faPen} /> Edit\n              </span>\n            </div>\n            <div className=\"d-flex flex-row\">\n              <ul className=\"profile-cards-container mt-4 mx-auto mb-4\">\n                <ProfileCard address={profileAddress} />\n              </ul>\n            </div>\n            <hr />\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs\">\n              <Nav.Item>\n                <Nav.Link\n                  eventKey=\"creations\"\n                  active={\n                    view === \"profile\" ||\n                    view === \"collection\" ||\n                    view === \"nft\"\n                  }\n                  href={`/profile/${profile.address}/`}\n                >\n                  NFT creations\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link\n                  eventKey=\"unassigned\"\n                  active={view === \"profileOwned\"}\n                  href={`/profile/${profile.address}/owned`}\n                >\n                  Owned NFTs\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link\n                  eventKey=\"unassigned\"\n                  active={view === \"profileStats\"}\n                  href={`/profile/${profile.address}/stats`}\n                >\n                  Stats\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n          </div>\n        </Row>\n      )}\n\n      {view === \"profile\" && (\n        <Row>\n          <div className=\"profile-section profile-content mt-3 py-3\">\n            <div className=\"d-flex flex-row content-header\">\n              <span className=\"me-auto content-title accent\">Collections</span>\n              <span\n                className=\"clickable\"\n                onClick={() => setCreateCollectionShow(true)}\n              >\n                <FontAwesomeIcon className=\"me-1\" icon={faPlus} /> Create new\n              </span>\n            </div>\n            {collections !== null && collections.length > 0 && (\n              <ul className=\"collection-cards-container mt-4\">\n                {collections.map((x) => (\n                  <a key={x} href={`/collection/${x}`}>\n                    <CollectionCard handle={x} />\n                  </a>\n                ))}\n              </ul>\n            )}\n            {collections !== null && collections.length === 0 && (\n              <div className=\"d-flex flex-row mt-2 mb-2\">\n                <span className=\"mx-auto text-muted\">\n                  User has no collection\n                </span>\n              </div>\n            )}\n          </div>\n        </Row>\n      )}\n\n      {view === \"profile\" &&\n        unassignedList !== null &&\n        unassignedList.length > 0 && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                <span className=\"me-auto content-title accent\">\n                  Unassigned NFTs\n                </span>\n              </div>\n              <ul className=\"cards-container mt-4\">\n                {unassignedList.map((x) => (\n                  <div key={x}>\n                    <a href={`/nft/${x}`}>\n                      <NFTCard address={x} />\n                    </a>\n                    <DropdownButton\n                      className=\"mt-2 mb-4 px-4\"\n                      title=\"Move to collection\"\n                    >\n                      {collections !== null &&\n                        collections.map((y) => (\n                          <Dropdown.Item key={y} onClick={() => doMove(x, y)}>\n                            {y}\n                          </Dropdown.Item>\n                        ))}\n                    </DropdownButton>\n                  </div>\n                ))}\n              </ul>\n            </div>\n          </Row>\n        )}\n\n      {view === \"profileOwned\" &&\n        profileLists !== null &&\n        profileLists.ownedNfts.filter(\n          (x) => !profileLists.createdNfts.some((y) => y === x)\n        ).length > 0 && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                <span className=\"me-auto content-title accent\">Owned NFTs</span>\n              </div>\n              <ul className=\"cards-container mt-4\">\n                {profileLists.ownedNfts\n                  .filter((x) => !profileLists.createdNfts.some((y) => y === x))\n                  .map((x) => (\n                    <a key={x} href={`/nft/${x}`}>\n                      <NFTCard address={x} />\n                    </a>\n                  ))}\n              </ul>\n            </div>\n          </Row>\n        )}\n\n      {view === \"profileOwned\" &&\n        profileLists !== null &&\n        profileLists.historicalNfts\n          .filter((x) => !profileLists.createdNfts.some((y) => y === x))\n          .filter((x) => !profileLists.ownedNfts.some((y) => y === x)).length >\n          0 && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                <span className=\"me-auto content-title accent\">\n                  Previously owned NFTs\n                </span>\n              </div>\n              <ul className=\"cards-container mt-4\">\n                {profileLists.historicalNfts\n                  .filter((x) => !profileLists.createdNfts.some((y) => y === x))\n                  .filter((x) => !profileLists.ownedNfts.some((y) => y === x))\n                  .map((x) => (\n                    <a key={x} href={`/nft/${x}`}>\n                      <NFTCard address={x} />\n                    </a>\n                  ))}\n              </ul>\n            </div>\n          </Row>\n        )}\n\n      {view === \"profileStats\" && profileStats !== null && (\n        <Row>\n          <div className=\"profile-section profile-content mt-3 py-3\">\n            <div className=\"d-flex flex-row content-header\">\n              <span className=\"me-auto content-title accent\">\n                Profile Stats\n              </span>\n            </div>\n            <div className=\"mt-4 px-2\">\n              <p>\n                <b>NFT creations</b>\n                <ul>\n                  <li>NFTs created: {profileStats.listCount}</li>\n                  <li>Times sold: {profileStats.listSoldCount}</li>\n                  <li>\n                    Total royalties:{\" \"}\n                    {satoshiToLocaleString(profileStats.royaltyVolume)}\n                  </li>\n                </ul>\n              </p>\n\n              <p>\n                <b>Trades</b>\n                <ul>\n                  <li>NFTs bought/sold: {profileStats.tradeCount}</li>\n                  <li>\n                    Total purchases:{\" \"}\n                    {satoshiToLocaleString(profileStats.buyVolume)}\n                  </li>\n                  <li>\n                    Total sales:{\" \"}\n                    {satoshiToLocaleString(profileStats.sellVolume)}\n                  </li>\n                </ul>\n              </p>\n\n              <p>\n                <b>Overall</b>\n                <ul>\n                  <li>\n                    Total Earnings:{\" \"}\n                    {satoshiToLocaleString(\n                      BigInt(profileStats.royaltyVolume) +\n                        BigInt(profileStats.sellVolume) -\n                        BigInt(profileStats.buyVolume)\n                    )}\n                  </li>\n                </ul>\n              </p>\n            </div>\n          </div>\n        </Row>\n      )}\n\n      {view === \"collection\" && collection !== null && (\n        <Row>\n          <div className=\"profile-section profile-content mt-3 py-3\">\n            {profile !== null && (\n              <div className=\"d-flex flex-row content-header\">\n                <div\n                  className=\"text-truncate me-auto\"\n                  style={{ display: \"inline\" }}\n                >\n                  <span className=\"content-title accent\">Collection by: </span>\n                  <a\n                    className=\"simple-link\"\n                    href={`/profile/${profile.address}/`}\n                  >\n                    {profile.name === \"\" ||\n                    profile.name === null ||\n                    profile.name === undefined\n                      ? profile.address\n                      : profile.name}\n                  </a>\n                </div>\n                <span\n                  className=\"clickable ms-auto\"\n                  onClick={() => setEditCollectionShow(true)}\n                >\n                  <nobr>\n                    <FontAwesomeIcon className=\"me-1\" icon={faPen} /> Edit\n                  </nobr>\n                </span>\n              </div>\n            )}\n            <div className=\"d-flex flex-row\">\n              <ul className=\"collection-cards-container mt-4 mx-auto mb-4\">\n                <CollectionCard handle={collectionHandle} />\n              </ul>\n            </div>\n          </div>\n        </Row>\n      )}\n      {view === \"collection\" && collection !== null && (\n        <Row>\n          <div className=\"profile-section profile-content mt-3 py-3\">\n            <ul className=\"cards-container mt-4\">\n              {collectionItems !== null &&\n                collectionItems.map((x) => (\n                  <a key={x} href={`/nft/${x}`}>\n                    <NFTCard address={x} />\n                  </a>\n                ))}\n            </ul>\n          </div>\n        </Row>\n      )}\n\n      {view === \"nft\" &&\n        nftMeta !== null &&\n        nftItemCollection !== undefined &&\n        nftOwner !== undefined && (\n          <Row>\n            <div className=\"profile-section profile-content mt-3 py-3\">\n              <div className=\"d-flex flex-row content-header\">\n                {nftItemCollection === null && profile !== null && (\n                  <div className=\"text-truncate\">\n                    <span className=\"content-title accent\">Created by: </span>\n                    <a\n                      className=\"simple-link\"\n                      href={profile !== null && `/profile/${profile.address}/`}\n                    >\n                      {profile.name === \"\" ||\n                      profile.name === null ||\n                      profile.name === undefined\n                        ? profile.address\n                        : profile.name}\n                    </a>\n                  </div>\n                )}\n                {nftItemCollection !== null && (\n                  <div className=\"text-truncate\">\n                    <span className=\"content-title accent\">\n                      In collection:{\" \"}\n                    </span>\n                    <a\n                      className=\"simple-link\"\n                      href={\n                        profile !== null &&\n                        `/collection/${nftItemCollection.handle}/`\n                      }\n                    >\n                      {nftItemCollection.name}\n                    </a>\n                  </div>\n                )}\n              </div>\n              <div>\n                <ul className=\"cards-container mt-4\">\n                  <NFTCard address={nftAddress} />\n                </ul>\n                {nftOwner !== null && (\n                  <div className=\"text-center mt-4\">\n                    <span className=\"content-title accent\">\n                      <b>Owned by: </b>\n                    </span>\n                    <a\n                      className=\"simple-link\"\n                      href={`/profile/${nftOwner.address}/owned`}\n                    >\n                      {nftOwner.name === \"\" ||\n                      nftOwner.name === null ||\n                      nftOwner.name === undefined\n                        ? nftOwner.address\n                        : nftOwner.name}\n                    </a>\n                  </div>\n                )}\n                <div className=\"text-center mt-4 text-break\">\n                  <span>\n                    <b>{nftMeta.name}</b>\n                  </span>\n                  <p className=\"text-center\">\n                    <i>{nftMeta.description}</i>\n                  </p>\n                </div>\n                {\n                  <div className=\"d-flex flex-row mt-4\">\n                    <span className=\"ms-auto accent\">\n                      <b>Original content:</b>\n                    </span>\n                    &nbsp;\n                    {downloadLink === null && (\n                      <span className=\"me-auto clickable\" onClick={doDownload}>\n                        Verify ownership\n                      </span>\n                    )}\n                    {downloadLink !== null && (\n                      <a\n                        className=\"simple-link me-auto\"\n                        href={downloadLink}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        Link\n                      </a>\n                    )}\n                  </div>\n                }\n              </div>\n            </div>\n          </Row>\n        )}\n\n      {view === \"nft\" && nftMeta !== null && nftItemCollection !== undefined && (\n        <Row>\n          <div className=\"profile-section profile-content mt-3 py-3\">\n            <div className=\"d-flex flex-row content-header\">\n              <span className=\"me-auto content-title accent\">Buy this NFT</span>\n            </div>\n            <div>\n              {nftBusy !== undefined && nftBusy !== null && (\n                <div className=\"mt-4 text-center\">\n                  {\" \"}\n                  <h5>NFT busy</h5>\n                  <p>\n                    <a\n                      className=\"simple-link\"\n                      href={\n                        \"https://openchains.info/coin/dingocoin/tx/\" +\n                        nftBusy.txid\n                      }\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                    >\n                      A transaction\n                    </a>{\" \"}\n                    is currenly being confirmed for this NFT. <br />\n                    Please try again in a few minutes.\n                  </p>\n                </div>\n              )}\n              {nftBusy !== undefined && nftBusy === null && buyResult === null && (\n                <div className=\"d-flex flex-column\">\n                  <div className=\"mt-4 text-center px-4\">\n                    <Form.Group>\n                      <Form.Label>\n                        <b>Resell at (*required)</b>\n                      </Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        value={resellPrice}\n                        onChange={(e) => {\n                          if (e.target.value.match(/^[0-9]*$/)) {\n                            setResellPrice(e.target.value);\n                          }\n                        }}\n                        style={{ textAlign: \"center\" }}\n                        isInvalid={resellPriceError !== \"\"}\n                      />\n                      {resellPriceError && (\n                        <div>\n                          <Form.Text className=\"input-error\">\n                            {resellPriceError}\n                          </Form.Text>\n                        </div>\n                      )}\n                      <Form.Text className=\"text-muted\">\n                        New price you want to sell this NFT for (min. 1\n                        Dingocoin).\n                      </Form.Text>\n                    </Form.Group>\n                  </div>\n                  <div className=\"d-flex flex-row\">\n                    <Button\n                      className=\"popup-button mt-4 mx-auto px-4\"\n                      style={{ width: \"auto\" }}\n                      disabled={resellPriceError !== \"\"}\n                      onClick={doBuy}\n                    >\n                      Buy and resell NFT\n                    </Button>\n                  </div>\n                </div>\n              )}\n              {buyResult !== null && buyResult.error === undefined && (\n                <div className=\"mt-4 text-center\">\n                  {\" \"}\n                  <h4>Transaction submitted!</h4>\n                  <p>\n                    Transaction ID:{\" \"}\n                    <a\n                      className=\"simple-link\"\n                      href={\n                        \"https://openchains.info/coin/dingocoin/tx/\" +\n                        buyResult.txid\n                      }\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                    >\n                      {buyResult.txid}\n                    </a>\n                    <br />\n                    It may take a few minutes for your transaction to be\n                    confirmed.\n                  </p>\n                </div>\n              )}\n              {buyResult !== null && buyResult.error !== undefined && (\n                <div style={{ textAlign: \"center\" }} className=\"mt-4\">\n                  {\" \"}\n                  <h4>Transaction failed!</h4>\n                  <p>\n                    - Make sure that your wallet has no pending transaction.\n                    <br />- You can't buy this NFT as its owner/creator.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        </Row>\n      )}\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n\n      {(view === \"profile\" || view === \"profileOwned\") && (\n        <EditProfileModal\n          title=\"Edit profile\"\n          show={editProfileShow}\n          onHide={() => setEditProfileShow(false)}\n          address={profileAddress}\n          onSubmit={doEditProfileSubmit}\n        />\n      )}\n\n      {view === \"profile\" && (\n        <CreateCollectionModal\n          title=\"Create new collection\"\n          show={createCollectionShow}\n          owner={profileAddress}\n          onHide={() => setCreateCollectionShow(false)}\n          onSubmit={doCreateCollectionSubmit}\n        />\n      )}\n\n      {view === \"collection\" && collection !== null && (\n        <EditCollectionModal\n          title=\"Edit collection\"\n          show={editCollectionShow}\n          handle={collection.handle}\n          onHide={() => setEditCollectionShow(false)}\n          onSubmit={doEditCollectionSubmit}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ProfileController;\n","import {\n  Row,\n  Tab,\n  Nav,\n  Button,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryCollectionByTradeCountScaled,\n  queryCollectionByTradeVolume,\n  queryCollectionBySearch,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport CollectionCard from \"./CollectionCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBolt,\n  faFire,\n  faSearch,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ExploreCollectionsController() {\n  const location = useLocation();\n  let view = location.pathname.split(\"/\").pop();\n  view = [\"top\", \"search\"].includes(view) ? view : \"hot\";\n\n  // For explore view.\n  const [collectionList, setCollectionList] = React.useState(null);\n  const [search, setSearch] = React.useState(\"\");\n  const [searchEntries, setSearchEntries] = React.useState(undefined);\n\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"hot\") {\n        const l = await queryCollectionByTradeCountScaled();\n        setCollectionList(l.results);\n      } else if (view === \"top\") {\n        const l = await queryCollectionByTradeVolume();\n        setCollectionList(l.results);\n      } else if (view === \"search\") {\n        const queryParam = new URLSearchParams(location.search).get(\"query\");\n        if (queryParam === null) {\n          setSearch(\"\");\n          setSearchEntries(null);\n        } else {\n          setSearch(queryParam);\n          setSearchEntries(\n            (await queryCollectionBySearch({ search: queryParam })).results\n          );\n        }\n      }\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/collections/search?query=${search.trim()}`);\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Explore Collections</h1>\n      </div>\n      {[\"hot\", \"top\", \"search\"].includes(view) && (\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <Row>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n              <Nav.Item className=\"ms-auto text-center\">\n                <Nav.Link href=\"/collections/\" active={view === \"hot\"}>\n                  <FontAwesomeIcon icon={faBolt} className=\"me-2\" />\n                  Trending\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"text-center\">\n                <Nav.Link href=\"/collections/top\" active={view === \"top\"}>\n                  <FontAwesomeIcon icon={faFire} className=\"me-2\" />\n                  Top\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto text-center\">\n                <Nav.Link href=\"/collections/search\" active={view === \"search\"}>\n                  <FontAwesomeIcon icon={faSearch} className=\"me-2\" />\n                  Search\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </Row>\n          <Row>\n            {[\"hot\", \"top\"].includes(view) && collectionList !== null && (\n              <Tab.Content>\n                <ul className=\"collection-cards-container mt-4\">\n                  {collectionList.map((x) => (\n                    <a key={x} href={`/collection/${x}`}>\n                      <CollectionCard handle={x} />\n                    </a>\n                  ))}\n                </ul>\n              </Tab.Content>\n            )}\n            {[\"search\"].includes(view) && (\n              <Tab.Content>\n                <div className=\"d-flex flex-column\">\n                  <Form\n                    style={{ maxWidth: \"584px\", width: \"100%\" }}\n                    onSubmit={doSearch}\n                    className=\"mx-auto\"\n                  >\n                    <InputGroup className=\"mt-4\">\n                      <InputGroup.Text id=\"basic-addon1\">\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n                      {search !== null && (\n                        <FormControl\n                          className=\"search-box\"\n                          placeholder={\"Search in collections...\"}\n                          value={search}\n                          autoFocus=\"true\"\n                          onChange={(e) => {\n                            if (e.target.value.length <= 50) {\n                              setSearch(e.target.value);\n                            }\n                          }}\n                        />\n                      )}\n                      {search !== \"\" && (\n                        <Button variant=\"primary\" type=\"submit\">\n                          <FontAwesomeIcon icon={faArrowRight} />\n                        </Button>\n                      )}\n                    </InputGroup>\n                  </Form>\n                  <ul className=\"collection-cards-container mt-4\">\n                    {searchEntries === null && (\n                      <div className=\"d-flex flex-row\">\n                        <p className=\"mx-auto text-muted\" animation=\"border\">\n                          Search in collections using the search box above\n                        </p>\n                      </div>\n                    )}\n                    {searchEntries === undefined && (\n                      <div className=\"d-flex flex-row\">\n                        <Spinner className=\"mx-auto\" animation=\"border\" />\n                      </div>\n                    )}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.map((x) => (\n                        <a key={x} href={`/collection/${x}`}>\n                          <CollectionCard handle={x} />\n                        </a>\n                      ))}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.length === 0 && (\n                        <div className=\"d-flex flex-row\">\n                          <p className=\"mx-auto text-muted\" animation=\"border\">\n                            No matching collection\n                          </p>\n                        </div>\n                      )}\n                  </ul>\n                </div>\n              </Tab.Content>\n            )}\n          </Row>\n        </Tab.Container>\n      )}\n    </div>\n  );\n}\n\nexport default ExploreCollectionsController;\n","import {\n  Row,\n  Tab,\n  Nav,\n  Button,\n  Dropdown,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryNftByNewest,\n  queryNft,\n  queryNftBySearch,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faSearch,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NFTCard from \"./NFTCard\";\n\nfunction ExploreNftsController() {\n  const location = useLocation();\n  let view = location.pathname.split(\"/\").pop();\n  view = [\"search\"].includes(view) ? view : \"all\";\n\n  // For explore view.\n  const [nftList, setNftList] = React.useState(null);\n  const [nftListEnd, setNftListEnd] = React.useState(false);\n  const [queryText, setQueryText] = React.useState(\"Newly listed\");\n  const [search, setSearch] = React.useState(\"\");\n  const [searchEntries, setSearchEntries] = React.useState(undefined);\n\n  const [viewMoreEnabled, setViewMoreEnabled] = React.useState(true);\n\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"all\") {\n        const l = (await queryNftByNewest({ beforeId: null })).results;\n        if (l.length < 100) {\n          setNftListEnd(true);\n        }\n        setNftList(l);\n      } else if (view === \"search\") {\n        const queryParam = new URLSearchParams(location.search).get(\"query\");\n        if (queryParam === null) {\n          setSearch(\"\");\n          setSearchEntries(null);\n        } else {\n          setSearch(queryParam);\n          setSearchEntries(\n            (await queryNftBySearch({ search: queryParam })).results\n          );\n        }\n      }\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/nfts/search?query=${search.trim()}`);\n    }\n  };\n\n  const doChangeQuery = async (eventKey, event) => {\n    const [key, direction] = eventKey.split(\"|\");\n    setQueryText(event.target.innerText);\n\n    setNftListEnd(false);\n    if (key === \"listHeight\") {\n      const l = (await queryNftByNewest({ beforeId: null })).results;\n      if (l.length < 100) {\n        setNftListEnd(true);\n      }\n      setNftList(l);\n      setViewMoreEnabled(true);\n    } else {\n      const l = await queryNft({\n        key: key,\n        direction: direction,\n        limit: 100,\n        offset: 0,\n      });\n      setNftList(\n        l.results.map((x) => {\n          return {\n            address: x,\n          };\n        })\n      );\n      setViewMoreEnabled(false);\n    }\n  };\n\n  const onViewMore = async () => {\n    const l = (\n      await queryNftByNewest({ beforeId: nftList[nftList.length - 1].id })\n    ).results;\n    if (l.length < 100) {\n      setNftListEnd(true);\n    }\n    setNftList(nftList.concat(l));\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Explore Nfts</h1>\n      </div>\n      {[\"all\", \"search\"].includes(view) && (\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <Row>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n              <Nav.Item className=\"ms-auto text-center\">\n                <Nav.Link href=\"/nfts\" active={view === \"all\"}>\n                  <FontAwesomeIcon icon={faList} className=\"me-2\" />\n                  All NFTs\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto text-center\">\n                <Nav.Link href=\"/nfts/search\" active={view === \"search\"}>\n                  <FontAwesomeIcon icon={faSearch} className=\"me-2\" />\n                  Search\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </Row>\n          <Row>\n            {view === \"all\" && (\n              <Tab.Content>\n                <Dropdown\n                  onSelect={doChangeQuery}\n                  style={{ textAlign: \"center\" }}\n                >\n                  <Dropdown.Toggle className=\"px-4 mt-4\">\n                    {queryText}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"listHeight|DESC\">\n                      Newly listed\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeHeight|DESC\">\n                      Recently sold\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"price|DESC\">\n                      Highest price\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"price|ASC\">\n                      Lowest price\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeCount|DESC\">\n                      Highest trade count\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeCount|ASC\">\n                      Lowest trade count\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeVolume|DESC\">\n                      Highest trade volume\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeVolume|ASC\">\n                      Lowest trade volume\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                <ul className=\"cards-container mt-4\">\n                  {nftList !== null &&\n                    nftList.map((x) => (\n                      <a key={x.address} href={`/nft/${x.address}`}>\n                        <NFTCard address={x.address} />\n                      </a>\n                    ))}\n                  {viewMoreEnabled && nftList !== null && !nftListEnd && (\n                    <Button onClick={onViewMore}>View more</Button>\n                  )}\n                </ul>\n              </Tab.Content>\n            )}\n            {[\"search\"].includes(view) && (\n              <Tab.Content>\n                <div className=\"d-flex flex-column\">\n                  <Form\n                    style={{ maxWidth: \"584px\", width: \"100%\" }}\n                    onSubmit={doSearch}\n                    className=\"mx-auto\"\n                  >\n                    <InputGroup className=\"mt-4\">\n                      <InputGroup.Text id=\"basic-addon1\">\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n                      {search !== null && (\n                        <FormControl\n                          autoFocus=\"true\"\n                          className=\"search-box\"\n                          placeholder={\"Search in NFTs...\"}\n                          value={search}\n                          onChange={(e) => {\n                            if (e.target.value.length <= 50) {\n                              setSearch(e.target.value);\n                            }\n                          }}\n                        />\n                      )}\n                      {search !== \"\" && (\n                        <Button variant=\"primary\" type=\"submit\">\n                          <FontAwesomeIcon icon={faArrowRight} />\n                        </Button>\n                      )}\n                    </InputGroup>\n                  </Form>\n                  <ul className=\"cards-container mt-4\">\n                    {searchEntries === null && (\n                      <div className=\"d-flex flex-row\">\n                        <p className=\"mx-auto text-muted\" animation=\"border\">\n                          Search in NFTs using the search box above\n                        </p>\n                      </div>\n                    )}\n                    {searchEntries === undefined && (\n                      <div className=\"d-flex flex-row\">\n                        <Spinner className=\"mx-auto\" animation=\"border\" />\n                      </div>\n                    )}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.map((x) => (\n                        <a key={x.address} href={`/nft/${x}`}>\n                          <NFTCard address={x} />\n                        </a>\n                      ))}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.length === 0 && (\n                        <div className=\"d-flex flex-row\">\n                          <p className=\"mx-auto text-muted\" animation=\"border\">\n                            No matching NFT\n                          </p>\n                        </div>\n                      )}\n                  </ul>\n                </div>\n              </Tab.Content>\n            )}\n          </Row>\n        </Tab.Container>\n      )}\n    </div>\n  );\n}\n\nexport default ExploreNftsController;\n","import {\n  Row,\n  Tab,\n  Nav,\n  Button,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryProfileBySearch,\n  queryProfileByTradeCount,\n  queryProfileByEarnings,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faArrowRight,\n  faBullseye,\n  faCoins,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ProfileCard from \"./ProfileCard\";\n\nfunction ExploreProfilesController() {\n  const location = useLocation();\n  let view = location.pathname.split(\"/\").pop();\n  view = [\"earnings\", \"search\"].includes(view) ? view : \"influence\";\n\n  // For explore view.\n  const [profileList, setProfileList] = React.useState(null);\n  const [search, setSearch] = React.useState(\"\");\n  const [searchEntries, setSearchEntries] = React.useState(undefined);\n\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"influence\") {\n        const l = await queryProfileByTradeCount();\n        setProfileList(l.results);\n      } else if (view === \"earnings\") {\n        const l = await queryProfileByEarnings();\n        setProfileList(l.results);\n      } else if (view === \"search\") {\n        const queryParam = new URLSearchParams(location.search).get(\"query\");\n        if (queryParam === null) {\n          setSearch(\"\");\n          setSearchEntries(null);\n        } else {\n          setSearch(queryParam);\n          setSearchEntries(\n            (await queryProfileBySearch({ search: queryParam })).results\n          );\n        }\n      }\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/profiles/search?query=${search.trim()}`);\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Explore Profiles</h1>\n      </div>\n      {[\"influence\", \"earnings\", \"search\"].includes(view) && (\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <Row>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n              <Nav.Item className=\"ms-auto text-center\">\n                <Nav.Link href=\"/profiles\" active={view === \"influence\"}>\n                  <FontAwesomeIcon icon={faBullseye} className=\"me-2\" />\n                  Influence\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"text-center\">\n                <Nav.Link\n                  href=\"/profiles/earnings\"\n                  active={view === \"earnings\"}\n                >\n                  <FontAwesomeIcon icon={faCoins} className=\"me-2\" />\n                  Earnings\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto text-center\">\n                <Nav.Link href=\"/profiles/search\" active={view === \"search\"}>\n                  <FontAwesomeIcon icon={faSearch} className=\"me-2\" />\n                  Search\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </Row>\n          <Row>\n            {[\"influence\", \"earnings\"].includes(view) && profileList !== null && (\n              <Tab.Content>\n                <ul className=\"profile-cards-container mt-4\">\n                  {profileList !== null &&\n                    profileList.map((x) => (\n                      <a key={x} href={`/profile/${x}`}>\n                        <ProfileCard address={x} />\n                      </a>\n                    ))}\n                </ul>\n              </Tab.Content>\n            )}\n            {[\"search\"].includes(view) && (\n              <Tab.Content>\n                <div className=\"d-flex flex-column\">\n                  <Form\n                    style={{ maxWidth: \"584px\", width: \"100%\" }}\n                    onSubmit={doSearch}\n                    className=\"mx-auto\"\n                  >\n                    <InputGroup className=\"mt-4\">\n                      <InputGroup.Text id=\"basic-addon1\">\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n                      {search !== null && (\n                        <FormControl\n                          className=\"search-box\"\n                          placeholder={\"Search in profiles...\"}\n                          value={search}\n                          autoFocus=\"true\"\n                          onChange={(e) => {\n                            if (e.target.value.length <= 50) {\n                              setSearch(e.target.value);\n                            }\n                          }}\n                        />\n                      )}\n                      {search !== \"\" && (\n                        <Button variant=\"primary\" type=\"submit\">\n                          <FontAwesomeIcon icon={faArrowRight} />\n                        </Button>\n                      )}\n                    </InputGroup>\n                  </Form>\n                  <ul className=\"profile-cards-container mt-4\">\n                    {searchEntries === null && (\n                      <div className=\"d-flex flex-row\">\n                        <p className=\"mx-auto text-muted\" animation=\"border\">\n                          Search in profiles using the search box above\n                        </p>\n                      </div>\n                    )}\n                    {searchEntries === undefined && (\n                      <div className=\"d-flex flex-row\">\n                        <Spinner className=\"mx-auto\" animation=\"border\" />\n                      </div>\n                    )}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.map((x) => (\n                        <a key={x} href={`/profile/${x}`}>\n                          <ProfileCard address={x} />\n                        </a>\n                      ))}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.length === 0 && (\n                        <div className=\"d-flex flex-row\">\n                          <p className=\"mx-auto text-muted\" animation=\"border\">\n                            No matching profile\n                          </p>\n                        </div>\n                      )}\n                  </ul>\n                </div>\n              </Tab.Content>\n            )}\n          </Row>\n        </Tab.Container>\n      )}\n    </div>\n  );\n}\n\nexport default ExploreProfilesController;\n","import {\n  Row,\n  Tab,\n  Nav,\n  Button,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryNftBySearch,\n  queryCollectionBySearch,\n  queryProfileBySearch,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport CollectionCard from \"./CollectionCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBolt,\n  faList,\n  faSearch,\n  faArrowRight,\n  faUserCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NFTCard from \"./NFTCard\";\nimport ProfileCard from \"./ProfileCard\";\n\nfunction SearchController() {\n  const location = useLocation();\n\n  // For search view.\n  const [search, setSearch] = React.useState(\"\");\n  const [searchSubView, setSearchSubView] = React.useState(null);\n  const [searchNfts, setSearchNfts] = React.useState(null);\n  const [searchCollections, setSearchCollections] = React.useState(null);\n  const [searchProfiles, setSearchProfiles] = React.useState(null);\n\n  React.useEffect(() => {\n    (async () => {\n      setSearch(new URLSearchParams(location.search).get(\"query\"));\n      await doChangeSearchSubview(\"nfts\");\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/search?query=${search.trim()}`);\n    }\n  };\n\n  const doChangeSearchSubview = async (subview) => {\n    // TODO: Figure out a more elegant way to retrieve this from the existing react state.\n    const search = new URLSearchParams(location.search).get(\"query\");\n\n    setSearchSubView(subview);\n\n    if (subview === \"nfts\" && searchNfts === null) {\n      setSearchNfts((await queryNftBySearch({ search: search })).results);\n    }\n    if (subview === \"collections\" && searchCollections === null) {\n      setSearchCollections(\n        (await queryCollectionBySearch({ search: search })).results\n      );\n    }\n    if (subview === \"profiles\" && searchProfiles === null) {\n      setSearchProfiles(\n        (await queryProfileBySearch({ search: search })).results\n      );\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Search 🔍</h1>\n        <Form onSubmit={doSearch}>\n          <InputGroup className=\"mt-4\">\n            <InputGroup.Text id=\"basic-addon1\">\n              <FontAwesomeIcon icon={faSearch} />\n            </InputGroup.Text>\n            {search !== null && (\n              <FormControl\n                className=\"search-box\"\n                placeholder={\"Search NFTs, collections, profiles...\"}\n                value={search}\n                onChange={(e) => {\n                  if (e.target.value.length <= 50) {\n                    setSearch(e.target.value);\n                  }\n                }}\n              />\n            )}\n            {search !== \"\" && (\n              <Button variant=\"primary\" type=\"submit\">\n                <FontAwesomeIcon icon={faArrowRight} />\n              </Button>\n            )}\n          </InputGroup>\n        </Form>\n      </div>\n      <Tab.Container\n        id=\"left-tabs-example\"\n        activeKey={searchSubView}\n        onSelect={doChangeSearchSubview}\n      >\n        <Row>\n          <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n            <Nav.Item className=\"ms-auto text-center\">\n              <Nav.Link eventKey=\"nfts\">\n                <FontAwesomeIcon icon={faList} className=\"me-2\" />\n                NFTs\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item className=\"text-center\">\n              <Nav.Link eventKey=\"collections\">\n                <FontAwesomeIcon icon={faBolt} className=\"me-2\" />\n                Collections\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item className=\"me-auto text-center\">\n              <Nav.Link eventKey=\"profiles\">\n                <FontAwesomeIcon icon={faUserCircle} className=\"me-2\" />\n                Profiles\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <hr className=\"light-border\" />\n        </Row>\n        <Row>\n          <Tab.Content>\n            <Tab.Pane eventKey=\"nfts\">\n              <ul className=\"cards-container mt-4\">\n                {searchNfts === null && (\n                  <div className=\"d-flex flex-row\">\n                    <Spinner className=\"mx-auto\" animation=\"border\" />\n                  </div>\n                )}\n                {searchNfts !== null &&\n                  searchNfts.map((x) => (\n                    <a key={x.address} href={`/nft/${x}`}>\n                      <NFTCard address={x} />\n                    </a>\n                  ))}\n                {searchNfts !== null && searchNfts.length === 0 && (\n                  <div className=\"d-flex flex-row\">\n                    <p className=\"mx-auto text-muted\" animation=\"border\">\n                      No matching NFTs\n                    </p>\n                  </div>\n                )}\n              </ul>\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"collections\">\n              <ul className=\"collection-cards-container mt-4\">\n                {searchCollections === null && (\n                  <div className=\"d-flex flex-row\">\n                    <Spinner className=\"mx-auto\" animation=\"border\" />\n                  </div>\n                )}\n                {searchCollections !== null &&\n                  searchCollections.map((x) => (\n                    <a key={x} href={`/collection/${x}`}>\n                      <CollectionCard handle={x} />\n                    </a>\n                  ))}\n                {searchCollections !== null && searchCollections.length === 0 && (\n                  <div className=\"d-flex flex-row\">\n                    <p className=\"mx-auto text-muted\" animation=\"border\">\n                      No matching collection\n                    </p>\n                  </div>\n                )}\n              </ul>\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"profiles\">\n              <ul className=\"profile-cards-container mt-4\">\n                {searchProfiles === null && (\n                  <div className=\"d-flex flex-row\">\n                    <Spinner className=\"mx-auto\" animation=\"border\" />\n                  </div>\n                )}\n                {searchProfiles !== null &&\n                  searchProfiles.map((x) => (\n                    <a key={x} href={`/profile/${x}`}>\n                      <ProfileCard address={x} />\n                    </a>\n                  ))}\n                {searchProfiles !== null && searchProfiles.length === 0 && (\n                  <div className=\"d-flex flex-row\">\n                    <p className=\"mx-auto text-muted\" animation=\"border\">\n                      No matching profile\n                    </p>\n                  </div>\n                )}\n              </ul>\n            </Tab.Pane>\n          </Tab.Content>\n        </Row>\n      </Tab.Container>\n    </div>\n  );\n}\n\nexport default SearchController;\n","export default __webpack_public_path__ + \"static/media/dingocoin.15331900.png\";","import { Button } from \"react-bootstrap\";\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction SideScroller(props) {\n  const scrollContainerRef = React.createRef();\n  const itemsContainerRef = React.createRef();\n  const [canScrollLeft, setCanScrollLeft] = React.useState(false);\n  const [canScrollRight, setCanScrollRight] = React.useState(true);\n\n  const onScroll = (e) => {\n    const firstItem = itemsContainerRef.current.children[0];\n    const firstItemLeft = firstItem.offsetLeft;\n\n    const lastItem = itemsContainerRef.current.children[itemsContainerRef.current.children.length - 1];\n    const lastItemRight = lastItem.offsetLeft + lastItem.offsetWidth;\n\n    const borderLeft = scrollContainerRef.current.scrollLeft;\n    const borderRight = borderLeft + scrollContainerRef.current.offsetWidth;\n\n    setCanScrollLeft(firstItemLeft < borderLeft);\n    setCanScrollRight(lastItemRight > borderRight);\n  };\n\n  const scrollLeft = (e) => {\n    const containerWidth = scrollContainerRef.current.offsetWidth;\n    const itemWidth = itemsContainerRef.current.children[0].offsetWidth;\n    const scrollCount = Math.floor(containerWidth / itemWidth);\n    scrollContainerRef.current.scrollBy({\n      left: -scrollCount * itemWidth,\n      behavior: \"smooth\",\n    });\n  };\n\n  const scrollRight = (e) => {\n    const containerWidth = scrollContainerRef.current.offsetWidth;\n    const itemWidth = itemsContainerRef.current.children[0].offsetWidth;\n    const scrollCount = Math.floor(containerWidth / itemWidth);\n    scrollContainerRef.current.scrollBy({\n      left: scrollCount * itemWidth,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <div className=\"side-scroll\">\n      <div className=\"scroll-off\">\n        <div className=\"scroll-on\" ref={scrollContainerRef} onScroll={onScroll}>\n          <ul ref={itemsContainerRef}>\n            {props.items.map((x) => props.itemTemplate(x))}\n          </ul>\n        </div>\n      </div>\n      {canScrollLeft && (\n        <Button className=\"control float-left\" onClick={scrollLeft}>\n          <FontAwesomeIcon icon={faAngleLeft} />\n        </Button>\n      )}\n      {canScrollRight && (\n        <Button className=\"control float-right\" onClick={scrollRight}>\n          <FontAwesomeIcon icon={faAngleRight} />\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default SideScroller;\n","import React from \"react\";\nimport { queryCollectionByTradeCountScaled, queryNft } from \"./api\";\nimport SideScroller from \"./SideScroller\";\nimport CollectionCard from \"./CollectionCard\";\nimport NFTCard from \"./NFTCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPiggyBank,\n  faLock,\n  faHandHoldingUsd,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CustomDivider from \"./CustomDivider\";\n\nfunction Main() {\n  const [hotCollections, setHotCollections] = React.useState(null);\n  const [newNfts, setNewNfts] = React.useState(null);\n  const [recentNfts, setRecentNfts] = React.useState(null);\n\n  React.useEffect(() => {\n    (async () => {\n      setHotCollections((await queryCollectionByTradeCountScaled()).results);\n      setNewNfts(\n        (\n          await queryNft({\n            key: \"listHeight\",\n            direction: \"DESC\",\n            limit: 50,\n            offset: 0,\n          })\n        ).results\n      );\n      setRecentNfts(\n        (\n          await queryNft({\n            key: \"tradeHeight\",\n            direction: \"DESC\",\n            limit: 50,\n            offset: 0,\n          })\n        ).results\n      );\n    })();\n  }, []);\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div className=\"d-flex flex-row\">\n        <div className=\"isometric-holder\">\n          <div className=\"isometric\"></div>\n        </div>\n      </div>\n      <h1 className=\"mx-auto mt-5 accent\">Dingocoin NFT Platform</h1>\n      <p className=\"mx-auto mb-4\">The next generation of NFTs</p>\n      <div className=\"d-flex flex-row text-center justify-content-center flex-wrap\">\n        <div className=\"project-card\">\n          <div className=\"logo-holder\">\n            <FontAwesomeIcon className=\"faicon\" icon={faPiggyBank} />\n          </div>\n          <h5>Ultra-low Costs</h5>\n          <p>Create and trade NFTs with {\"<$0.001\"} gas fees</p>\n        </div>\n        <div className=\"project-card\">\n          <div className=\"logo-holder\">\n            <FontAwesomeIcon className=\"faicon\" icon={faHandHoldingUsd} />\n          </div>\n          <h5>On-chain Trading</h5>\n          <p>You receive earnings and royalties immediately</p>\n        </div>\n        <div className=\"project-card\">\n          <div className=\"logo-holder\">\n            <FontAwesomeIcon className=\"faicon\" icon={faLock} />\n          </div>\n          <h5>Cryptographically Unique</h5>\n          <p>The same content can never be reused in another NFT</p>\n        </div>\n      </div>\n      <CustomDivider/>\n      {hotCollections !== null && (\n        <div className=\"my-4\">\n          <h2 className=\"accent overview-title\">Hot collections 🔥</h2>\n          <SideScroller\n            items={hotCollections}\n            itemTemplate={(x) => (\n              <li key={x}>\n                <a href={`/collection/${x}`}>\n                  <CollectionCard handle={x} />\n                </a>\n              </li>\n            )}\n          />\n        </div>\n      )}\n      {newNfts !== null && (\n        <div className=\"my-4\">\n          <h2 className=\"accent overview-title\">Newly listed ✨</h2>\n          <SideScroller\n            items={newNfts}\n            itemTemplate={(x) => (\n              <li key={x}>\n                <a href={`/nft/${x}`}>\n                  <NFTCard address={x} />\n                </a>\n              </li>\n            )}\n          />\n        </div>\n      )}\n      {recentNfts !== null && (\n        <div className=\"my-4\">\n          <h2 className=\"accent overview-title\">Recently sold 💰</h2>\n          <SideScroller\n            items={recentNfts}\n            itemTemplate={(x) => (\n              <li key={x}>\n                <a href={`/nft/${x}`}>\n                  <NFTCard address={x} />\n                </a>\n              </li>\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Main;\n","import \"./App.scss\";\nimport CreateController from \"./CreateController\";\nimport ProfileController from \"./ProfileController\";\nimport ExploreCollectionsController from \"./ExploreCollectionsController\";\nimport ExploreNftsController from \"./ExploreNftsController\";\nimport ExploreProfilesController from \"./ExploreProfilesController\";\nimport SearchController from \"./SearchController\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Container,\n  Form,\n  FormControl,\n  Button,\n  Modal,\n  InputGroup,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleRight,\n  faList,\n  faUserCircle,\n  faThLarge,\n  faShoppingBag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport DingocoinLogo from \"./assets/img/dingocoin.png\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from \"react-router-dom\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const [location, setLocation] = React.useState(null);\n  React.useEffect(() => {\n    setLocation(window.location.pathname);\n  }, []);\n  React.useEffect(() => {}, [location]);\n\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [searchErrorShow, setSearchErrorShow] = React.useState(null);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (searchQuery.trim() !== \"\") {\n      window.location.assign(`/search?query=${searchQuery.trim()}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"navbar\" bg=\"dark\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand href=\"/\" className=\"navbar-brand align-items-center\">\n          <img alt=\"\" src={DingocoinLogo} />\n          <span>DINGOCOIN</span>\n          <span className=\"navbar-brand-subtitle\"> NFT Platform</span>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav className=\"ms-auto\">\n            <Form className=\"d-flex\" onSubmit={doSearch}>\n              <InputGroup\n                style={{\n                  minWidth: \"20rem\",\n                }}\n              >\n                <FormControl\n                  className=\"search-box\"\n                  placeholder={\"Search NFTs, collections, profiles...\"}\n                  value={searchQuery}\n                  onChange={(e) => {\n                    if (e.target.value.length <= 50) {\n                      setSearchQuery(e.target.value);\n                    }\n                  }}\n                />\n                {searchQuery !== \"\" && (\n                  <Button variant=\"secondary\" type=\"submit\">\n                    <FontAwesomeIcon icon={faAngleRight}></FontAwesomeIcon>\n                  </Button>\n                )}\n              </InputGroup>\n            </Form>\n            <Nav.Link href=\"/\">\n              <nobr>Home</nobr>\n            </Nav.Link>\n            <NavDropdown className=\"navbar-important\" title=\"Explore\">\n              <NavDropdown.Item href=\"/collections\">\n                <FontAwesomeIcon className=\"me-2 accent\" icon={faThLarge} />\n                Collections\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"/nfts\">\n                <FontAwesomeIcon className=\"me-2 accent\" icon={faList} />\n                NFTs\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"/profiles\">\n                <FontAwesomeIcon className=\"me-2 accent\" icon={faUserCircle} />\n                Profiles\n              </NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link href=\"/create\">Create</Nav.Link>\n            <Nav.Link href=\"https://dingocoin.org\" target=\"_blank\">\n              <nobr>Visit Dingocoin</nobr>\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <section className=\"section-content\">\n        <Router>\n          <Routes>\n            <Route index element={<Main />} />\n            <Route path=\"/profile\">\n              <Route path=\":profileAddress\" element={<ProfileController />}>\n                <Route path=\"owned\" element={<ProfileController />} />\n                <Route path=\"stats\" element={<ProfileController />} />\n              </Route>\n            </Route>\n            <Route\n              path=\"/collection/:collectionHandle\"\n              element={<ProfileController />}\n            />\n            <Route path=\"/nft/:nftAddress\" element={<ProfileController />} />\n            <Route\n              path=\"/collections\"\n              element={<ExploreCollectionsController />}\n            >\n              <Route path=\"hot\" element={<ExploreCollectionsController />} />\n              <Route path=\"top\" element={<ExploreCollectionsController />} />\n              <Route path=\"search\" element={<ExploreCollectionsController />} />\n            </Route>\n            <Route path=\"/nfts\" element={<ExploreNftsController />}>\n              <Route path=\"search\" element={<ExploreNftsController />} />\n            </Route>\n            <Route path=\"/profiles\" element={<ExploreProfilesController />}>\n              <Route path=\"earnings\" element={<ExploreProfilesController />} />\n              <Route path=\"search\" element={<ExploreProfilesController />} />\n            </Route>\n            <Route path=\"/search\" element={<SearchController />} />\n            <Route path=\"/create\" element={<CreateController />} />\n            <Route element={<Navigate to=\"/\" />} />\n          </Routes>\n        </Router>\n      </section>\n      <section>\n        <div className=\"justify-content-center section-footer align-items-center\">\n          <h6>Copyright © The Dingocoin Project 2021-2022</h6>\n        </div>\n      </section>\n\n      <Modal\n        size=\"md\"\n        centered\n        show={searchErrorShow}\n        onHide={() => setSearchErrorShow(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>NFT/profile not found</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container className=\"text-center my-2\">\n            <p>No results found.</p>\n            <Button className=\"mx-2\" onClick={() => setSearchErrorShow(false)}>\n              Close\n            </Button>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n","// Assets.\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CustomDivider() {\n  return (\n    <div className=\"divider-custom\">\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n      <div className=\"divider-custom-icon mt-2 mb-2\">\n        <FontAwesomeIcon icon={faAngleDown} />\n      </div>\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n    </div>\n  );\n}\n\nexport default CustomDivider;\n"],"sourceRoot":""}