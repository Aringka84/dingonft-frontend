{"version":3,"sources":["api.js","utils.js","CreateController.jsx","storage.js","NFTCard.jsx","CollectionCard.jsx","CreateCollectionModal.jsx","EditCollectionModal.jsx","EditProfileModal.jsx","ProfileCard.jsx","ProfileController.jsx","ExploreCollectionsController.jsx","ExploreNftsController.jsx","ExploreProfilesController.jsx","SearchController.jsx","assets/img/dingocoin.png","SideScroller.jsx","FadeInSection.jsx","Main.jsx","App.jsx","index.jsx","CustomDivider.jsx","GetWalletModal.jsx"],"names":["API_URL","getBusy","data","a","post","address","result","busy","getContent","timestamp","signature","getBuyTransaction","price","sendBuyTransaction","transaction","getRepriceTransaction","sendRepriceTransaction","getListTransaction","contentHash","royalty","sendListTransaction","content","preview","name","description","tags","updateProfile","owner","thumbnail","getProfileCreatedNfts","getProfileOwnedNfts","getProfileHistoricalNfts","getProfileStats","getProfileCreatedCount","getProfileCollectionCount","getProfileHistoricalCount","queryProfileBySearch","search","queryProfileByTradeCount","queryProfileByEarnings","queryNft","key","direction","offset","limit","queryNftBySearch","queryNftByNewest","beforeId","getCollectionStats","handle","queryCollectionByOwner","queryCollectionBySearch","queryUnassignedNftsByOwner","createCollection","updateCollection","setCollectionItem","getCollectionItems","getItemCollection","queryCollectionByTradeCountScaled","queryCollectionByTradeVolume","getPlatformStats","toSatoshi","x","undefined","Error","BigInt","Web3Utils","toWei","toString","toLocaleString","isNegative","integer","replace","satoshiToLocaleString","link","controller","AbortController","setTimeout","abort","fetch","withCredentials","method","signal","headers","Accept","body","JSON","stringify","json","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","split","onerror","error","CreateController","React","useState","setContent","contentError","setContentError","listingPrice","setListingPrice","setRoyalty","setName","setDescription","setPreview","previewError","setPreviewError","setTags","pending","setPending","success","setSuccess","setError","setAddress","getWalletShow","setGetWalletShow","useEffect","size","Buffer","f","from","isPng","buffer","length","sizeOf","width","height","doSubmit","e","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","window","dingo","Hex","Sha256","Base64","parse","Math","floor","getListTransactionResponse","requestSignTransaction","vouts","signed","sendListTransactionResponse","className","style","maxWidth","onSubmit","Group","Label","Control","type","onChange","target","files","isInvalid","isValid","Text","value","placeholder","match","parseInt","toFixed","Range","textAlign","variant","disabled","animation","href","show","onHide","get","getMeta","response","status","getPreviewLink","getState","getProfile","getCollection","NFTCard","props","domRef","useRef","isVisible","setVisible","previewLink","setPreviewLink","stats","setStats","collection","setCollection","profile","setProfile","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","meta","state","collectionHandle","creator","Card","ref","role","Img","src","loading","Body","Title","Subtitle","icon","faCashRegister","tradeVolume","faExchangeAlt","tradeCount","CollectionCard","Container","faList","count","CreateCollectionModal","createdNfts","setCreatedNfts","setThumbnail","setHandle","results","reverse","all","map","createdNftNames","i","Modal","centered","Header","closeButton","title","Form","Select","Button","EditCollectionModal","thumbnailIndex","setThumbnailIndex","currentThumbnailEntry","find","isinvalid","EditProfileModal","concat","ProfileCard","createdCount","collectionCount","historicalCount","faThLarge","faShoppingBag","ProfileController","useParams","profileAddress","nftAddress","location","useLocation","view","pathname","endsWith","editProfileShow","setEditProfileShow","createCollectionShow","setCreateCollectionShow","collections","setCollections","unassignedList","setUnassignedList","profileLists","setProfileLists","profileStats","setProfileStats","collectionItems","setCollectionItems","editCollectionShow","setEditCollectionShow","nftMeta","setNftMeta","nftState","setNftState","nftItemCollection","setNftItemCollection","nftOwner","setNftOwner","nftBusy","setNftBusy","resellPrice","setResellPrice","resellPriceError","setResellPriceError","buyResult","setBuyResult","repricePrice","setRepricePrice","repricePriceError","setRepricePriceError","repriceResult","setRepriceResult","downloadLink","setDownloadLink","startsWith","ownedNfts","historicalNfts","console","log","nftItemCollectionHandle","doEditProfileSubmit","payload","Date","now","message","requestSign","signResult","reload","doCreateCollectionSubmit","doEditCollectionSubmit","doMove","doDownload","doBuy","vins","doReprice","onClick","faPen","Nav","Item","Link","eventKey","active","faPlus","DropdownButton","y","Dropdown","filter","some","listCount","listSoldCount","royaltyVolume","buyVolume","sellVolume","display","Image","Spinner","rel","tradeHeight","listHeight","txid","GetWalletModal","ExploreCollectionsController","pop","includes","collectionList","setCollectionList","setSearch","searchEntries","setSearchEntries","l","queryParam","URLSearchParams","doSearch","trim","assign","Tab","id","defaultActiveKey","faBolt","faFire","faSearch","Content","InputGroup","FormControl","autoFocus","faArrowRight","ExploreNftsController","nftList","setNftList","nftListEnd","setNftListEnd","queryText","setQueryText","viewMoreEnabled","setViewMoreEnabled","doChangeQuery","event","innerText","onViewMore","onSelect","Toggle","Menu","ExploreProfilesController","profileList","setProfileList","faBullseye","faCoins","SearchController","searchSubView","setSearchSubView","searchNfts","setSearchNfts","searchCollections","setSearchCollections","searchProfiles","setSearchProfiles","doChangeSearchSubview","subview","activeKey","faUserCircle","Pane","SideScroller","scrollContainerRef","createRef","itemsContainerRef","canScrollLeft","setCanScrollLeft","canScrollRight","setCanScrollRight","onScroll","firstItemLeft","children","offsetLeft","lastItem","lastItemRight","offsetWidth","borderLeft","scrollLeft","borderRight","items","defaultHeight","itemTemplate","containerWidth","itemWidth","scrollCount","scrollBy","left","behavior","faAngleLeft","faAngleRight","FadeInSection","Main","platformStats","setPlatformStats","hotCollections","setHotCollections","newNfts","setNewNfts","recentNfts","setRecentNfts","faPiggyBank","faHandHoldingUsd","faLock","totalVolume","CustomDivider","faWallet","faChevronDown","App","setLocation","searchQuery","setSearchQuery","searchErrorShow","setSearchErrorShow","Navbar","bg","expand","sticky","Brand","alt","DingocoinLogo","Collapse","minWidth","as","NavItem","NavLink","index","element","path","to","ReactDOM","render","document","getElementById","faAngleDown"],"mappings":"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","file":"static/js/main.d2f1b60d.chunk.js","sourcesContent":["import { post } from \"./utils\";\n\nconst API_URL = \"https://nftp0.dingocoin.io\";\n//const API_URL = \"http://localhost:33332\";\n\nconst getBusy = async (data) => {\n  const result = await post(`${API_URL}/nft/getBusy`, {\n    address: data.address,\n  });\n  if (result === null) {\n    return null;\n  } else {\n    return result.busy;\n  }\n};\n\nconst getContent = (data) => {\n  return post(`${API_URL}/nft/getContent`, {\n    address: data.address,\n    timestamp: data.timestamp,\n    signature: data.signature,\n  });\n};\n\nconst getBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/getBuyTransaction`, {\n    address: data.address,\n    price: data.price,\n  });\n};\n\nconst sendBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/sendBuyTransaction`, {\n    transaction: data.transaction,\n  });\n};\n\nconst getRepriceTransaction = (data) => {\n  return post(`${API_URL}/nft/getRepriceTransaction`, {\n    address: data.address,\n    price: data.price,\n  });\n};\n\nconst sendRepriceTransaction = (data) => {\n  return post(`${API_URL}/nft/sendRepriceTransaction`, {\n    transaction: data.transaction,\n  });\n};\n\nconst getListTransaction = (data) => {\n  return post(`${API_URL}/nft/getListTransaction`, {\n    contentHash: data.contentHash,\n    price: data.price,\n    royalty: data.royalty,\n  });\n};\n\nconst sendListTransaction = (data) => {\n  return post(`${API_URL}/nft/sendListTransaction`, {\n    content: data.content,\n    preview: data.preview,\n    name: data.name,\n    description: data.description,\n    tags: data.tags,\n    transaction: data.transaction,\n  });\n};\n\nconst updateProfile = (data) => {\n  return post(`${API_URL}/profile/update`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    signature: data.signature,\n  });\n};\n\nconst getProfileCreatedNfts = (data) => {\n  return post(`${API_URL}/profile/getCreatedNfts`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileOwnedNfts = (data) => {\n  return post(`${API_URL}/profile/getOwnedNfts`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileHistoricalNfts = (data) => {\n  return post(`${API_URL}/profile/getHistoricalNfts`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileStats = (data) => {\n  return post(`${API_URL}/profile/getStats`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileCreatedCount = (data) => {\n  return post(`${API_URL}/profile/getCreatedCount`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileCollectionCount = (data) => {\n  return post(`${API_URL}/profile/getCollectionCount`, {\n    owner: data.owner,\n  });\n};\n\nconst getProfileHistoricalCount = (data) => {\n  return post(`${API_URL}/profile/getHistoricalCount`, {\n    owner: data.owner,\n  });\n};\n\nconst queryProfileBySearch = (data) => {\n  return post(`${API_URL}/profile/queryBySearch`, {\n    search: data.search,\n  });\n};\n\nconst queryProfileByTradeCount = (data) => {\n  return post(`${API_URL}/profile/queryByTradeCount`, {});\n};\n\nconst queryProfileByEarnings = (data) => {\n  return post(`${API_URL}/profile/queryByEarnings`, {});\n};\n\nconst queryNft = (data) => {\n  return post(`${API_URL}/nft/query`, {\n    key: data.key,\n    direction: data.direction,\n    offset: data.offset,\n    limit: data.limit,\n  });\n};\n\nconst queryNftBySearch = (data) => {\n  return post(`${API_URL}/nft/queryBySearch`, {\n    search: data.search,\n  });\n};\n\nconst queryNftByNewest = (data) => {\n  return post(`${API_URL}/nft/queryByNewest`, {\n    beforeId: data.beforeId,\n  });\n};\n\nconst getCollectionStats = (data) => {\n  return post(`${API_URL}/collection/getStats`, {\n    handle: data.handle,\n  });\n};\n\nconst queryCollectionByOwner = (data) => {\n  return post(`${API_URL}/collection/queryByOwner`, {\n    owner: data.owner,\n  });\n};\n\nconst queryCollectionBySearch = (data) => {\n  return post(`${API_URL}/collection/queryBySearch`, {\n    search: data.search,\n  });\n};\n\nconst queryUnassignedNftsByOwner = (data) => {\n  return post(`${API_URL}/collection/queryUnassignedNftsByOwner`, {\n    owner: data.owner,\n  });\n};\n\nconst createCollection = (data) => {\n  return post(`${API_URL}/collection/create`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    handle: data.handle,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    description: data.description,\n    signature: data.signature,\n  });\n};\n\nconst updateCollection = (data) => {\n  return post(`${API_URL}/collection/update`, {\n    timestamp: data.timestamp,\n    handle: data.handle,\n    name: data.name,\n    thumbnail: data.thumbnail,\n    description: data.description,\n    signature: data.signature,\n  });\n};\n\nconst setCollectionItem = (data) => {\n  return post(`${API_URL}/collection/setItem`, {\n    timestamp: data.timestamp,\n    address: data.address,\n    handle: data.handle,\n    signature: data.signature,\n  });\n};\n\nconst getCollectionItems = (data) => {\n  return post(`${API_URL}/collection/getItems`, {\n    handle: data.handle,\n  });\n};\n\nconst getItemCollection = (data) => {\n  return post(`${API_URL}/collection/getItemCollection`, {\n    address: data.address,\n  });\n};\n\nconst queryCollectionByTradeCountScaled = (limit) => {\n  return post(`${API_URL}/collection/queryByTradeCountScaled`, {\n    limit: limit,\n  });\n};\n\nconst queryCollectionByTradeVolumeScaled = () => {\n  return post(`${API_URL}/collection/queryByTradeVolumeScaled`, {});\n};\n\nconst queryCollectionByTradeVolume = () => {\n  return post(`${API_URL}/collection/queryByTradeVolume`, {});\n};\n\nconst queryCollectionByValuable = () => {\n  return post(`${API_URL}/collection/queryByValuable`, {});\n};\n\nconst getPlatformStats = () => {\n  return post(`${API_URL}/getPlatformStats`, {});\n};\n\nexport {\n  getBusy,\n  getContent,\n  getBuyTransaction,\n  sendBuyTransaction,\n  getRepriceTransaction,\n  sendRepriceTransaction,\n  getListTransaction,\n  sendListTransaction,\n  updateProfile,\n  getProfileCreatedNfts,\n  getProfileOwnedNfts,\n  getProfileHistoricalNfts,\n  getProfileStats,\n  getProfileCreatedCount,\n  getProfileCollectionCount,\n  getProfileHistoricalCount,\n  queryProfileBySearch,\n  queryProfileByTradeCount,\n  queryProfileByEarnings,\n  queryNft,\n  queryNftBySearch,\n  queryNftByNewest,\n  createCollection,\n  updateCollection,\n  getCollectionStats,\n  queryCollectionByOwner,\n  queryCollectionBySearch,\n  queryUnassignedNftsByOwner,\n  setCollectionItem,\n  getCollectionItems,\n  getItemCollection,\n  queryCollectionByTradeCountScaled,\n  queryCollectionByTradeVolumeScaled,\n  queryCollectionByTradeVolume,\n  queryCollectionByValuable,\n  getPlatformStats,\n};\n","/* global BigInt */\n\nimport Web3Utils from \"web3-utils\";\n\nconst toSatoshi = (x) => {\n  if (x === null || x === undefined || typeof x !== \"string\" || x === \"\") {\n    throw new Error(\"Expected string input\");\n  }\n  return (BigInt(Web3Utils.toWei(x, \"gwei\")) / 10n).toString();\n};\n\nconst toLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = BigInt(x).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst satoshiToLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = (BigInt(x) / 100000000n).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst post = async (link, data) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 300000);\n  return (\n    await fetch(link, {\n      withCredentials: true,\n      method: \"POST\",\n      signal: controller.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n  ).json();\n};\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 300000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nexport { toSatoshi, toLocaleString, satoshiToLocaleString, post, get };\n","import { Container, Row, Button, Col, Form, Spinner } from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport isPng from \"is-png\";\nimport sizeOf from \"buffer-image-size\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport { sendListTransaction, getListTransaction } from \"./api\";\nimport { toSatoshi } from \"./utils\";\n\nconst isWebp = (buffer) => {\n  if (!buffer || buffer.length < 12) {\n    return false;\n  }\n\n  return (\n    buffer[0] === 0x52 &&\n    buffer[1] === 0x49 &&\n    buffer[2] === 0x46 &&\n    buffer[3] === 0x46 &&\n    buffer[8] === 0x57 &&\n    buffer[9] === 0x45 &&\n    buffer[10] === 0x42 &&\n    buffer[11] === 0x50\n  );\n};\n\nconst MAX_CONTENT_SIZE = 10 * 1e6; // 10 MB.\nconst MAX_PREVIEW_SIZE = 1 * 1e6; // 1 MB.\n\nconst toBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(\",\")[1]);\n    reader.onerror = (error) => reject(error);\n  });\n\nfunction CreateController() {\n  const [content, setContent] = React.useState(null);\n  const [contentError, setContentError] = React.useState(\"\");\n  const [listingPrice, setListingPrice] = React.useState(\"1000\");\n  const [royalty, setRoyalty] = React.useState(0);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [preview, setPreview] = React.useState(null);\n  const [previewError, setPreviewError] = React.useState(\"\");\n  const [tags, setTags] = React.useState(\"\");\n\n  const [pending, setPending] = React.useState(false);\n  const [success, setSuccess] = React.useState(null);\n  const [error, setError] = React.useState(\"\");\n  const [address, setAddress] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  React.useEffect(() => {\n    if (content === null) {\n      setContentError(\"NFT content required\");\n      return;\n    } else if (content.size > MAX_CONTENT_SIZE) {\n      setContentError(\"NFT content size limit exceeded (max 10 MB)\");\n      return;\n    } else {\n      setContentError(\"\");\n    }\n  }, [content]);\n\n  React.useEffect(() => {\n    (async () => {\n      if (preview !== null) {\n        const f = Buffer.from(await toBase64(preview), \"base64\");\n        if (!isPng(f) && !isWebp(f)) {\n          setPreviewError(\"Cover thumbnail must be a PNG or WEBP\");\n        } else if (preview.size > MAX_PREVIEW_SIZE) {\n          setPreviewError(\"Cover file size limit exceeded (max 1 MB)\");\n        } else if (sizeOf(f).width === 0 || sizeOf(f).width !== sizeOf(f).height) {\n          setPreviewError(\"Cover thumbnail must have equal width and height\");\n        } else {\n          setPreviewError(\"\");\n        }\n      } else {\n        setPreviewError(\"Cover thumbnail required\");\n      }\n    })();\n  }, [preview]);\n\n  const doSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const getListTransactionResponse = await getListTransaction({\n      // CryptoJS expects inputs to be a utf8 string. So we encode our data\n      // into that.\n      contentHash: Hex.stringify(Sha256(Base64.parse(await toBase64(content)))),\n      price: toSatoshi(listingPrice),\n      royalty: 25 + Math.floor((royalty * 75) / 100),\n    });\n    if (\n      getListTransactionResponse === null ||\n      \"error\" in getListTransactionResponse\n    ) {\n      return;\n    }\n\n    const signed = (\n      await window.dingo.requestSignTransaction(\n        [],\n        getListTransactionResponse.vouts\n      )\n    ).result;\n\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    setPending(true);\n    const sendListTransactionResponse = await sendListTransaction({\n      content: await toBase64(content),\n      preview: preview === null ? null : await toBase64(preview),\n      name: name,\n      description: description,\n      tags: tags,\n      transaction: signed,\n    });\n    if (\n      sendListTransactionResponse === null ||\n      sendListTransactionResponse.error !== undefined\n    ) {\n      setSuccess(false);\n      setError(sendListTransactionResponse.error);\n      return;\n    }\n\n    setPending(false);\n    setSuccess(true);\n    setError(\"\");\n    setAddress(sendListTransactionResponse.address);\n  };\n\n  return (\n    <div>\n      <Container className=\"App-header\">\n        <Row>\n          <h1 className=\"mt-4\">Create NFT</h1>\n          <CustomDivider />\n        </Row>\n      </Container>\n      <Container style={{ maxWidth: \"900px\" }}>\n        <Row>\n          <Col>\n            {(success === null || success === false) && (\n              <Form onSubmit={doSubmit}>\n                <Form.Group className=\"mb-3 mt-4\">\n                  <Form.Label>\n                    <b>Original content (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setContent(e.target.files[0])}\n                    isInvalid={contentError !== null && contentError !== \"\"}\n                    isValid={contentError === \"\"}\n                  />\n                  {contentError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {contentError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    Attach your original work in all it's glory. The NFT will be\n                    locked uniquely to this file (<span className=\"text-dark\"><b>max 10 MB</b></span>).\n                    <br />\n                    You can only use this file once. Only the current owner of\n                    the NFT can download this file.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Cover thumbnail (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setPreview(e.target.files[0])}\n                    isInvalid={previewError !== null && previewError !== \"\"}\n                    isValid={previewError === \"\"}\n                  />\n                  {previewError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {previewError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    Attach a thumbnail sized version for public display (<span className=\"text-dark\"><b>square-sized PNG or WEBP; max 1 MB</b></span>).\n                    <br />\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Name (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={name}\n                    placeholder=\"Max 40 characters\"\n                    onChange={(e) => setName(e.target.value)}\n                    isValid={name !== \"\" && name.length <= 40}\n                    isInvalid={name !== \"\" && name.length > 40}\n                  />\n                  {name.length > 40 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Name too long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Description (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={description}\n                    placeholder=\"Max 500 characters\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    isValid={description !== \"\" && description.length <= 500}\n                    isInvalid={description !== \"\" && description.length > 500}\n                  />\n                  {description.length > 500 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Description long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Tags (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={tags}\n                    placeholder=\"Max 100 characters; space separated\"\n                    onChange={(e) => setTags(e.target.value)}\n                    isValid={tags !== \"\" && tags.length <= 100}\n                    isInvalid={tags !== \"\" && tags.length > 100}\n                  />\n                  {tags.length > 100 && (\n                    <div>\n                      <Form.Text className=\"input-error\">Tags long</Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3 mt-2\">\n                  <Form.Label>\n                    <b>Listing price (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={listingPrice}\n                    onChange={(e) => {\n                      if (\n                        e.target.value.match(/^[0-9]+$/) &&\n                        parseInt(e.target.value) >= 1\n                      ) {\n                        setListingPrice(e.target.value);\n                      } else {\n                        setListingPrice(\"1000\");\n                      }\n                    }}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Initial selling price for your NFT in DINGO (min. 1 DINGO).\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Creator royalty (*required): </b>\n                    {(2.5 + Math.floor((royalty * 75) / 100) / 10).toFixed(1) +\n                      \"%\"}\n                  </Form.Label>\n                  <Form.Range\n                    value={royalty}\n                    onChange={(e) => setRoyalty(e.target.value)}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Royalty paid to you for every transaction of this NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <div style={{ textAlign: \"center\" }}>\n                  {success === null && pending === false && (\n                    <Button\n                      className=\"popup-button mt-4 px-4 mb-5\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                      disabled={\n                        content === null ||\n                        contentError !== \"\" ||\n                        (preview !== null && previewError !== \"\")\n                      }\n                    >\n                      Create NFT\n                    </Button>\n                  )}\n                  {success === null && pending === true && (\n                    <div>\n                      <Spinner animation=\"border\" />\n                      <p>\n                        Transaction pending...\n                        <br />\n                        (DO NOT CLOSE THIS PAGE)\n                      </p>\n                    </div>\n                  )}\n                  {success === false && (\n                    <div>\n                      <p>\n                        Transaction failed!\n                        <br />\n                        Error: <b>{error}</b>\n                        <br/>\n                        Please reload this page and try again\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </Form>\n            )}\n            {success === true && (\n              <div style={{ textAlign: \"center\" }}>\n                {\" \"}\n                <h3>NFT Created!</h3>\n                <p>\n                  NFT Address: <b>{address}</b>\n                </p>\n                <div style={{ textAlign: \"center\" }}>\n                  <a href={\"/nft/\" + address}>\n                    <Button className=\"popup-button px-4\" variant=\"primary\">\n                      View NFT ►\n                    </Button>\n                  </a>\n                </div>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n    </div>\n  );\n}\n\nexport default CreateController;\n","const META_BUCKET = \"https://dingo-nft-meta.s3.us-west-1.amazonaws.com\";\nconst PREVIEW_BUCKET = \"https://dingo-nft-preview.s3.us-west-1.amazonaws.com\";\nconst STATE_BUCKET = \"https://dingo-nft-state.s3.us-west-1.amazonaws.com\";\nconst PROFILE_BUCKET = \"https://dingo-nft-profile.s3.us-west-1.amazonaws.com\";\nconst COLLECTION_BUCKET = \"https://dingo-nft-collection.s3.us-west-1.amazonaws.com\";\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 5000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nconst getMeta = async (address) => {\n  const response = await get(`${META_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getPreviewLink = (address) => {\n  return `${PREVIEW_BUCKET}/${address}.png`;\n};\n\nconst getState = async (address) => {\n  const response = await get(`${STATE_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getProfile = async (owner) => {\n  const response = await get(`${PROFILE_BUCKET}/${owner}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getCollection = async (handle) => {\n  const response = await get(`${COLLECTION_BUCKET}/${handle}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nexport { getMeta, getPreviewLink, getState, getProfile, getCollection };\n","import React from \"react\";\nimport { getMeta, getPreviewLink, getState } from \"./storage\";\nimport { Card } from \"react-bootstrap\";\nimport { satoshiToLocaleString } from \"./utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCashRegister,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  getItemCollection,\n} from \"./api\";\nimport {\n  getCollection,\n  getProfile\n} from \"./storage\";\n\nconst nameOrAddress = (x) => {\n  if (x.name === null || x.name === undefined || x.name.trim() === \"\") {\n    return x.address;\n  } else {\n    return x.name;\n  }\n};\n\nfunction NFTCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [name, setName] = React.useState(null);\n  const [stats, setStats] = React.useState(null);\n  const [collection, setCollection] = React.useState(undefined);\n  const [profile, setProfile] = React.useState(undefined);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const meta = await getMeta(props.address);\n        const previewLink = await getPreviewLink(props.address);\n        const state = await getState(props.address);\n\n        setPreviewLink(previewLink);\n        setName(meta === null ? null : meta.name);\n        setStats(state === null ? null : state.stats);\n\n        const collectionHandle = (\n          await getItemCollection({\n            address: props.address\n          })\n        ).handle;\n        if (collectionHandle === null) {\n          setCollection(null);\n          let profile = await getProfile(state.creator);\n          if (profile === null) {\n            profile = {};\n          }\n          profile.address = state.creator;\n          setProfile(profile);\n        } else {\n          const collection = await getCollection(collectionHandle);\n          collection.handle = collectionHandle;\n          setCollection(collection);\n          setProfile(null);\n        }\n      }\n    })();\n  }, [props.address, isVisible]);\n\n  return (\n    <Card\n      className=\"nft-card floating-borders floating-borders-press\"\n      ref={domRef}\n    >\n      <div className=\"header-box\">\n        <div className=\"spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\"></div>\n        </div>\n        <Card.Img variant=\"top\" src={previewLink} loading=\"lazy\"></Card.Img>\n      </div>\n      <hr />\n      <Card.Body>\n        <Card.Title className=\"text-start\">\n          {name === null ? \"-\" : name === \"\" ? \"Unnamed NFT\" : name}\n        </Card.Title>\n        <Card.Subtitle className=\"text-start\">\n          {(collection === undefined || profile === undefined) && <span>&nbsp;</span>}\n          {collection !== undefined && collection !== null && (<div className=\"text-truncate\"><b>In</b> <a className=\"simple-link\" href={`/collection/${collection.handle}`}>{collection.name}</a></div>)}\n          {profile !== undefined && profile !== null && (<div className=\"text-truncate\"><b>By</b> <a className=\"simple-link\" href={`/profile/${profile.address}`}>{profile.name || profile.address}</a></div>)}\n        </Card.Subtitle>\n        <Card.Text>\n          <span className=\"card-price\">\n            {stats === null ? \"-\" : satoshiToLocaleString(stats.price)}\n          </span>\n          <br />\n          <span className=\"card-price-subtitle\">DINGO</span>\n        </Card.Text>\n      </Card.Body>\n      <hr />\n      <div className=\"card-sub-body text-muted\">\n        <span className=\"align-middle\">\n          <FontAwesomeIcon icon={faCashRegister} />{\" \"}\n          {stats === null ? \"-\" : satoshiToLocaleString(stats.tradeVolume)}\n        </span>\n        &nbsp;&nbsp;&nbsp;\n        <span className=\"align-middle\">\n          <FontAwesomeIcon icon={faExchangeAlt} />{\" \"}\n          {stats === null ? \"-\" : stats.tradeCount}\n        </span>\n      </div>\n    </Card>\n  );\n}\n\nexport default NFTCard;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { getCollection, getPreviewLink } from \"./storage\";\nimport { getCollectionStats } from \"./api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faCashRegister,\n  faExchangeAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { toLocaleString } from \"./utils\";\n\nfunction CollectionCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [collection, setCollection] = React.useState(null);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const collection = await getCollection(props.handle);\n        setCollection(collection);\n\n        if (collection !== null) {\n          setPreviewLink(getPreviewLink(collection.thumbnail));\n\n          const stats = await getCollectionStats({ handle: props.handle });\n          setStats(stats);\n        }\n      }\n    })();\n  }, [isVisible, props.handle]);\n\n  return (\n    <Container className=\"collection-card-holder\" ref={domRef}>\n      {collection === null ||\n        (stats === null && (\n          <div className=\"collection-card d-flex flex-column\">\n            <div className=\"d-flex flex-row my-auto\">\n              <div className=\"spinner mx-auto\">\n                <div\n                  className=\"spinner-border text-primary\"\n                  role=\"status\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {collection !== null && stats !== null && (\n        <div className=\"collection-card d-flex flex-column\">\n          <img className=\"mx-auto mt-4 mb-3\" src={previewLink} />\n          <span className=\"mx-auto title\">\n            {collection !== null && collection.name}\n          </span>\n          <span className=\"truncate text-muted description\">\n            {collection !== null && collection.description}\n          </span>\n          <hr className=\"mt-auto\" />\n          <div className=\"d-flex flex-row text-muted card-sub-body\">\n            <span className=\"ms-auto\">\n              <FontAwesomeIcon icon={faList} />{\" \"}\n              {stats === null ? \"-\" : stats.count}\n            </span>\n            &nbsp;&nbsp;&nbsp;\n            <span>\n              <FontAwesomeIcon icon={faCashRegister} />{\" \"}\n              {stats === null ? \"-\" : toLocaleString(stats.tradeVolume)}\n            </span>\n            &nbsp;&nbsp;&nbsp;\n            <span className=\"me-auto\">\n              <FontAwesomeIcon icon={faExchangeAlt} />{\" \"}\n              {stats === null ? \"-\" : stats.tradeCount}\n            </span>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default CollectionCard;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getMeta } from \"./storage\";\nimport { getProfileCreatedNfts } from \"./api\";\n\nfunction CreateCollectionModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnail, setThumbnail] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const [handle, setHandle] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.owner !== undefined && props.owner !== null) {\n\n        const createdNfts = (await getProfileCreatedNfts({ owner: props.owner })).results.reverse();\n        if (createdNfts.length > 0) {\n          const createdNftNames = await Promise.all(\n            createdNfts.map(async (x) => {\n              return (await getMeta(x)).name;\n            })\n          );\n          setCreatedNfts(createdNfts.map((x, i) => [x, createdNftNames[i]]));\n          setThumbnail(createdNfts[0]);\n        }\n      }\n    })();\n  }, [props.owner]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                thumbnail: thumbnail,\n                name: name,\n                handle: handle,\n                description: description,\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Thumbnail image (*required)</b>\n            </Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isInvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnail}\n                  onChange={(e) => setThumbnail(e.target.value)}\n                >\n                  {createdNfts.map((x) => (\n                    <option key={x[0]} value={x[0]}>\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection name (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name !== \"\" && name.length <= 40}\n              isInvalid={name === \"\" || name.length > 40}\n            />\n            {name === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Name required</Form.Text>\n              </div>\n            )}\n            {name !== \"\" && name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection handle (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={handle}\n              onChange={(e) => setHandle(e.target.value)}\n              isValid={handle !== \"\" && handle.length <= 40}\n              isInvalid={handle === \"\" || handle.length > 40}\n            />\n            {handle === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Handle required</Form.Text>\n              </div>\n            )}\n            {handle !== \"\" && handle.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Handle too long</Form.Text>\n              </div>\n            )}\n            {handle !== \"\" && !handle.match(/^([a-z0-9])+$/) && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Incorrect handle format (only lowercase alphanumeric\n                  characters allowed)\n                </Form.Text>\n              </div>\n            )}\n            <Form.Text className=\"text-muted\">\n              Used for your collection's permalink. You can't change this after\n              creating the collection.\n            </Form.Text>\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Collection description (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 500 characters\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              isValid={description !== \"\" && description.length <= 500}\n              isInvalid={description !== \"\" && description.length > 500}\n            />\n            {description !== \"\" && description.length > 500 && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Description too long\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                thumbnail === null ||\n                name === \"\" ||\n                name.length > 40 ||\n                handle === \"\" ||\n                handle.length > 40 ||\n                description.length > 500\n              }\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default CreateCollectionModal;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getProfileCreatedNfts } from \"./api\";\nimport { getMeta, getCollection } from \"./storage\";\n\nfunction EditCollectionModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnailIndex, setThumbnailIndex] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.handle !== undefined && props.handle !== null) {\n        const collection = await getCollection(props.handle);\n        setName(collection.name);\n        setDescription(collection.description);\n\n        const createdNfts = (await getProfileCreatedNfts({ owner: collection.owner })).results.reverse();\n        if (createdNfts.length > 0) {\n          const createdNftNames = await Promise.all(\n            createdNfts.map(async (x) => {\n              return (await getMeta(x)).name;\n            })\n          );\n          setCreatedNfts(createdNfts.map((x, i) => [x, createdNftNames[i]]));\n\n          const currentThumbnailEntry = createdNfts.map((x, i) => [x, i]).find((x) => x[0] === collection.thumbnail);\n          setThumbnailIndex(currentThumbnailEntry[1]);\n        }\n      }\n    })();\n  }, [props.handle]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                thumbnail: createdNfts[thumbnailIndex][0],\n                name: name,\n                handle: props.handle,\n                description: description\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Thumbnail image (*required)</b>\n            </Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isinvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && thumbnailIndex !== null && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnailIndex}\n                  onChange={(e) => setThumbnailIndex(e.target.value)}\n                >\n                  {createdNfts.map((x, i) => (\n                    <option key={i} value={i} >\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your NFT creations.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>\n              <b>Collection name (*required)</b>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name !== \"\" && name.length <= 40}\n              isInvalid={name === \"\" || name.length > 40}\n            />\n            {name === \"\" && (\n              <div>\n                <Form.Text className=\"input-error\">Name required</Form.Text>\n              </div>\n            )}\n            {name !== \"\" && name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Collection description (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 500 characters\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              isValid={description !== \"\" && description.length <= 500}\n              isInvalid={description !== \"\" && description.length > 500}\n            />\n            {description !== \"\" && description.length > 500 && (\n              <div>\n                <Form.Text className=\"input-error\">\n                  Description too long\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                thumbnailIndex === null ||\n                name === \"\" ||\n                name.length > 40 ||\n                description.length > 500\n              }\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default EditCollectionModal;\n","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport { getProfileHistoricalNfts } from \"./api\";\nimport { getMeta, getProfile } from \"./storage\";\n\nfunction EditProfileModal(props) {\n  const [createdNfts, setCreatedNfts] = React.useState(null);\n  const [thumbnailIndex, setThumbnailIndex] = React.useState(undefined);\n  const [name, setName] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (props.address !== undefined && props.address !== null) {\n        const profile = await getProfile(props.address);\n        if (profile === null) {\n          setName(\"\");\n        } else {\n          setName(profile.name);\n        }\n\n        const createdNfts = (\n          await getProfileHistoricalNfts({ owner: props.address })\n        ).results.reverse();\n\n        let createdNftNames = await Promise.all(\n          createdNfts.map(async (x) => {\n            return (await getMeta(x)).name;\n          })\n        );\n        setCreatedNfts(\n          [[null, \"(No profile image)\"]].concat(\n            createdNfts.map((x, i) => [x, createdNftNames[i]])\n          )\n        );\n\n        const currentThumbnailEntry = [null]\n          .concat(createdNfts)\n          .map((x, i) => [x, i])\n          .find(\n            (x) =>\n              x[0] ===\n              (profile === null || profile.thumbnail === undefined\n                ? null\n                : profile.thumbnail)\n          );\n        setThumbnailIndex(currentThumbnailEntry[1]);\n      }\n    })();\n  }, [props.address]);\n\n  return (\n    <Modal size=\"lg\" centered show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form\n          className=\"m-2\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (props.onSubmit !== null && props.onSubmit !== undefined) {\n              props.onSubmit({\n                address: props.address,\n                thumbnail: createdNfts[thumbnailIndex][0],\n                name: name,\n              });\n            }\n          }}\n        >\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Profile image (optional)</Form.Label>\n            {createdNfts === null && (\n              <div>\n                <Form.Select disabled />\n                <Form.Text className=\"text-danger\" isinvalid={false}>\n                  You need to create an NFT to select as thumbnail image\n                </Form.Text>\n              </div>\n            )}\n            {createdNfts !== null && thumbnailIndex !== undefined && (\n              <div>\n                <Form.Select\n                  isValid={true}\n                  value={thumbnailIndex}\n                  onChange={(e) => setThumbnailIndex(e.target.value)}\n                >\n                  {createdNfts.map((x, i) => (\n                    <option key={i} value={i}>\n                      {x[1]}\n                    </option>\n                  ))}\n                </Form.Select>\n                <Form.Text className=\"text-muted\">\n                  Select a thumbnail image for your collection, using the cover\n                  image of one of your created/owned NFTs.\n                </Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Profile name (optional)</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Max 40 characters\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              isValid={name.length <= 40}\n              isInvalid={name.length > 40}\n            />\n            {name.length > 40 && (\n              <div>\n                <Form.Text className=\"input-error\">Name too long</Form.Text>\n              </div>\n            )}\n          </Form.Group>\n          <div className=\"text-center\">\n            <Button\n              className=\"mt-2 px-4\"\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={thumbnailIndex === null || name.length > 40}\n            >\n              Submit\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default EditProfileModal;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { getProfile, getPreviewLink } from \"./storage\";\nimport { getProfileCreatedCount, getProfileHistoricalCount, getProfileCollectionCount } from \"./api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faThLarge,\n  faShoppingBag\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ProfileCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [profile, setProfile] = React.useState(undefined);\n  const [stats, setStats] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible && props.address !== null) {\n        const profile = await getProfile(props.address);\n        setProfile(profile);\n\n        if (profile !== null && profile.thumbnail !== null && profile.thumbnail !== undefined) {\n          setPreviewLink(getPreviewLink(profile.thumbnail));\n        }\n\n        setStats( {\n          createdCount: await getProfileCreatedCount({owner: props.address}),\n          collectionCount: await getProfileCollectionCount({owner: props.address}),\n          historicalCount: await getProfileHistoricalCount({owner: props.address})\n        });\n      }\n    })();\n  }, [isVisible, props.address]);\n\n  return (\n    <Container className=\"profile-card-holder\" ref={domRef}>\n      {profile === undefined ||\n        (stats === null && (\n          <div className=\"profile-card d-flex flex-column\">\n            <div className=\"d-flex flex-row my-auto\">\n              <div className=\"spinner mx-auto\">\n                <div\n                  className=\"spinner-border text-primary\"\n                  role=\"status\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {profile !== undefined && stats !== null && (\n        <div className=\"profile-card d-flex flex-row\">\n          <img\n            className=\"my-auto ms-4 me-3\"\n            src={previewLink === null ? getPreviewLink('DP7CwNZ2AwbvYmFU5bQ8m49AUYLeTePsLt') : previewLink}\n          />\n          <div className=\"my-auto d-flex flex-column me-auto\">\n            <span className=\"title text-truncate text-start me-auto ms-0\">\n              {profile !== null && profile.name}\n              {profile === null && <span className=\"text-muted\">Unnamed profile</span>}\n            </span>\n            <div className=\"card-sub-body text-muted me-auto\">\n              <span className=\"ms-auto\">\n                <FontAwesomeIcon icon={faList} />{\" \"}\n                {stats === null ? \"-\" : stats.createdCount}\n              </span>\n              &nbsp;&nbsp;&nbsp;\n              <span>\n                <FontAwesomeIcon icon={faThLarge} />{\" \"}\n                {stats === null ? \"-\" : stats.collectionCount}\n              </span>\n              &nbsp;&nbsp;&nbsp;\n              <span className=\"me-auto\">\n                <FontAwesomeIcon icon={faShoppingBag} />{\" \"}\n                {stats === null ? \"-\" : stats.historicalCount - stats.createdCount}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default ProfileCard;\n","/* global BigInt */\n\nimport {\n  Button,\n  Form,\n  Nav,\n  Dropdown,\n  DropdownButton,\n  Image,\n  Spinner\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport { getMeta, getState, getProfile, getPreviewLink } from \"./storage\";\nimport { toSatoshi } from \"./utils\";\nimport NFTCard from \"./NFTCard\";\nimport {\n  createCollection,\n  getBusy,\n  getBuyTransaction,\n  getCollectionItems,\n  getContent,\n  getItemCollection,\n  getProfileCreatedNfts,\n  getProfileHistoricalNfts,\n  getProfileOwnedNfts,\n  getProfileStats,\n  getRepriceTransaction,\n  queryCollectionByOwner,\n  queryUnassignedNftsByOwner,\n  sendBuyTransaction,\n  sendRepriceTransaction,\n  setCollectionItem,\n  updateCollection,\n  updateProfile,\n} from \"./api\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport CollectionCard from \"./CollectionCard\";\nimport CreateCollectionModal from \"./CreateCollectionModal\";\nimport EditCollectionModal from \"./EditCollectionModal\";\nimport EditProfileModal from \"./EditProfileModal\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { getCollection } from \"./storage\";\nimport {\n  faCashRegister,\n  faExchangeAlt,\n  faPlus,\n  faPen,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { toLocaleString, satoshiToLocaleString } from \"./utils\";\nimport ProfileCard from \"./ProfileCard\";\n\nfunction ProfileController() {\n  const { profileAddress, collectionHandle, nftAddress } = useParams();\n  const location = useLocation();\n  const view =\n    profileAddress !== undefined\n      ? location.pathname.endsWith(\"/owned\")\n        ? \"profileOwned\"\n        : location.pathname.endsWith(\"/stats\")\n        ? \"profileStats\"\n        : \"profile\"\n      : collectionHandle !== undefined\n      ? \"collection\"\n      : nftAddress !== undefined\n      ? \"nft\"\n      : \"unknown\";\n\n  // Variables always required.\n  const [editProfileShow, setEditProfileShow] = React.useState(null);\n  const [profile, setProfile] = React.useState(null);\n\n  // For profile view.\n  const [createCollectionShow, setCreateCollectionShow] = React.useState(false);\n  const [collections, setCollections] = React.useState(null);\n  const [unassignedList, setUnassignedList] = React.useState(null);\n  const [profileLists, setProfileLists] = React.useState(null);\n  const [profileStats, setProfileStats] = React.useState(null);\n\n  // For collection view.\n  const [collection, setCollection] = React.useState(null);\n  const [collectionItems, setCollectionItems] = React.useState(null);\n  const [editCollectionShow, setEditCollectionShow] = React.useState(false);\n\n  // For NFT view.\n  const [nftMeta, setNftMeta] = React.useState(null);\n  const [nftState, setNftState] = React.useState(null);\n  const [nftItemCollection, setNftItemCollection] = React.useState(undefined);\n  const [nftOwner, setNftOwner] = React.useState(undefined);\n  const [nftBusy, setNftBusy] = React.useState(undefined);\n  const [resellPrice, setResellPrice] = React.useState(\"\");\n  const [resellPriceError, setResellPriceError] = React.useState(\"\");\n  const [buyResult, setBuyResult] = React.useState(null);\n  const [repricePrice, setRepricePrice] = React.useState(\"\");\n  const [repricePriceError, setRepricePriceError] = React.useState(\"\");\n  const [repriceResult, setRepriceResult] = React.useState(null);\n  const [downloadLink, setDownloadLink] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  // Initialize for profile view, commons.\n  React.useEffect(() => {\n    if (view.startsWith(\"profile\")) {\n      (async () => {\n        // Retrieve and set profile.\n        let profile = await getProfile(profileAddress);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = profileAddress;\n        setProfile(profile);\n      })();\n    }\n  }, []);\n\n  // Initialize for profile view (cretions).\n  React.useEffect(() => {\n    if (view === \"profile\") {\n      (async () => {\n        // Retrieve and set collections.\n        const collections = await queryCollectionByOwner({\n          owner: profileAddress,\n        });\n        if (collections !== null) {\n          setCollections(collections.reverse());\n        }\n\n        // Retrieve and set unassigned list.\n        const unassignedList = await queryUnassignedNftsByOwner({\n          owner: profileAddress,\n        });\n        setUnassignedList(unassignedList.reverse());\n      })();\n    }\n  }, []);\n\n  // Initialize for profileOwned view.\n  React.useEffect(() => {\n    if (view === \"profileOwned\") {\n      (async () => {\n        setProfileLists({\n          createdNfts: (\n            await getProfileCreatedNfts({ owner: profileAddress })\n          ).results.reverse(),\n          ownedNfts: (\n            await getProfileOwnedNfts({ owner: profileAddress })\n          ).results.reverse(),\n          historicalNfts: (\n            await getProfileHistoricalNfts({ owner: profileAddress })\n          ).results.reverse(),\n        });\n      })();\n    }\n  }, []);\n\n  // Initialize for profileStats view.\n  React.useEffect(() => {\n    if (view === \"profileStats\") {\n      (async () => {\n        setProfileStats(await getProfileStats({ owner: profileAddress }));\n        console.log(await getProfileStats({ owner: profileAddress }));\n      })();\n    }\n  }, []);\n\n  // Initialize for collection view.\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"collection\") {\n        const collection = await getCollection(collectionHandle);\n        collection.handle = collectionHandle;\n        setCollection(collection);\n        let profile = await getProfile(collection.owner);\n        if (profile === null) {\n          profile = {};\n        }\n        profile.address = collection.owner;\n        setProfile(profile);\n        setCollectionItems(\n          (await getCollectionItems({ handle: collectionHandle })).reverse()\n        );\n      }\n    })();\n  }, []);\n\n  // Initialize for nft view.\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"nft\") {\n        const nftMeta = await getMeta(nftAddress);\n        setNftMeta(nftMeta);\n        const nftState = await getState(nftAddress);\n        setNftState(nftState);\n\n        const nftItemCollectionHandle = (\n          await getItemCollection({\n            address: nftAddress,\n          })\n        ).handle;\n        if (nftItemCollectionHandle === null) {\n          setNftItemCollection(null);\n        } else {\n          const collection = await getCollection(nftItemCollectionHandle);\n          collection.handle = nftItemCollectionHandle;\n          setNftItemCollection(collection);\n        }\n\n        if (nftState !== null && nftState.owner !== nftState.creator) {\n          let nftOwner = await getProfile(nftState.owner);\n          if (nftOwner === null) {\n            nftOwner = {};\n          }\n          nftOwner.address = nftState.owner;\n          setNftOwner(nftOwner);\n        } else {\n          setNftOwner(null);\n        }\n\n        if (nftState !== null && nftMeta !== null) {\n          let profile = await getProfile(nftState.creator);\n          if (profile === null) {\n            profile = {};\n          }\n          profile.address = nftState.creator;\n          setProfile(profile);\n        }\n\n        setNftBusy(await getBusy({ address: nftAddress }));\n      }\n    })();\n  }, []);\n\n  // Effect for NFT view.\n  React.useEffect(() => {\n    if (resellPrice === \"\") {\n      setResellPriceError(\"Resell price required\");\n    } else if (nftState !== null) {\n      if (\n        BigInt(toSatoshi(resellPrice)) >\n        BigInt(10) * BigInt(nftState.stats.price)\n      ) {\n        setResellPriceError(\n          `Resell price must be at most 10x the current price`\n        );\n      } else {\n        setResellPriceError(\"\");\n      }\n    } else {\n      setResellPriceError(\"\");\n    }\n  }, [resellPrice, nftState]);\n  React.useEffect(() => {\n    if (repricePrice === \"\") {\n      setRepricePriceError(\"Reprice price required\");\n    } else {\n      setRepricePriceError(\"\");\n    }\n  }, [repricePrice]);\n\n  const doEditProfileSubmit = async (profile) => {\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const payload = {\n      timestamp: Date.now(),\n      owner: profileAddress,\n      name: profile.name,\n      thumbnail: profile.thumbnail,\n    };\n    const message = JSON.stringify(payload);\n\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    const updateResult = await updateProfile(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doCreateCollectionSubmit = async (collection) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      owner: profileAddress,\n      handle: collection.handle,\n      name: collection.name,\n      thumbnail: collection.thumbnail,\n      description: collection.description,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await createCollection(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doEditCollectionSubmit = async (collection) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      handle: collection.handle,\n      name: collection.name,\n      thumbnail: collection.thumbnail,\n      description: collection.description,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await updateCollection(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doMove = async (address, handle) => {\n    // Create payload and signature message.\n    const payload = {\n      timestamp: Date.now(),\n      address: address,\n      handle: handle,\n    };\n    const message = JSON.stringify(payload);\n\n    // Sign.\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    // Send.\n    const updateResult = await setCollectionItem(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  const doDownload = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const timestamp = Date.now();\n    const message = `${nftAddress}|${timestamp}`;\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n\n    const result = await getContent({\n      address: nftAddress,\n      timestamp: timestamp,\n      signature: signResult.result,\n    });\n    if (result === null || result.error !== undefined) {\n      return;\n    }\n\n    if (result.content !== undefined) {\n      setDownloadLink(result.content);\n    }\n  };\n\n  const doBuy = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const { vins, vouts } = await getBuyTransaction({\n      address: nftAddress,\n      price: toSatoshi(resellPrice),\n    });\n    const signed = (await window.dingo.requestSignTransaction(vins, vouts))\n      .result;\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    const result = await sendBuyTransaction({ transaction: signed });\n    setBuyResult(result);\n  };\n\n  const doReprice = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const { vins, vouts } = await getRepriceTransaction({\n      address: nftAddress,\n      price: toSatoshi(repricePrice),\n    });\n\n    const signed = (await window.dingo.requestSignTransaction(vins, vouts))\n      .result;\n    if (signed === null || signed === undefined) {\n      return;\n    }\n\n    const result = await sendRepriceTransaction({ transaction: signed });\n    setRepriceResult(result);\n  };\n\n  return (\n    <div className=\"profile-container justify-content-center mx-auto\">\n      {view.startsWith(\"profile\") && profile !== null && (\n        <div className=\"profile-section profile-header pt-3\">\n          <div className=\"d-flex flex-row\">\n            <span\n              className=\"clickable ms-auto\"\n              onClick={() => setEditProfileShow(true)}\n            >\n              <FontAwesomeIcon className=\"me-1\" icon={faPen} /> Edit\n            </span>\n          </div>\n          <div className=\"d-flex flex-row\">\n            <ul className=\"profile-cards-container mt-4 mx-auto mb-4\">\n              <ProfileCard address={profileAddress} />\n            </ul>\n          </div>\n          <hr />\n          <Nav variant=\"tabs\" className=\"custom-nav-tabs\">\n            <Nav.Item>\n              <Nav.Link\n                eventKey=\"creations\"\n                active={\n                  view === \"profile\" || view === \"collection\" || view === \"nft\"\n                }\n                href={`/profile/${profile.address}/`}\n              >\n                NFT creations\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                eventKey=\"unassigned\"\n                active={view === \"profileOwned\"}\n                href={`/profile/${profile.address}/owned`}\n              >\n                Owned NFTs\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                eventKey=\"unassigned\"\n                active={view === \"profileStats\"}\n                href={`/profile/${profile.address}/stats`}\n              >\n                Stats\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </div>\n      )}\n\n      {view === \"profile\" && (\n        <div className=\"profile-section py-3\">\n          <div className=\"d-flex flex-row content-header\">\n            <span className=\"me-auto content-title accent\">Collections</span>\n            <span\n              className=\"clickable\"\n              onClick={() => setCreateCollectionShow(true)}\n            >\n              <FontAwesomeIcon className=\"me-1\" icon={faPlus} /> Create new\n            </span>\n          </div>\n          {collections !== null && collections.length > 0 && (\n            <ul className=\"collection-cards-container mt-4\">\n              {collections.map((x) => (\n                <a key={x} href={`/collection/${x}`}>\n                  <CollectionCard handle={x} />\n                </a>\n              ))}\n            </ul>\n          )}\n          {collections !== null && collections.length === 0 && (\n            <div className=\"d-flex flex-row mt-2 mb-2\">\n              <span className=\"mx-auto text-muted\">User has no collection</span>\n            </div>\n          )}\n        </div>\n      )}\n\n      {view === \"profile\" &&\n        unassignedList !== null &&\n        unassignedList.length > 0 && (\n          <div className=\"profile-section py-3\">\n            <div className=\"d-flex flex-row content-header\">\n              <span className=\"me-auto content-title accent\">\n                Unassigned NFTs\n              </span>\n            </div>\n            <ul className=\"cards-container mt-4\">\n              {unassignedList.map((x) => (\n                <div key={x}>\n                  <a href={`/nft/${x}`}>\n                    <NFTCard address={x} />\n                  </a>\n                  <DropdownButton\n                    className=\"mt-2 mb-4 px-4\"\n                    title=\"Move to collection\"\n                  >\n                    {collections !== null &&\n                      collections.map((y) => (\n                        <Dropdown.Item key={y} onClick={() => doMove(x, y)}>\n                          {y}\n                        </Dropdown.Item>\n                      ))}\n                  </DropdownButton>\n                </div>\n              ))}\n            </ul>\n          </div>\n        )}\n\n      {view === \"profileOwned\" && profileLists !== null && (\n        <div className=\"profile-section py-3\">\n          <div className=\"d-flex flex-row content-header\">\n            <span className=\"me-auto content-title accent\">Owned NFTs</span>\n          </div>\n          {profileLists.ownedNfts.filter(\n            (x) => !profileLists.createdNfts.some((y) => y === x)\n          ).length > 0 && (\n            <ul className=\"cards-container mt-4\">\n              {profileLists.ownedNfts\n                .filter((x) => !profileLists.createdNfts.some((y) => y === x))\n                .map((x) => (\n                  <a key={x} href={`/nft/${x}`}>\n                    <NFTCard address={x} />\n                  </a>\n                ))}\n            </ul>\n          )}\n          {profileLists.ownedNfts.filter(\n            (x) => !profileLists.createdNfts.some((y) => y === x)\n          ).length === 0 && (\n            <div className=\"d-flex flex-row mt-2 mb-2\">\n              <span className=\"mx-auto text-muted\">User has no owned NFT</span>\n            </div>\n          )}\n        </div>\n      )}\n\n      {view === \"profileOwned\" &&\n        profileLists !== null &&\n        profileLists.historicalNfts\n          .filter((x) => !profileLists.createdNfts.some((y) => y === x))\n          .filter((x) => !profileLists.ownedNfts.some((y) => y === x)).length >\n          0 && (\n          <div className=\"profile-section py-3\">\n            <div className=\"d-flex flex-row content-header\">\n              <span className=\"me-auto content-title accent\">\n                Previously owned NFTs\n              </span>\n            </div>\n            <ul className=\"cards-container mt-4\">\n              {profileLists.historicalNfts\n                .filter((x) => !profileLists.createdNfts.some((y) => y === x))\n                .filter((x) => !profileLists.ownedNfts.some((y) => y === x))\n                .map((x) => (\n                  <a key={x} href={`/nft/${x}`}>\n                    <NFTCard address={x} />\n                  </a>\n                ))}\n            </ul>\n          </div>\n        )}\n\n      {view === \"profileStats\" && profileStats !== null && (\n        <div className=\"profile-section py-3\">\n          <div className=\"d-flex flex-row content-header\">\n            <span className=\"me-auto content-title accent\">Profile Stats</span>\n          </div>\n          <div className=\"mt-4 px-2\">\n            <p>\n              <b>NFT creations</b>\n              <ul>\n                <li>NFTs created: {profileStats.listCount}</li>\n                <li>Times sold: {profileStats.listSoldCount}</li>\n                <li>\n                  Total royalties:{\" \"}\n                  {satoshiToLocaleString(profileStats.royaltyVolume)}\n                </li>\n              </ul>\n            </p>\n\n            <p>\n              <b>Trades</b>\n              <ul>\n                <li>NFTs bought/sold: {profileStats.tradeCount}</li>\n                <li>\n                  Total purchases:{\" \"}\n                  {satoshiToLocaleString(profileStats.buyVolume)}\n                </li>\n                <li>\n                  Total sales: {satoshiToLocaleString(profileStats.sellVolume)}\n                </li>\n              </ul>\n            </p>\n\n            <p>\n              <b>Overall</b>\n              <ul>\n                <li>\n                  Total Earnings:{\" \"}\n                  {satoshiToLocaleString(\n                    BigInt(profileStats.royaltyVolume) +\n                      BigInt(profileStats.sellVolume) -\n                      BigInt(profileStats.buyVolume)\n                  )}\n                </li>\n              </ul>\n            </p>\n          </div>\n        </div>\n      )}\n\n      {view === \"collection\" && collection !== null && (\n        <div className=\"profile-section py-3\">\n          {profile !== null && (\n            <div className=\"d-flex flex-row content-header\">\n              <div\n                className=\"text-truncate me-auto\"\n                style={{ display: \"inline\" }}\n              >\n                <span className=\"content-title accent\">Collection by: </span>\n                <a\n                  className=\"simple-link\"\n                  href={`/profile/${profile.address}/`}\n                >\n                  {profile.name === \"\" ||\n                  profile.name === null ||\n                  profile.name === undefined\n                    ? profile.address\n                    : profile.name}\n                </a>\n              </div>\n              <span\n                className=\"clickable ms-auto\"\n                onClick={() => setEditCollectionShow(true)}\n              >\n                <nobr>\n                  <FontAwesomeIcon className=\"me-1\" icon={faPen} /> Edit\n                </nobr>\n              </span>\n            </div>\n          )}\n          <div className=\"d-flex flex-row\">\n            <ul className=\"collection-cards-container mt-4 mx-auto mb-4\">\n              <CollectionCard handle={collectionHandle} />\n            </ul>\n          </div>\n        </div>\n      )}\n      {view === \"collection\" && collection !== null && (\n        <div className=\"profile-section py-3\">\n          <ul className=\"cards-container mt-4\">\n            {collectionItems !== null &&\n              collectionItems.map((x) => (\n                <a key={x} href={`/nft/${x}`}>\n                  <NFTCard address={x} />\n                </a>\n              ))}\n          </ul>\n        </div>\n      )}\n\n      {view === \"nft\" && nftMeta !== null && nftItemCollection !== undefined && (\n        <div className=\"profile-section-transparent\">\n          <div className=\"d-flex flex-row nft-container flex-wrap\">\n            <Image className=\"mx-0 my-auto\" src={getPreviewLink(nftAddress)} />\n            <hr />\n            {nftState === null && (\n              <div className=\"px-3 py-3 details d-flex flex-column flex-fill\">\n                <Spinner className=\"mx-auto my-auto\" animation=\"border\"/>\n              </div>\n            )}\n            {nftState !== null && (\n              <div className=\"px-3 py-3 details d-flex flex-column flex-fill\">\n                <h2 className=\"accent\">{nftMeta.name}</h2>\n                <div className=\"description flex-wrap\">\n                  <i>{nftMeta.description}</i>\n                </div>\n                <div className=\"mt-2\">\n                  {nftItemCollection !== null && (\n                    <div className=\"text-truncate\">\n                      <span>\n                        <b>In</b>{\" \"}\n                        <a\n                          className=\"simple-link\"\n                          href={`/collection/${nftItemCollection.handle}`}\n                        >\n                          {nftItemCollection.name}\n                        </a>\n                      </span>\n                    </div>\n                  )}\n                  {profile !== undefined && profile !== null && (\n                    <div className=\"text-truncate\">\n                      <span>\n                        <b>By</b>{\" \"}\n                        <a\n                          className=\"simple-link\"\n                          href={`/profile/${profile.address}`}\n                        >\n                          {profile.name || profile.address}\n                        </a>\n                      </span>\n                    </div>\n                  )}\n                  {profile === null && (\n                    <div className=\"text-truncate\">\n                      <span>\n                        <b>By</b> -\n                      </span>\n                    </div>\n                  )}\n                  {nftOwner !== undefined && nftOwner !== null && (\n                    <div className=\"text-truncate\">\n                      <span>\n                        <b>Owner</b>{\" \"}\n                        <a\n                          className=\"simple-link\"\n                          href={`/profile/${nftOwner.address}`}\n                        >\n                          {nftOwner.name || nftOwner.address}\n                        </a>\n                      </span>\n                    </div>\n                  )}\n                  {nftOwner === undefined && (\n                    <div className=\"text-truncate\">\n                      <span>\n                        <b>Owner</b> -\n                      </span>\n                    </div>\n                  )}\n                  <div className=\"text-truncate\">\n                    <span>\n                      <b>Original content</b>\n                    </span>\n                    &nbsp;\n                    {downloadLink === null && (\n                      <span className=\"me-auto clickable\" onClick={doDownload}>\n                        Verify ownership\n                      </span>\n                    )}\n                    {downloadLink !== null && (\n                      <a\n                        className=\"simple-link me-auto\"\n                        href={downloadLink}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        Link\n                      </a>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex-fill d-flex flex-column\">\n                  <div className=\"mx-auto my-auto py-4 text-center\">\n                    <span className=\"card-price\">\n                      {satoshiToLocaleString(nftState.stats.price)}\n                    </span>\n                    <br />\n                    <span className=\"card-price-subtitle\">DINGO</span>\n                  </div>\n                </div>\n                {nftState !== null && (\n                  <div className=\"mt-1\">\n                    <span className=\"text-muted\">\n                      <FontAwesomeIcon icon={faCashRegister} /> Trade volume{\" \"}\n                    </span>\n                    <span>\n                      {satoshiToLocaleString(nftState.stats.tradeVolume)}\n                    </span>\n                    <br />\n                    <span className=\"text-muted\">\n                      <FontAwesomeIcon icon={faExchangeAlt} /> Trade count{\" \"}\n                    </span>\n                    <span>{nftState.stats.tradeCount}</span>\n                    <br />\n                    <span className=\"text-muted\">Last trade height </span>\n                    <span>\n                      {nftState.stats.tradeHeight === null\n                        ? \"-\"\n                        : toLocaleString(nftState.stats.tradeHeight)}\n                    </span>\n                    <br />\n                    <span className=\"text-muted\">List height </span>\n                    <span>{toLocaleString(nftState.stats.listHeight)}</span>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {view === \"nft\" && nftMeta !== null && nftItemCollection !== undefined && (\n        <div className=\"profile-section py-3\">\n          <div className=\"d-flex flex-row content-header\">\n            <span className=\"me-auto content-title accent\">Buy this NFT</span>\n          </div>\n          <div>\n            {nftBusy !== undefined && nftBusy !== null && (\n              <div className=\"mt-4 text-center\">\n                {\" \"}\n                <h5>NFT busy</h5>\n                <p>\n                  <a\n                    className=\"simple-link\"\n                    href={\n                      \"https://openchains.info/coin/dingocoin/tx/\" +\n                      nftBusy.txid\n                    }\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    A transaction\n                  </a>{\" \"}\n                  is currenly being confirmed for this NFT. <br />\n                  Please try again in a few minutes.\n                </p>\n              </div>\n            )}\n            {nftBusy !== undefined && nftBusy === null && buyResult === null && (\n              <div className=\"d-flex flex-column\">\n                <div className=\"mt-4 text-center px-4\">\n                  <Form.Group>\n                    <Form.Label>\n                      <b>Resell at (*required)</b>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      value={resellPrice}\n                      onChange={(e) => {\n                        if (e.target.value.match(/^[0-9]*$/)) {\n                          setResellPrice(e.target.value);\n                        }\n                      }}\n                      style={{ textAlign: \"center\" }}\n                      isInvalid={resellPriceError !== \"\"}\n                    />\n                    {resellPriceError && (\n                      <div>\n                        <Form.Text className=\"input-error\">\n                          {resellPriceError}\n                        </Form.Text>\n                      </div>\n                    )}\n                    <Form.Text className=\"text-muted\">\n                      New price you want to sell this NFT for (min. 1\n                      Dingocoin).\n                    </Form.Text>\n                  </Form.Group>\n                </div>\n                <div className=\"d-flex flex-row\">\n                  <Button\n                    className=\"popup-button mt-4 mx-auto px-4\"\n                    style={{ width: \"auto\" }}\n                    disabled={resellPriceError !== \"\"}\n                    onClick={doBuy}\n                  >\n                    Buy and resell NFT\n                  </Button>\n                </div>\n              </div>\n            )}\n            {buyResult !== null && buyResult.error === undefined && (\n              <div className=\"mt-4 text-center\">\n                {\" \"}\n                <h4>Transaction submitted!</h4>\n                <p>\n                  Transaction ID:{\" \"}\n                  <a\n                    className=\"simple-link\"\n                    href={\n                      \"https://openchains.info/coin/dingocoin/tx/\" +\n                      buyResult.txid\n                    }\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    {buyResult.txid}\n                  </a>\n                  <br />\n                  It may take a few minutes for your transaction to be\n                  confirmed.\n                </p>\n              </div>\n            )}\n            {buyResult !== null && buyResult.error !== undefined && (\n              <div style={{ textAlign: \"center\" }} className=\"mt-4\">\n                {\" \"}\n                <h4>Transaction failed!</h4>\n                <p>\n                  - Make sure that your wallet has no pending transaction.\n                  <br />- You can't buy this NFT as its owner/creator.\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {view === \"nft\" && nftMeta !== null && nftItemCollection !== undefined && (\n        <div className=\"profile-section py-3\">\n          <div className=\"d-flex flex-row content-header\">\n            <span className=\"me-auto content-title accent\">\n              Reprice this NFT\n            </span>\n          </div>\n          <div>\n            {nftBusy !== undefined && nftBusy !== null && (\n              <div className=\"mt-4 text-center\">\n                {\" \"}\n                <h5>NFT busy</h5>\n                <p>\n                  <a\n                    className=\"simple-link\"\n                    href={\n                      \"https://openchains.info/coin/dingocoin/tx/\" +\n                      nftBusy.txid\n                    }\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    A transaction\n                  </a>{\" \"}\n                  is currenly being confirmed for this NFT. <br />\n                  Please try again in a few minutes.\n                </p>\n              </div>\n            )}\n            {nftBusy !== undefined &&\n              nftBusy === null &&\n              repriceResult === null && (\n                <div className=\"d-flex flex-column\">\n                  <div className=\"mt-4 text-center px-4\">\n                    <Form.Group>\n                      <Form.Label>\n                        <b>Reprice at (*required)</b>\n                      </Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        value={repricePrice}\n                        onChange={(e) => {\n                          if (e.target.value.match(/^[0-9]*$/)) {\n                            setRepricePrice(e.target.value);\n                          }\n                        }}\n                        style={{ textAlign: \"center\" }}\n                        isInvalid={repricePriceError !== \"\"}\n                      />\n                      {repricePriceError && (\n                        <div>\n                          <Form.Text className=\"input-error\">\n                            {repricePriceError}\n                          </Form.Text>\n                        </div>\n                      )}\n                      <Form.Text className=\"text-muted\">\n                        New sell price for this NFT (min. 1 Dingocoin).\n                      </Form.Text>\n                    </Form.Group>\n                  </div>\n                  <div className=\"d-flex flex-row\">\n                    <Button\n                      className=\"popup-button mt-4 mx-auto px-4\"\n                      style={{ width: \"auto\" }}\n                      disabled={repricePriceError !== \"\"}\n                      onClick={doReprice}\n                    >\n                      Reprice NFT\n                    </Button>\n                  </div>\n                </div>\n              )}\n            {repriceResult !== null && repriceResult.error === undefined && (\n              <div className=\"mt-4 text-center\">\n                {\" \"}\n                <h4>Transaction submitted!</h4>\n                <p>\n                  Transaction ID:{\" \"}\n                  <a\n                    className=\"simple-link\"\n                    href={\n                      \"https://openchains.info/coin/dingocoin/tx/\" +\n                      repriceResult.txid\n                    }\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    {repriceResult.txid}\n                  </a>\n                  <br />\n                  It may take a few minutes for your transaction to be\n                  confirmed.\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n\n      {(view === \"profile\" || view === \"profileOwned\") && (\n        <EditProfileModal\n          title=\"Edit profile\"\n          show={editProfileShow}\n          onHide={() => setEditProfileShow(false)}\n          address={profileAddress}\n          onSubmit={doEditProfileSubmit}\n        />\n      )}\n\n      {view === \"profile\" && (\n        <CreateCollectionModal\n          title=\"Create new collection\"\n          show={createCollectionShow}\n          owner={profileAddress}\n          onHide={() => setCreateCollectionShow(false)}\n          onSubmit={doCreateCollectionSubmit}\n        />\n      )}\n\n      {view === \"collection\" && collection !== null && (\n        <EditCollectionModal\n          title=\"Edit collection\"\n          show={editCollectionShow}\n          handle={collection.handle}\n          onHide={() => setEditCollectionShow(false)}\n          onSubmit={doEditCollectionSubmit}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ProfileController;\n","import {\n  div,\n  Tab,\n  Nav,\n  Button,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryCollectionByTradeCountScaled,\n  queryCollectionByTradeVolume,\n  queryCollectionBySearch,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport CollectionCard from \"./CollectionCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBolt,\n  faFire,\n  faSearch,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ExploreCollectionsController() {\n  const location = useLocation();\n  let view = location.pathname.split(\"/\").pop();\n  view = [\"top\", \"search\"].includes(view) ? view : \"hot\";\n\n  // For explore view.\n  const [collectionList, setCollectionList] = React.useState(null);\n  const [search, setSearch] = React.useState(\"\");\n  const [searchEntries, setSearchEntries] = React.useState(undefined);\n\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"hot\") {\n        const l = await queryCollectionByTradeCountScaled(9999);\n        setCollectionList(l.results);\n      } else if (view === \"top\") {\n        const l = await queryCollectionByTradeVolume();\n        setCollectionList(l.results);\n      } else if (view === \"search\") {\n        const queryParam = new URLSearchParams(location.search).get(\"query\");\n        if (queryParam === null) {\n          setSearch(\"\");\n          setSearchEntries(null);\n        } else {\n          setSearch(queryParam);\n          setSearchEntries(\n            (await queryCollectionBySearch({ search: queryParam })).results\n          );\n        }\n      }\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/collections/search?query=${search.trim()}`);\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Explore Collections</h1>\n      </div>\n      {[\"hot\", \"top\", \"search\"].includes(view) && (\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <div>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n              <Nav.Item className=\"ms-auto text-center\">\n                <Nav.Link href=\"/collections/\" active={view === \"hot\"}>\n                  <FontAwesomeIcon icon={faBolt} className=\"me-2\" />\n                  Trending\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"text-center\">\n                <Nav.Link href=\"/collections/top\" active={view === \"top\"}>\n                  <FontAwesomeIcon icon={faFire} className=\"me-2\" />\n                  Top\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto text-center\">\n                <Nav.Link href=\"/collections/search\" active={view === \"search\"}>\n                  <FontAwesomeIcon icon={faSearch} className=\"me-2\" />\n                  Search\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </div>\n          <div>\n            {[\"hot\", \"top\"].includes(view) && collectionList !== null && (\n              <Tab.Content>\n                <ul className=\"collection-cards-container mt-4\">\n                  {collectionList.map((x) => (\n                    <a key={x} href={`/collection/${x}`}>\n                      <CollectionCard handle={x} />\n                    </a>\n                  ))}\n                </ul>\n              </Tab.Content>\n            )}\n            {[\"search\"].includes(view) && (\n              <Tab.Content>\n                <div className=\"d-flex flex-column\">\n                  <Form\n                    style={{ maxWidth: \"584px\", width: \"100%\" }}\n                    onSubmit={doSearch}\n                    className=\"mx-auto\"\n                  >\n                    <InputGroup className=\"mt-4\">\n                      <InputGroup.Text id=\"basic-addon1\">\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n                      {search !== null && (\n                        <FormControl\n                          className=\"search-box\"\n                          placeholder={\"Search in collections...\"}\n                          value={search}\n                          autoFocus=\"true\"\n                          onChange={(e) => {\n                            if (e.target.value.length <= 50) {\n                              setSearch(e.target.value);\n                            }\n                          }}\n                        />\n                      )}\n                      {search !== \"\" && (\n                        <Button variant=\"primary\" type=\"submit\">\n                          <FontAwesomeIcon icon={faArrowRight} />\n                        </Button>\n                      )}\n                    </InputGroup>\n                  </Form>\n                  <ul className=\"collection-cards-container mt-4\">\n                    {searchEntries === null && (\n                      <div className=\"d-flex flex-row\">\n                        <p className=\"mx-auto text-muted\" animation=\"border\">\n                          Search in collections using the search box above\n                        </p>\n                      </div>\n                    )}\n                    {searchEntries === undefined && (\n                      <div className=\"d-flex flex-row\">\n                        <Spinner className=\"mx-auto\" animation=\"border\" />\n                      </div>\n                    )}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.map((x) => (\n                        <a key={x} href={`/collection/${x}`}>\n                          <CollectionCard handle={x} />\n                        </a>\n                      ))}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.length === 0 && (\n                        <div className=\"d-flex flex-row\">\n                          <p className=\"mx-auto text-muted\" animation=\"border\">\n                            No matching collection\n                          </p>\n                        </div>\n                      )}\n                  </ul>\n                </div>\n              </Tab.Content>\n            )}\n          </div>\n        </Tab.Container>\n      )}\n    </div>\n  );\n}\n\nexport default ExploreCollectionsController;\n","import {\n  div,\n  Tab,\n  Nav,\n  Button,\n  Dropdown,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryNftByNewest,\n  queryNft,\n  queryNftBySearch,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faSearch,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NFTCard from \"./NFTCard\";\n\nfunction ExploreNftsController() {\n  const location = useLocation();\n  let view = location.pathname.split(\"/\").pop();\n  view = [\"search\"].includes(view) ? view : \"all\";\n\n  // For explore view.\n  const [nftList, setNftList] = React.useState(null);\n  const [nftListEnd, setNftListEnd] = React.useState(false);\n  const [queryText, setQueryText] = React.useState(\"Newly listed\");\n  const [search, setSearch] = React.useState(\"\");\n  const [searchEntries, setSearchEntries] = React.useState(undefined);\n\n  const [viewMoreEnabled, setViewMoreEnabled] = React.useState(true);\n\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"all\") {\n        const l = (await queryNftByNewest({ beforeId: null })).results;\n        if (l.length < 100) {\n          setNftListEnd(true);\n        }\n        setNftList(l);\n      } else if (view === \"search\") {\n        const queryParam = new URLSearchParams(location.search).get(\"query\");\n        if (queryParam === null) {\n          setSearch(\"\");\n          setSearchEntries(null);\n        } else {\n          setSearch(queryParam);\n          setSearchEntries(\n            (await queryNftBySearch({ search: queryParam })).results\n          );\n        }\n      }\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/nfts/search?query=${search.trim()}`);\n    }\n  };\n\n  const doChangeQuery = async (eventKey, event) => {\n    const [key, direction] = eventKey.split(\"|\");\n    setQueryText(event.target.innerText);\n\n    setNftListEnd(false);\n    if (key === \"listHeight\") {\n      const l = (await queryNftByNewest({ beforeId: null })).results;\n      if (l.length < 100) {\n        setNftListEnd(true);\n      }\n      setNftList(l);\n      setViewMoreEnabled(true);\n    } else {\n      const l = await queryNft({\n        key: key,\n        direction: direction,\n        limit: 100,\n        offset: 0,\n      });\n      setNftList(\n        l.results.map((x) => {\n          return {\n            address: x,\n          };\n        })\n      );\n      setViewMoreEnabled(false);\n    }\n  };\n\n  const onViewMore = async () => {\n    const l = (\n      await queryNftByNewest({ beforeId: nftList[nftList.length - 1].id })\n    ).results;\n    if (l.length < 100) {\n      setNftListEnd(true);\n    }\n    setNftList(nftList.concat(l));\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Explore Nfts</h1>\n      </div>\n      {[\"all\", \"search\"].includes(view) && (\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <div>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n              <Nav.Item className=\"ms-auto text-center\">\n                <Nav.Link href=\"/nfts\" active={view === \"all\"}>\n                  <FontAwesomeIcon icon={faList} className=\"me-2\" />\n                  All NFTs\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto text-center\">\n                <Nav.Link href=\"/nfts/search\" active={view === \"search\"}>\n                  <FontAwesomeIcon icon={faSearch} className=\"me-2\" />\n                  Search\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </div>\n          <div>\n            {view === \"all\" && (\n              <Tab.Content>\n                <Dropdown\n                  onSelect={doChangeQuery}\n                  style={{ textAlign: \"center\" }}\n                >\n                  <Dropdown.Toggle className=\"px-4 mt-4\">\n                    {queryText}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"listHeight|DESC\">\n                      Newly listed\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeHeight|DESC\">\n                      Recently sold\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"price|DESC\">\n                      Highest price\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"price|ASC\">\n                      Lowest price\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeCount|DESC\">\n                      Highest trade count\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeCount|ASC\">\n                      Lowest trade count\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeVolume|DESC\">\n                      Highest trade volume\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"tradeVolume|ASC\">\n                      Lowest trade volume\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n                <ul className=\"cards-container mt-4\">\n                  {nftList !== null &&\n                    nftList.map((x) => (\n                      <a key={x.address} href={`/nft/${x.address}`}>\n                        <NFTCard address={x.address} />\n                      </a>\n                    ))}\n                  {viewMoreEnabled && nftList !== null && !nftListEnd && (\n                    <Button onClick={onViewMore}>View more</Button>\n                  )}\n                </ul>\n              </Tab.Content>\n            )}\n            {[\"search\"].includes(view) && (\n              <Tab.Content>\n                <div className=\"d-flex flex-column\">\n                  <Form\n                    style={{ maxWidth: \"584px\", width: \"100%\" }}\n                    onSubmit={doSearch}\n                    className=\"mx-auto\"\n                  >\n                    <InputGroup className=\"mt-4\">\n                      <InputGroup.Text id=\"basic-addon1\">\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n                      {search !== null && (\n                        <FormControl\n                          autoFocus=\"true\"\n                          className=\"search-box\"\n                          placeholder={\"Search in NFTs...\"}\n                          value={search}\n                          onChange={(e) => {\n                            if (e.target.value.length <= 50) {\n                              setSearch(e.target.value);\n                            }\n                          }}\n                        />\n                      )}\n                      {search !== \"\" && (\n                        <Button variant=\"primary\" type=\"submit\">\n                          <FontAwesomeIcon icon={faArrowRight} />\n                        </Button>\n                      )}\n                    </InputGroup>\n                  </Form>\n                  <ul className=\"cards-container mt-4\">\n                    {searchEntries === null && (\n                      <div className=\"d-flex flex-row\">\n                        <p className=\"mx-auto text-muted\" animation=\"border\">\n                          Search in NFTs using the search box above\n                        </p>\n                      </div>\n                    )}\n                    {searchEntries === undefined && (\n                      <div className=\"d-flex flex-row\">\n                        <Spinner className=\"mx-auto\" animation=\"border\" />\n                      </div>\n                    )}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.map((x) => (\n                        <a key={x.address} href={`/nft/${x}`}>\n                          <NFTCard address={x} />\n                        </a>\n                      ))}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.length === 0 && (\n                        <div className=\"d-flex flex-row\">\n                          <p className=\"mx-auto text-muted\" animation=\"border\">\n                            No matching NFT\n                          </p>\n                        </div>\n                      )}\n                  </ul>\n                </div>\n              </Tab.Content>\n            )}\n          </div>\n        </Tab.Container>\n      )}\n    </div>\n  );\n}\n\nexport default ExploreNftsController;\n","import {\n  Row,\n  Tab,\n  Nav,\n  Button,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryProfileBySearch,\n  queryProfileByTradeCount,\n  queryProfileByEarnings,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSearch,\n  faArrowRight,\n  faBullseye,\n  faCoins,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ProfileCard from \"./ProfileCard\";\n\nfunction ExploreProfilesController() {\n  const location = useLocation();\n  let view = location.pathname.split(\"/\").pop();\n  view = [\"earnings\", \"search\"].includes(view) ? view : \"influence\";\n\n  // For explore view.\n  const [profileList, setProfileList] = React.useState(null);\n  const [search, setSearch] = React.useState(\"\");\n  const [searchEntries, setSearchEntries] = React.useState(undefined);\n\n  React.useEffect(() => {\n    (async () => {\n      if (view === \"influence\") {\n        const l = await queryProfileByTradeCount();\n        setProfileList(l.results);\n      } else if (view === \"earnings\") {\n        const l = await queryProfileByEarnings();\n        setProfileList(l.results);\n      } else if (view === \"search\") {\n        const queryParam = new URLSearchParams(location.search).get(\"query\");\n        if (queryParam === null) {\n          setSearch(\"\");\n          setSearchEntries(null);\n        } else {\n          setSearch(queryParam);\n          setSearchEntries(\n            (await queryProfileBySearch({ search: queryParam })).results\n          );\n        }\n      }\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/profiles/search?query=${search.trim()}`);\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Explore Profiles</h1>\n      </div>\n      {[\"influence\", \"earnings\", \"search\"].includes(view) && (\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n          <div>\n            <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4\">\n              <Nav.Item className=\"ms-auto text-center\">\n                <Nav.Link href=\"/profiles\" active={view === \"influence\"}>\n                  <FontAwesomeIcon icon={faBullseye} className=\"me-2\" />\n                  Influence\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"text-center\">\n                <Nav.Link\n                  href=\"/profiles/earnings\"\n                  active={view === \"earnings\"}\n                >\n                  <FontAwesomeIcon icon={faCoins} className=\"me-2\" />\n                  Earnings\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item className=\"me-auto text-center\">\n                <Nav.Link href=\"/profiles/search\" active={view === \"search\"}>\n                  <FontAwesomeIcon icon={faSearch} className=\"me-2\" />\n                  Search\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <hr className=\"light-border\" />\n          </div>\n          <div>\n            {[\"influence\", \"earnings\"].includes(view) && profileList !== null && (\n              <Tab.Content>\n                <ul className=\"profile-cards-container mt-4\">\n                  {profileList !== null &&\n                    profileList.map((x) => (\n                      <a key={x} href={`/profile/${x}`}>\n                        <ProfileCard address={x} />\n                      </a>\n                    ))}\n                </ul>\n              </Tab.Content>\n            )}\n            {[\"search\"].includes(view) && (\n              <Tab.Content>\n                <div className=\"d-flex flex-column\">\n                  <Form\n                    style={{ maxWidth: \"584px\", width: \"100%\" }}\n                    onSubmit={doSearch}\n                    className=\"mx-auto\"\n                  >\n                    <InputGroup className=\"mt-4\">\n                      <InputGroup.Text id=\"basic-addon1\">\n                        <FontAwesomeIcon icon={faSearch} />\n                      </InputGroup.Text>\n                      {search !== null && (\n                        <FormControl\n                          className=\"search-box\"\n                          placeholder={\"Search in profiles...\"}\n                          value={search}\n                          autoFocus=\"true\"\n                          onChange={(e) => {\n                            if (e.target.value.length <= 50) {\n                              setSearch(e.target.value);\n                            }\n                          }}\n                        />\n                      )}\n                      {search !== \"\" && (\n                        <Button variant=\"primary\" type=\"submit\">\n                          <FontAwesomeIcon icon={faArrowRight} />\n                        </Button>\n                      )}\n                    </InputGroup>\n                  </Form>\n                  <ul className=\"profile-cards-container mt-4\">\n                    {searchEntries === null && (\n                      <div className=\"d-flex flex-row\">\n                        <p className=\"mx-auto text-muted\" animation=\"border\">\n                          Search in profiles using the search box above\n                        </p>\n                      </div>\n                    )}\n                    {searchEntries === undefined && (\n                      <div className=\"d-flex flex-row\">\n                        <Spinner className=\"mx-auto\" animation=\"border\" />\n                      </div>\n                    )}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.map((x) => (\n                        <a key={x} href={`/profile/${x}`}>\n                          <ProfileCard address={x} />\n                        </a>\n                      ))}\n                    {searchEntries !== undefined &&\n                      searchEntries !== null &&\n                      searchEntries.length === 0 && (\n                        <div className=\"d-flex flex-row\">\n                          <p className=\"mx-auto text-muted\" animation=\"border\">\n                            No matching profile\n                          </p>\n                        </div>\n                      )}\n                  </ul>\n                </div>\n              </Tab.Content>\n            )}\n          </div>\n        </Tab.Container>\n      )}\n    </div>\n  );\n}\n\nexport default ExploreProfilesController;\n","import {\n  Tab,\n  Nav,\n  Button,\n  InputGroup,\n  FormControl,\n  Form,\n  Spinner,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport {\n  queryNftBySearch,\n  queryCollectionBySearch,\n  queryProfileBySearch,\n} from \"./api\";\nimport { useLocation } from \"react-router-dom\";\nimport CollectionCard from \"./CollectionCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBolt,\n  faList,\n  faSearch,\n  faArrowRight,\n  faUserCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport NFTCard from \"./NFTCard\";\nimport ProfileCard from \"./ProfileCard\";\n\nfunction SearchController() {\n  const location = useLocation();\n\n  // For search view.\n  const [search, setSearch] = React.useState(\"\");\n  const [searchSubView, setSearchSubView] = React.useState(null);\n  const [searchNfts, setSearchNfts] = React.useState(null);\n  const [searchCollections, setSearchCollections] = React.useState(null);\n  const [searchProfiles, setSearchProfiles] = React.useState(null);\n\n  React.useEffect(() => {\n    (async () => {\n      setSearch(new URLSearchParams(location.search).get(\"query\"));\n      await doChangeSearchSubview(\"nfts\");\n    })();\n  }, []);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (search.trim() !== \"\") {\n      window.location.assign(`/search?query=${search.trim()}`);\n    }\n  };\n\n  const doChangeSearchSubview = async (subview) => {\n    // TODO: Figure out a more elegant way to retrieve this from the existing react state.\n    const search = new URLSearchParams(location.search).get(\"query\");\n\n    setSearchSubView(subview);\n\n    if (subview === \"nfts\" && searchNfts === null) {\n      setSearchNfts((await queryNftBySearch({ search: search })).results);\n    }\n    if (subview === \"collections\" && searchCollections === null) {\n      setSearchCollections(\n        (await queryCollectionBySearch({ search: search })).results\n      );\n    }\n    if (subview === \"profiles\" && searchProfiles === null) {\n      setSearchProfiles(\n        (await queryProfileBySearch({ search: search })).results\n      );\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div\n        className=\"mx-auto mt-4 accent text-center d-flex flex-column\"\n        style={{ maxWidth: \"584px\", width: \"100%\" }}\n      >\n        <h1>Search 🔍</h1>\n        <Form onSubmit={doSearch}>\n          <InputGroup className=\"mt-4\">\n            <InputGroup.Text id=\"basic-addon1\">\n              <FontAwesomeIcon icon={faSearch} />\n            </InputGroup.Text>\n            {search !== null && (\n              <FormControl\n                className=\"search-box\"\n                placeholder={\"Search NFTs, collections, profiles...\"}\n                value={search}\n                onChange={(e) => {\n                  if (e.target.value.length <= 50) {\n                    setSearch(e.target.value);\n                  }\n                }}\n              />\n            )}\n            {search !== \"\" && (\n              <Button variant=\"primary\" type=\"submit\">\n                <FontAwesomeIcon icon={faArrowRight} />\n              </Button>\n            )}\n          </InputGroup>\n        </Form>\n      </div>\n      <Tab.Container\n        id=\"left-tabs-example\"\n        activeKey={searchSubView}\n        onSelect={doChangeSearchSubview}\n      >\n        <div>\n          <Nav variant=\"tabs\" className=\"custom-nav-tabs mt-4 constant-width\">\n            <Nav.Item className=\"ms-auto text-center\">\n              <Nav.Link eventKey=\"nfts\">\n                <FontAwesomeIcon icon={faList} className=\"me-2\" />\n                NFTs\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item className=\"text-center\">\n              <Nav.Link eventKey=\"collections\">\n                <FontAwesomeIcon icon={faBolt} className=\"me-2\" />\n                Collections\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item className=\"me-auto text-center\">\n              <Nav.Link eventKey=\"profiles\">\n                <FontAwesomeIcon icon={faUserCircle} className=\"me-2\" />\n                Profiles\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <hr className=\"light-border\" />\n        </div>\n        <div>\n          <Tab.Content>\n            <Tab.Pane eventKey=\"nfts\">\n              <ul className=\"cards-container mt-4\">\n                {searchNfts === null && (\n                  <div className=\"d-flex flex-row\">\n                    <Spinner className=\"mx-auto\" animation=\"border\" />\n                  </div>\n                )}\n                {searchNfts !== null &&\n                  searchNfts.map((x) => (\n                    <a key={x.address} href={`/nft/${x}`}>\n                      <NFTCard address={x} />\n                    </a>\n                  ))}\n                {searchNfts !== null && searchNfts.length === 0 && (\n                  <div className=\"d-flex flex-row\">\n                    <p className=\"mx-auto text-muted\" animation=\"border\">\n                      No matching NFTs\n                    </p>\n                  </div>\n                )}\n              </ul>\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"collections\">\n              <ul className=\"collection-cards-container mt-4\">\n                {searchCollections === null && (\n                  <div className=\"d-flex flex-row\">\n                    <Spinner className=\"mx-auto\" animation=\"border\" />\n                  </div>\n                )}\n                {searchCollections !== null &&\n                  searchCollections.map((x) => (\n                    <a key={x} href={`/collection/${x}`}>\n                      <CollectionCard handle={x} />\n                    </a>\n                  ))}\n                {searchCollections !== null && searchCollections.length === 0 && (\n                  <div className=\"d-flex flex-row\">\n                    <p className=\"mx-auto text-muted\" animation=\"border\">\n                      No matching collection\n                    </p>\n                  </div>\n                )}\n              </ul>\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"profiles\">\n              <ul className=\"profile-cards-container mt-4\">\n                {searchProfiles === null && (\n                  <div className=\"d-flex flex-row\">\n                    <Spinner className=\"mx-auto\" animation=\"border\" />\n                  </div>\n                )}\n                {searchProfiles !== null &&\n                  searchProfiles.map((x) => (\n                    <a key={x} href={`/profile/${x}`}>\n                      <ProfileCard address={x} />\n                    </a>\n                  ))}\n                {searchProfiles !== null && searchProfiles.length === 0 && (\n                  <div className=\"d-flex flex-row\">\n                    <p className=\"mx-auto text-muted\" animation=\"border\">\n                      No matching profile\n                    </p>\n                  </div>\n                )}\n              </ul>\n            </Tab.Pane>\n          </Tab.Content>\n        </div>\n      </Tab.Container>\n    </div>\n  );\n}\n\nexport default SearchController;\n","export default __webpack_public_path__ + \"static/media/dingocoin.15331900.png\";","import { Button, Spinner } from \"react-bootstrap\";\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction SideScroller(props) {\n  const scrollContainerRef = React.createRef();\n  const itemsContainerRef = React.createRef();\n  const [canScrollLeft, setCanScrollLeft] = React.useState(false);\n  const [canScrollRight, setCanScrollRight] = React.useState(true);\n\n  const onScroll = (e) => {\n    const firstItem = itemsContainerRef.current.children[0];\n    const firstItemLeft = firstItem.offsetLeft;\n\n    const lastItem =\n      itemsContainerRef.current.children[\n        itemsContainerRef.current.children.length - 1\n      ];\n    const lastItemRight = lastItem.offsetLeft + lastItem.offsetWidth;\n\n    const borderLeft = scrollContainerRef.current.scrollLeft;\n    const borderRight = borderLeft + scrollContainerRef.current.offsetWidth;\n\n    setCanScrollLeft(firstItemLeft < borderLeft);\n    setCanScrollRight(lastItemRight > borderRight);\n  };\n\n  const scrollLeft = (e) => {\n    const containerWidth = scrollContainerRef.current.offsetWidth;\n    const itemWidth = itemsContainerRef.current.children[0].offsetWidth;\n    const scrollCount = Math.floor(containerWidth / itemWidth);\n    scrollContainerRef.current.scrollBy({\n      left: -scrollCount * itemWidth,\n      behavior: \"smooth\",\n    });\n  };\n\n  const scrollRight = (e) => {\n    const containerWidth = scrollContainerRef.current.offsetWidth;\n    const itemWidth = itemsContainerRef.current.children[0].offsetWidth;\n    const scrollCount = Math.floor(containerWidth / itemWidth);\n    scrollContainerRef.current.scrollBy({\n      left: scrollCount * itemWidth,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <div className=\"side-scroll\">\n      <div className=\"scroll-off\">\n        <div className=\"scroll-on\" ref={scrollContainerRef} onScroll={onScroll}>\n          <ul ref={itemsContainerRef}>\n            {props.items === null && (\n              <li>\n                <div\n                  style={{ height: props.defaultHeight, width: \"100%\" }}\n                  className=\"d-flex flex-row\"\n                >\n                  <Spinner className=\"mb-auto\" animation=\"border\" />\n                </div>\n              </li>\n            )}\n            {props.items !== null &&\n              props.items.map((x) => props.itemTemplate(x))}\n          </ul>\n        </div>\n      </div>\n      {canScrollLeft && (\n        <Button className=\"control float-left\" onClick={scrollLeft}>\n          <FontAwesomeIcon icon={faAngleLeft} />\n        </Button>\n      )}\n      {canScrollRight && (\n        <Button className=\"control float-right\" onClick={scrollRight}>\n          <FontAwesomeIcon icon={faAngleRight} />\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default SideScroller;\n","import React from \"react\";\n\nfunction FadeInSection(props) {\n  const [isVisible, setVisible] = React.useState(false);\n  const domRef = React.useRef();\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n  return (\n    <div\n      className={`fade-in-section ${isVisible ? \"is-visible\" : \"\"}`}\n      ref={domRef}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default FadeInSection;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { queryCollectionByTradeCountScaled, queryNft } from \"./api\";\nimport SideScroller from \"./SideScroller\";\nimport CollectionCard from \"./CollectionCard\";\nimport NFTCard from \"./NFTCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPiggyBank,\n  faLock,\n  faHandHoldingUsd,\n  faWallet,\n  faChevronDown,\n  faHandSparkles,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CustomDivider from \"./CustomDivider\";\nimport FadeInSection from \"./FadeInSection\";\nimport { getPlatformStats } from \"./api\";\nimport { toLocaleString } from \"./utils\";\n\nfunction Main() {\n  const [platformStats, setPlatformStats] = React.useState(null);\n  const [hotCollections, setHotCollections] = React.useState(null);\n  const [newNfts, setNewNfts] = React.useState(null);\n  const [recentNfts, setRecentNfts] = React.useState(null);\n\n  React.useEffect(() => {\n    (async () => {\n      setHotCollections((await queryCollectionByTradeCountScaled(20)).results);\n      setNewNfts(\n        (\n          await queryNft({\n            key: \"listHeight\",\n            direction: \"DESC\",\n            limit: 25,\n            offset: 0,\n          })\n        ).results\n      );\n      setRecentNfts(\n        (\n          await queryNft({\n            key: \"tradeHeight\",\n            direction: \"DESC\",\n            limit: 25,\n            offset: 0,\n          })\n        ).results\n      );\n    })();\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      // Always use.\n      setPlatformStats(await getPlatformStats());\n    })();\n  }, []);\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <div className=\"mt-4 mb-2 p-4\">\n        <h2 className=\"accent overview-title\">Hot collections 🔥</h2>\n        <SideScroller\n          defaultHeight=\"16.2rem\"\n          items={hotCollections}\n          itemTemplate={(x) => (\n            <li key={x}>\n              <a href={`/collection/${x}`}>\n                <CollectionCard handle={x} />\n              </a>\n            </li>\n          )}\n        />\n      </div>\n      <div className=\"mb-2 p-4\">\n        <h2 className=\"accent overview-title\">Newly listed ✨</h2>\n        <SideScroller\n          defaultHeight=\"24.8rem\"\n          items={newNfts}\n          itemTemplate={(x) => (\n            <li key={x}>\n              <a href={`/nft/${x}`}>\n                <NFTCard address={x} />\n              </a>\n            </li>\n          )}\n        />\n      </div>\n      <div className=\"mb-2 p-4\">\n        <h2 className=\"accent overview-title\">Recently sold 💰</h2>\n        <SideScroller\n          defaultHeight=\"24.8rem\"\n          items={recentNfts}\n          itemTemplate={(x) => (\n            <li key={x}>\n              <a href={`/nft/${x}`}>\n                <NFTCard address={x} />\n              </a>\n            </li>\n          )}\n        />\n      </div>\n      <div className=\"d-flex flex-row\">\n        <div className=\"isometric-holder\">\n          <div className=\"isometric\"></div>\n        </div>\n      </div>\n      <h1 className=\"mx-auto mt-5 accent\">Dingocoin NFT Platform</h1>\n      <p className=\"mx-auto mb-4\">The next generation of NFTs</p>\n      <div className=\"d-flex flex-row text-center justify-content-center flex-wrap d-none d-md-flex d-lg-flex d-xl-flex\">\n        <div className=\"project-card\">\n          <div className=\"logo-holder\">\n            <FontAwesomeIcon className=\"faicon\" icon={faPiggyBank} />\n          </div>\n          <h5>Ultra-low Costs</h5>\n          <p>Create and trade NFTs with {\"<$0.001\"} gas fees</p>\n        </div>\n        <div className=\"project-card\">\n          <div className=\"logo-holder\">\n            <FontAwesomeIcon className=\"faicon\" icon={faHandHoldingUsd} />\n          </div>\n          <h5>On-chain Trading</h5>\n          <p>You receive earnings and royalties immediately</p>\n        </div>\n        <div className=\"project-card\">\n          <div className=\"logo-holder\">\n            <FontAwesomeIcon className=\"faicon\" icon={faLock} />\n          </div>\n          <h5>Cryptographically Unique</h5>\n          <p>The same content can never be reused in another NFT</p>\n        </div>\n      </div>\n      <div className=\"d-flex flex-row projectFactsWrap\">\n        <div className=\"item mt-2 mx-auto\">\n          <p className=\"number\">\n            {platformStats === null && \"-\"}\n            {platformStats !== null && (\n              `${toLocaleString(platformStats.totalVolume)} DINGO`\n            )}\n          </p>\n          <span></span>\n          <p>Total trade volume</p>\n        </div>\n      </div>\n      <h2 className=\"text-center mt-5 accent\">GET STARTED</h2>\n      <CustomDivider />\n      <FadeInSection>\n        <div className=\"getting-started-section mt-4 mb-5 mx-auto px-5\">\n          <div className=\"banner-holder\">\n            <FontAwesomeIcon className=\"faicon\" icon={faWallet} />\n          </div>\n          <h4 className=\"mt-3 mb-4\">1. Get browser wallet</h4>\n          <p className=\"text-center\">\n            You need Dingocoin's browser wallet to create and trade NFTs. Take\n            less than a minute to set this up.\n          </p>\n          <a href=\"https://dingocoin.org\" target=\"_blank\">\n            <Button className=\"popup-button px-4 py-2 mt-2\" variant=\"primary\">\n              Visit Dingocoin\n            </Button>\n          </a>\n        </div>\n      </FadeInSection>\n      <FadeInSection>\n        <div className=\"guide mx-auto\">\n          <span>\n            <FontAwesomeIcon icon={faChevronDown} />\n          </span>\n        </div>\n      </FadeInSection>\n      <FadeInSection>\n        <div className=\"getting-started-section mt-5 mb-5 mx-auto px-5\">\n          <div className=\"banner-holder\">\n            <span>✨</span>\n          </div>\n          <h4 className=\"mt-3 mb-4\">2. Create NFT</h4>\n          <p className=\"text-center\">\n            Upload your awesome work and start selling it as an NFT today.\n          </p>\n          <a href=\"/create\">\n            <Button className=\"popup-button px-4 py-2 mt-2\" variant=\"primary\">\n              Create your NFT\n            </Button>\n          </a>\n        </div>\n      </FadeInSection>\n      <FadeInSection>\n        <div className=\"guide mx-auto\">\n          <span>\n            <FontAwesomeIcon icon={faChevronDown} />\n          </span>\n        </div>\n      </FadeInSection>\n      <FadeInSection>\n        <div className=\"getting-started-section mt-5 mb-5 mx-auto px-5\">\n          <div className=\"banner-holder\">\n            <span>💰</span>\n          </div>\n          <h4 className=\"mt-3 mb-4\">3. Earn</h4>\n          <p className=\"text-center\">\n            You receive earnings and royalties immediately upon sale. Sit back\n            and relax, and watch your glorious work take off.\n          </p>\n        </div>\n      </FadeInSection>\n      <FadeInSection>\n        <div className=\"guide mx-auto\">\n          <span>\n            <FontAwesomeIcon icon={faChevronDown} />\n          </span>\n        </div>\n      </FadeInSection>\n      <FadeInSection>\n        <div className=\"getting-started-section mt-5 mb-5 mx-auto px-5\">\n          <div className=\"banner-holder\">\n            <span>🔍</span>\n          </div>\n          <h4 className=\"mt-3 mb-4\">4. Explore</h4>\n          <p className=\"text-center\">\n            Check out the phenomenal creations by others. Buy and sell work\n            worthy of praise and appreciation.\n          </p>\n          <a href=\"/collections\">\n            <Button className=\"popup-button px-4 py-2 mt-2\" variant=\"primary\">\n              Explore collections\n            </Button>\n          </a>\n        </div>\n      </FadeInSection>\n    </div>\n  );\n}\n\nexport default Main;\n","import \"./App.scss\";\nimport CreateController from \"./CreateController\";\nimport ProfileController from \"./ProfileController\";\nimport ExploreCollectionsController from \"./ExploreCollectionsController\";\nimport ExploreNftsController from \"./ExploreNftsController\";\nimport ExploreProfilesController from \"./ExploreProfilesController\";\nimport SearchController from \"./SearchController\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  NavItem,\n  NavLink,\n  Dropdown,\n  Container,\n  Form,\n  FormControl,\n  Button,\n  Modal,\n  InputGroup,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleRight,\n  faList,\n  faUserCircle,\n  faThLarge,\n  faShoppingBag,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport DingocoinLogo from \"./assets/img/dingocoin.png\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from \"react-router-dom\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const [location, setLocation] = React.useState(null);\n  React.useEffect(() => {\n    setLocation(window.location.pathname);\n  }, []);\n  React.useEffect(() => {}, [location]);\n\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [searchErrorShow, setSearchErrorShow] = React.useState(null);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (searchQuery.trim() !== \"\") {\n      window.location.assign(`/search?query=${searchQuery.trim()}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"navbar px-4 py-2\" bg=\"dark\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand href=\"/\" className=\"navbar-brand align-items-center\">\n          <img alt=\"\" src={DingocoinLogo} />\n          <span className=\"d-none d-lg-block d-xl-block\">DINGOCOIN</span>\n          <span className=\"navbar-brand-subtitle\"> NFT Platform</span>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav className=\"ms-auto text-center\">\n            <Form className=\"d-flex\" onSubmit={doSearch}>\n              <InputGroup\n                style={{\n                  minWidth: \"20rem\",\n                }}\n              >\n                <FormControl\n                  className=\"search-box my-1\"\n                  placeholder={\"Search NFTs, collections, profiles...\"}\n                  value={searchQuery}\n                  onChange={(e) => {\n                    if (e.target.value.length <= 50) {\n                      setSearchQuery(e.target.value);\n                    }\n                  }}\n                />\n                {searchQuery !== \"\" && (\n                  <Button variant=\"secondary\" type=\"submit\">\n                    <FontAwesomeIcon icon={faAngleRight}></FontAwesomeIcon>\n                  </Button>\n                )}\n              </InputGroup>\n            </Form>\n            <Nav.Link href=\"/\">\n              <span className=\"align-middle\">\n                <nobr>Home</nobr>\n              </span>\n            </Nav.Link>\n            <Dropdown as={NavItem} className=\"navbar-important\">\n              <Dropdown.Toggle as={NavLink}>\n                <span className=\"align-middle\">Explore</span>\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item href=\"/collections\">\n                  <FontAwesomeIcon className=\"me-2 accent\" icon={faThLarge} />\n                  Collections\n                </Dropdown.Item>\n                <Dropdown.Item href=\"/nfts\">\n                  <FontAwesomeIcon className=\"me-2 accent\" icon={faList} />\n                  NFTs\n                </Dropdown.Item>\n                <Dropdown.Item href=\"/profiles\">\n                  <FontAwesomeIcon\n                    className=\"me-2 accent\"\n                    icon={faUserCircle}\n                  />\n                  Profiles\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n            <Nav.Link href=\"/create\">\n              <span className=\"align-middle\">\n                <nobr>Create</nobr>\n              </span>\n            </Nav.Link>\n            <Nav.Link href=\"https://docs.google.com/forms/d/1l43ZZUbnboaqBbnhXHByLJGupor4-j-zSeLvdBNkU6Y/edit?ts=629be28e\" target=\"_blank\" rel=\"noreffere\">\n              <span className=\"align-middle\">\n                <nobr>Report</nobr>\n              </span>\n            </Nav.Link>\n            <Nav.Link href=\"https://dingocoin.org\" target=\"_blank\">\n              <span className=\"align-middle\">\n                <nobr>Visit Dingocoin</nobr>\n              </span>\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <section className=\"section-content\">\n        <Router>\n          <Routes>\n            <Route index element={<Main />} />\n            <Route path=\"/profile\">\n              <Route path=\":profileAddress\" element={<ProfileController />}>\n                <Route path=\"owned\" element={<ProfileController />} />\n                <Route path=\"stats\" element={<ProfileController />} />\n              </Route>\n            </Route>\n            <Route\n              path=\"/collection/:collectionHandle\"\n              element={<ProfileController />}\n            />\n            <Route path=\"/nft/:nftAddress\" element={<ProfileController />} />\n            <Route\n              path=\"/collections\"\n              element={<ExploreCollectionsController />}\n            >\n              <Route path=\"hot\" element={<ExploreCollectionsController />} />\n              <Route path=\"top\" element={<ExploreCollectionsController />} />\n              <Route path=\"search\" element={<ExploreCollectionsController />} />\n            </Route>\n            <Route path=\"/nfts\" element={<ExploreNftsController />}>\n              <Route path=\"search\" element={<ExploreNftsController />} />\n            </Route>\n            <Route path=\"/profiles\" element={<ExploreProfilesController />}>\n              <Route path=\"earnings\" element={<ExploreProfilesController />} />\n              <Route path=\"search\" element={<ExploreProfilesController />} />\n            </Route>\n            <Route path=\"/search\" element={<SearchController />} />\n            <Route path=\"/create\" element={<CreateController />} />\n            <Route element={<Navigate to=\"/\" />} />\n          </Routes>\n        </Router>\n      </section>\n      <section>\n        <div className=\"justify-content-center section-footer align-items-center\">\n          <h6>Copyright © The Dingocoin Project 2021-2022</h6>\n        </div>\n      </section>\n\n      <Modal\n        size=\"md\"\n        centered\n        show={searchErrorShow}\n        onHide={() => setSearchErrorShow(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>NFT/profile not found</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container className=\"text-center my-2\">\n            <p>No results found.</p>\n            <Button className=\"mx-2\" onClick={() => setSearchErrorShow(false)}>\n              Close\n            </Button>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n","// Assets.\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CustomDivider() {\n  return (\n    <div className=\"divider-custom\">\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n      <div className=\"divider-custom-icon mt-2 mb-2\">\n        <FontAwesomeIcon icon={faAngleDown} />\n      </div>\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n    </div>\n  );\n}\n\nexport default CustomDivider;\n","import { Modal, Container, Button } from \"react-bootstrap\";\nimport React from \"react\";\n\nfunction GetWalletModal(props) {\n  return (\n    <Modal\n      size=\"md\"\n      centered\n      show={props.show}\n      onHide={props.onHide}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Browser Wallet required\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container className=\"text-center my-2\">\n          <p>You need a Dingocoin browser wallet for this.<br/>Set it up in less than a minute.</p>\n          <a className=\"my-1\" href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Chrome wallet</Button>\n          </a>\n          <a className=\"my-1\" href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Firefox wallet</Button>\n          </a>\n        </Container>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default GetWalletModal;\n"],"sourceRoot":""}