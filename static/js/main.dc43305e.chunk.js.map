{"version":3,"sources":["CreateController.jsx","utils.js","CustomDivider.jsx","storage.js","NFTCard.jsx","NFTController.jsx","ProfileController.jsx","ExploreController.jsx","assets/img/dingocoin.png","Main.jsx","App.jsx","index.jsx","api.js","GetWalletModal.jsx"],"names":["toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","error","CreateController","React","useState","content","setContent","contentError","setContentError","listingPrice","setListingPrice","royalty","setRoyalty","name","setName","description","setDescription","preview","setPreview","previewError","setPreviewError","tags","setTags","pending","setPending","success","setSuccess","address","setAddress","getWalletShow","setGetWalletShow","useEffect","size","document","title","a","Buffer","f","from","isPng","sizeOf","width","height","doSubmit","e","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","undefined","window","dingo","getListTransaction","Hex","Sha256","Base64","parse","stringify","toSatoshi","Math","floor","contentHash","price","getListTransactionResponse","requestSignTransaction","vouts","signed","sendListTransaction","transaction","sendListTransactionResponse","console","log","className","style","maxWidth","onSubmit","Group","Label","Control","type","onChange","target","files","isInvalid","isValid","Text","value","placeholder","length","match","parseInt","toFixed","Range","textAlign","variant","disabled","animation","href","show","onHide","x","Error","BigInt","Web3Utils","toWei","toString","satoshiToLocaleString","isNegative","integer","replace","post","link","data","controller","AbortController","setTimeout","abort","fetch","withCredentials","method","signal","headers","Accept","body","JSON","json","CustomDivider","icon","faAngleDown","get","getMeta","response","status","getPreviewLink","getState","getProfile","owner","getProfileLists","getExplore","key","NFTCard","props","domRef","useRef","isVisible","setVisible","previewLink","setPreviewLink","setPrice","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve","meta","state","Card","ref","role","Img","src","loading","Body","Title","Subtitle","NFTController","setMeta","setState","ownerProfile","setOwnerProfile","creatorProfile","setCreatorProfile","busy","setBusy","resellPrice","setResellPrice","resellPriceError","setResellPriceError","buyResult","setBuyResult","URLSearchParams","location","search","m","s","creator","getBusy","doDownload","timestamp","Date","now","message","requestSign","signResult","getContent","signature","open","doBuy","getBuyTransaction","vins","sendBuyTransaction","Container","Row","onClick","display","stats","volume","txid","rel","Form","Button","GetWalletModal","ProfileController","editShow","setEditShow","nameRef","createRef","profile","setProfile","profileLists","setProfileLists","p","pList","payload","updateProfile","reload","Tabs","defaultActiveKey","createdNfts","Tab","eventKey","map","ownedNfts","Modal","centered","onEntered","focus","Header","closeButton","id","ExploreController","newList","setNewList","volumeList","setVolumeList","byNew","byVolume","Main","Col","fluid","faPiggyBank","faHandHoldingUsd","faLock","App","setLocation","pathname","searchQuery","setSearchQuery","searchErrorShow","setSearchErrorShow","doSearch","trim","assign","Navbar","bg","expand","sticky","Brand","alt","DingocoinLogo","Toggle","Collapse","Nav","paddingRight","Link","FormControl","borderTopRightRadius","borderBottomRightRadius","minWidth","borderTopLeftRadius","borderBottomLeftRadius","faAngleRight","path","element","ReactDOM","render","getElementById","API_URL"],"mappings":"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","file":"static/js/main.dc43305e.chunk.js","sourcesContent":["import { Container, Row, Button, Col, Form, Spinner } from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport isPng from \"is-png\";\nimport sizeOf from \"buffer-image-size\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport { sendListTransaction, getListTransaction } from \"./api\";\nimport { toSatoshi } from \"./utils\";\n\nconst MAX_CONTENT_SIZE = 10 * 1e6; // 1 MB.\nconst MAX_PREVIEW_SIZE = 100 * 1e5; // 1 kB.\n\nconst toBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(\",\")[1]);\n    reader.onerror = (error) => reject(error);\n  });\n\nfunction CreateController() {\n  const [content, setContent] = React.useState(null);\n  const [contentError, setContentError] = React.useState(\"\");\n  const [listingPrice, setListingPrice] = React.useState(\"1000\");\n  const [royalty, setRoyalty] = React.useState(0);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [preview, setPreview] = React.useState(null);\n  const [previewError, setPreviewError] = React.useState(\"\");\n  const [tags, setTags] = React.useState(\"\");\n\n  const [pending, setPending] = React.useState(false);\n  const [success, setSuccess] = React.useState(null);\n  const [address, setAddress] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  React.useEffect(() => {\n    if (content === null) {\n      setContentError(\"NFT content required\");\n      return;\n    } else if (content.size > MAX_CONTENT_SIZE) {\n      setContentError(\"NFT content size limit exceeded (max 10 MB)\");\n      return;\n    } else {\n      setContentError(\"\");\n    }\n  }, [content]);\n\n  React.useEffect(() => {\n    document.title = `Create NFT`;\n    (async () => {\n      if (preview !== null) {\n        const f = Buffer.from(await toBase64(preview), \"base64\");\n        if (!isPng(f)) {\n          setPreviewError(\"Cover image must be a PNG\");\n        } else if (preview.size > MAX_PREVIEW_SIZE) {\n          setPreviewError(\"Cover file size limit exceeded (max 100 KB)\");\n        } else if (sizeOf(f).width !== 256 || sizeOf(f).height !== 256) {\n          setPreviewError(\"Cover image must have dimension 256x256\");\n        } else {\n          setPreviewError(\"\");\n        }\n      } else {\n        setPreviewError(\"Cover image required\");\n      }\n    })();\n  }, [preview]);\n\n  const doSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const getListTransactionResponse = await getListTransaction({\n      // CryptoJS expects inputs to be a utf8 string. So we encode our data\n      // into that.\n      contentHash: Hex.stringify(Sha256(Base64.parse(await toBase64(content)))),\n      price: toSatoshi(listingPrice),\n      royalty: 25 + Math.floor((royalty * 75) / 100),\n    });\n    if (\n      getListTransactionResponse === null ||\n      \"error\" in getListTransactionResponse\n    ) {\n      return;\n    }\n\n    const signed = (\n      await window.dingo.requestSignTransaction(\n        [],\n        getListTransactionResponse.vouts\n      )\n    ).result;\n\n    setPending(true);\n    const sendListTransactionResponse = await sendListTransaction({\n      content: await toBase64(content),\n      preview: preview === null ? null : await toBase64(preview),\n      name: name,\n      description: description,\n      tags: tags,\n      transaction: signed,\n    });\n    console.log(sendListTransactionResponse);\n    if (\n      sendListTransactionResponse === null ||\n      sendListTransactionResponse.error !== undefined\n    ) {\n      setSuccess(false);\n      return;\n    }\n\n    setPending(false);\n    setSuccess(true);\n    setAddress(sendListTransactionResponse.address);\n  };\n\n  return (\n    <div>\n      <Container className=\"App-header\">\n        <Row>\n          <h1 className=\"mt-4\">Create NFT</h1>\n          <CustomDivider />\n        </Row>\n      </Container>\n      <Container style={{ maxWidth: \"900px\" }}>\n        <Row>\n          <Col>\n            {(success === null || success === false) && (\n              <Form onSubmit={doSubmit}>\n                <Form.Group className=\"mb-3 mt-4\">\n                  <Form.Label>\n                    <b>Cover image (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setPreview(e.target.files[0])}\n                    isInvalid={previewError !== null && previewError !== \"\"}\n                    isValid={previewError === \"\"}\n                  />\n                  {previewError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {previewError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    A 256x256 PNG cover image for your NFT (max 100 KB). You\n                    can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Content (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    onChange={(e) => setContent(e.target.files[0])}\n                    isInvalid={contentError !== null && contentError !== \"\"}\n                    isValid={contentError === \"\"}\n                  />\n                  {contentError && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        {contentError}\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    The NFT will be locked uniquely to this file (max 10 MB).\n                    You can only use it once. Only the current owner of the NFT\n                    can download this file. It does not have to be the same as\n                    the cover. You can use any file you want, of any type.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Name (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={name}\n                    placeholder=\"Max 40 characters\"\n                    onChange={(e) => setName(e.target.value)}\n                    isValid={name !== \"\" && name.length <= 40}\n                    isInvalid={name !== \"\" && name.length > 40}\n                  />\n                  {name.length > 40 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Name too long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Description (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={description}\n                    placeholder=\"Max 500 characters\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    isValid={description !== \"\" && description.length <= 500}\n                    isInvalid={description !== \"\" && description.length > 500}\n                  />\n                  {description.length > 500 && (\n                    <div>\n                      <Form.Text className=\"input-error\">\n                        Description long\n                      </Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>NFT Tags (optional)</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={tags}\n                    placeholder=\"Max 100 characters; space separated\"\n                    onChange={(e) => setTags(e.target.value)}\n                    isValid={tags !== \"\" && tags.length <= 100}\n                    isInvalid={tags !== \"\" && tags.length > 100}\n                  />\n                  {tags.length > 100 && (\n                    <div>\n                      <Form.Text className=\"input-error\">Tags long</Form.Text>\n                    </div>\n                  )}\n                  <Form.Text className=\"text-muted\">\n                    You can't change this after creating the NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3 mt-2\">\n                  <Form.Label>\n                    <b>Listing price (*required)</b>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={listingPrice}\n                    onChange={(e) => {\n                      if (\n                        e.target.value.match(/^[0-9]+$/) &&\n                        parseInt(e.target.value) >= 1\n                      ) {\n                        setListingPrice(e.target.value);\n                      } else {\n                        setListingPrice(\"1000\");\n                      }\n                    }}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Initial selling price for your NFT in DINGO (min. 1 DINGO).\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>\n                    <b>Creator royalty (*required): </b>\n                    {(2.5 + Math.floor((royalty * 75) / 100) / 10).toFixed(1) +\n                      \"%\"}\n                  </Form.Label>\n                  <Form.Range\n                    value={royalty}\n                    onChange={(e) => setRoyalty(e.target.value)}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    Royalty paid to you for every transaction of this NFT.\n                  </Form.Text>\n                </Form.Group>\n\n                <div style={{ textAlign: \"center\" }}>\n                  {success === null && pending === false && (\n                    <Button\n                      className=\"popup-button mt-4 px-4\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                      disabled={\n                        content === null ||\n                        contentError !== \"\" ||\n                        (preview !== null && previewError !== \"\")\n                      }\n                    >\n                      Create NFT\n                    </Button>\n                  )}\n                  {success === null && pending === true && (\n                    <div>\n                      <Spinner animation=\"border\" />\n                      <p>\n                        Transaction pending...\n                        <br />\n                        (DO NOT CLOSE THIS PAGE)\n                      </p>\n                    </div>\n                  )}\n                  {success === false && (\n                    <div>\n                      <p>\n                        Transaction failed!\n                        <br />\n                        Please reload this page and try again\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </Form>\n            )}\n            {success === true && (\n              <div style={{ textAlign: \"center\" }}>\n                {\" \"}\n                <h3>NFT Created!</h3>\n                <p>\n                  NFT Address: <b>{address}</b>\n                </p>\n                <div style={{ textAlign: \"center\" }}>\n                  <a href={\"/nft?address=\" + address}>\n                    <Button className=\"popup-button px-4\" variant=\"primary\">\n                      View NFT ►\n                    </Button>\n                  </a>\n                </div>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n    </div>\n  );\n}\n\nexport default CreateController;\n","/* global BigInt */\n\nimport Web3Utils from \"web3-utils\";\n\nconst toSatoshi = (x) => {\n  if (x === null || x === undefined || typeof x !== \"string\" || x === \"\") {\n    throw new Error(\"Expected string input\");\n  }\n  return (BigInt(Web3Utils.toWei(x, \"gwei\")) / 10n).toString();\n};\n\nconst satoshiToLocaleString = (x) => {\n  const isNegative = BigInt(x) < 0n;\n  if (isNegative) {\n    x = -x;\n  }\n  const integer = (BigInt(x) / 100000000n).toString();\n  return (\n    (isNegative ? \"-\" : \"\") + `${integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`\n  );\n};\n\nconst post = async (link, data) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 30000);\n  return (\n    await fetch(link, {\n      withCredentials: true,\n      method: \"POST\",\n      signal: controller.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n  ).json();\n};\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 30000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nexport { toSatoshi, satoshiToLocaleString, post, get };\n","// Assets.\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CustomDivider() {\n  return (\n    <div className=\"divider-custom\">\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n      <div className=\"divider-custom-icon mt-2 mb-2\">\n        <FontAwesomeIcon icon={faAngleDown} />\n      </div>\n      <div className=\"divider-custom-line mt-2 mb-2\"></div>\n    </div>\n  );\n}\n\nexport default CustomDivider;\n","const META_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-meta\";\nconst PREVIEW_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-preview\";\nconst STATE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-state\";\nconst PROFILE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-profile\";\nconst PROFILE_LISTS_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-profilelists\";\nconst EXPLORE_BUCKET = \"https://ewr1.vultrobjects.com/dingo-nftc-0-explore\";\n\nconst get = (link) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 5000);\n  return fetch(link, {\n    withCredentials: true,\n    method: \"GET\",\n    signal: controller.signal,\n  });\n};\n\nconst getMeta = async (address) => {\n  const response = await get(`${META_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getPreviewLink = async (address) => {\n  return `${PREVIEW_BUCKET}/${address}.png`;\n};\n\nconst getState = async (address) => {\n  const response = await get(`${STATE_BUCKET}/${address}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getProfile = async (owner) => {\n  const response = await get(`${PROFILE_BUCKET}/${owner}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getProfileLists = async (owner) => {\n  const response = await get(`${PROFILE_LISTS_BUCKET}/${owner}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nconst getExplore = async (key) => {\n  const response = await get(`${EXPLORE_BUCKET}/${key}`);\n  if (response.status === 200) {\n    return response.json();\n  } else {\n    return null;\n  }\n};\n\nexport { getMeta, getPreviewLink, getState, getProfile, getProfileLists, getExplore };\n","import React from \"react\";\nimport { getMeta, getPreviewLink, getState } from \"./storage\";\nimport { Card } from \"react-bootstrap\";\nimport { satoshiToLocaleString } from \"./utils\";\n\nfunction NFTCard(props) {\n  const domRef = React.useRef();\n  const [isVisible, setVisible] = React.useState(false);\n  const [previewLink, setPreviewLink] = React.useState(null);\n  const [name, setName] = React.useState(null);\n  const [price, setPrice] = React.useState(null);\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setVisible(true);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n    return () => {\n      try {\n        observer.unobserve(domRef.current);\n      } catch {}\n    };\n  }, []);\n\n  React.useEffect(() => {\n    (async () => {\n      if (isVisible) {\n        const meta = await getMeta(props.address);\n        const previewLink = await getPreviewLink(props.address);\n        const state = await getState(props.address);\n\n        setPreviewLink(previewLink);\n        setName(meta === null ? null : meta.name);\n        setPrice(state === null ? null : state.price);\n      }\n    })();\n  }, [props.address, isVisible]);\n\n  return (\n    <Card\n      className=\"nft-card floating-borders floating-borders-press\"\n      ref={domRef}\n    >\n      <div className=\"header-box\">\n        <div className=\"spinner\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n        <Card.Img variant=\"top\" src={previewLink} loading=\"lazy\"></Card.Img>\n      </div>\n      <hr />\n      <Card.Body>\n        <Card.Title>\n          {name === null ? \"-\" : name === \"\" ? \"Unnamed NFT\" : name}\n        </Card.Title>\n        <Card.Subtitle>{props.address}</Card.Subtitle>\n        <Card.Text>\n          <span className=\"card-price\">\n            {price === null ? \"-\" : satoshiToLocaleString(price)}\n          </span>\n          <br />\n          <span className=\"card-price-subtitle\">DINGO</span>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default NFTCard;\n","/* global BigInt */\n\nimport NFTCard from \"./NFTCard.jsx\";\nimport { Container, Row, Button, Form } from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport {\n  getBusy,\n  getContent,\n  getBuyTransaction,\n  sendBuyTransaction,\n} from \"./api\";\nimport { getMeta, getState, getProfile } from \"./storage\";\nimport { toSatoshi, satoshiToLocaleString } from \"./utils\";\nimport GetWalletModal from \"./GetWalletModal\";\nimport {Helmet} from \"react-helmet\";\n\nfunction NFTController() {\n  const [address, setAddress] = React.useState(null);\n  const [meta, setMeta] = React.useState(null);\n  const [state, setState] = React.useState(null);\n  const [ownerProfile, setOwnerProfile] = React.useState(null);\n  const [creatorProfile, setCreatorProfile] = React.useState(null);\n\n  const [busy, setBusy] = React.useState(undefined);\n  const [resellPrice, setResellPrice] = React.useState(\"\");\n  const [resellPriceError, setResellPriceError] = React.useState(\"\");\n  const [buyResult, setBuyResult] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  React.useEffect(() => {\n    setAddress(new URLSearchParams(window.location.search).get(\"address\"));\n  }, []);\n\n  React.useEffect(() => {\n    if (resellPrice === \"\") {\n      setResellPriceError(\"Resell price required\");\n    } else if (state !== null) {\n      if (BigInt(toSatoshi(resellPrice)) > BigInt(10) * BigInt(state.price)) {\n        setResellPriceError(\n          `Resell price must be at most 10x the current price`\n        );\n      } else {\n        setResellPriceError(\"\");\n      }\n    } else {\n      setResellPriceError(\"\");\n    }\n  }, [resellPrice, state]);\n\n  React.useEffect(() => {\n    document.title = `NFT | ${address}`;\n    if (address !== null) {\n      (async () => {\n        const m = await getMeta(address);\n        setMeta(m);\n        const s = await getState(address);\n        setState(s);\n\n        if (s !== null) {\n          document.title = `NFT | ${m.name}`;\n          setOwnerProfile(await getProfile(s.owner));\n          setCreatorProfile(await getProfile(s.creator));\n        }\n\n        setBusy(await getBusy({ address: address }));\n      })();\n    }\n  }, [address]);\n\n  const doDownload = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const timestamp = Date.now();\n    const message = `${address}|${timestamp}`;\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n\n    const result = await getContent({\n      address: address,\n      timestamp: timestamp,\n      signature: signResult.result,\n    });\n    if (result === null || result.error !== undefined) {\n      return;\n    }\n\n    if (result.content !== undefined) {\n      window.open(result.content);\n    }\n  };\n\n  const doBuy = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const { vins, vouts } = await getBuyTransaction({\n      address: address,\n      price: toSatoshi(resellPrice),\n    });\n    const signed = (await window.dingo.requestSignTransaction(vins, vouts))\n      .result;\n\n    const result = await sendBuyTransaction({ transaction: signed });\n    setBuyResult(result);\n  };\n\n  return (\n    <div>\n      <Container className=\"justify-content-md-center\">\n        <Row>\n          <div className=\"cards-container\">\n            <NFTCard address={address} />\n          </div>\n          {meta !== null &&\n            meta.description !== null &&\n            meta.description !== \"\" && (\n              <p className=\"text-center mt-4\">\n                <i>{meta.description}</i>\n              </p>\n            )}\n        </Row>\n        <CustomDivider />\n        <Row className=\"text-center\">\n          <h3>Owner</h3>\n          <p>\n            <a\n              className=\"simple-link\"\n              href={state === null ? \"\" : `/profile?address=${state.owner}`}\n            >\n              {ownerProfile === null ||\n              ownerProfile.name === null ||\n              ownerProfile.name === \"\"\n                ? state === null\n                  ? \"-\"\n                  : state.owner\n                : ownerProfile.name}\n            </a>\n          </p>\n          <h3 className=\"mt-2\">Creator</h3>\n          <a\n            className=\"simple-link\"\n            href={state === null ? \"\" : `/profile?address=${state.creator}`}\n          >\n            {creatorProfile === null ||\n            creatorProfile.name === null ||\n            creatorProfile.name === \"\"\n              ? state === null\n                ? \"-\"\n                : state.creator\n              : creatorProfile.name}\n          </a>\n          {state !== undefined && state !== null && (\n            <div>\n              <h3 className=\"mt-4\">Hidden Content</h3>\n\n              <div\n                className=\"clickable mb-2\"\n                onClick={doDownload}\n                style={{ display: \"inline\" }}\n              >\n                (Verify and view)\n              </div>\n            </div>\n          )}\n          {state !== undefined && state !== null && (\n            <div>\n              <h3 className=\"mt-4\">Trade Volume</h3>\n              <p>\n                {state === null\n                  ? \"-\"\n                  : satoshiToLocaleString(state.stats.volume)}\n              </p>\n            </div>\n          )}\n        </Row>\n        <CustomDivider />\n        {busy !== undefined && busy !== null && (\n          <Row className=\"justify-content-md-center mt-2 text-center\">\n            <h2>Buy NFT</h2>\n            <div style={{ textAlign: \"center\" }} className=\"mt-4\">\n              {\" \"}\n              <h5>NFT busy</h5>\n              <p>\n                <a\n                  className=\"simple-link\"\n                  href={\n                    \"https://openchains.info/coin/dingocoin/tx/\" + busy.txid\n                  }\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                >\n                  A transaction\n                </a>{\" \"}\n                is currenly being confirmed for this NFT. <br />\n                Please try again in a few minutes.\n              </p>\n            </div>\n          </Row>\n        )}\n        {busy !== undefined && busy === null && (\n          <Row className=\"justify-content-md-center mt-2 text-center\">\n            <h2>Buy NFT</h2>\n            {buyResult == null && (\n              <Container className=\"justify-content-md-center\">\n                <Row className=\"mx-auto\" style={{ maxWidth: \"35rem\" }}>\n                  <Form.Group className=\"mb-3 mt-3\">\n                    <Form.Label>\n                      <b>Resell at (*required)</b>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      value={resellPrice}\n                      onChange={(e) => {\n                        if (e.target.value.match(/^[0-9]*$/)) {\n                          setResellPrice(e.target.value);\n                        }\n                      }}\n                      style={{ textAlign: \"center\" }}\n                      isInvalid={resellPriceError !== \"\"}\n                    />\n                    {resellPriceError && (\n                      <div>\n                        <Form.Text className=\"input-error\">\n                          {resellPriceError}\n                        </Form.Text>\n                      </div>\n                    )}\n                    <Form.Text className=\"text-muted\">\n                      New price you want to sell this NFT for (min. 1\n                      Dingocoin).\n                    </Form.Text>\n                  </Form.Group>\n                </Row>\n                <Row>\n                  <Button\n                    className=\"popup-button mb-4 mx-auto px-4\"\n                    style={{ width: \"auto\" }}\n                    onClick={doBuy}\n                    disabled={resellPriceError !== \"\"}\n                  >\n                    Buy and resell NFT\n                  </Button>\n                </Row>\n              </Container>\n            )}\n            {buyResult !== null && buyResult.error === undefined && (\n              <Container>\n                <div style={{ textAlign: \"center\" }} className=\"mt-4\">\n                  {\" \"}\n                  <h4>Transaction submitted!</h4>\n                  <p>\n                    Transaction ID:{\" \"}\n                    <a\n                      className=\"simple-link\"\n                      href={\n                        \"https://openchains.info/coin/dingocoin/tx/\" +\n                        buyResult.txid\n                      }\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                    >\n                      {buyResult.txid}\n                    </a>\n                    <br />\n                    It may take a few minutes for your transaction to be\n                    confirmed.\n                  </p>\n                </div>\n              </Container>\n            )}\n            {buyResult !== null && buyResult.error !== undefined && (\n              <Container>\n                <div style={{ textAlign: \"center\" }} className=\"mt-4\">\n                  {\" \"}\n                  <h4>Transaction failed!</h4>\n                  <p>\n                    - Make sure that your wallet has no pending transaction.\n                    <br />- You can't buy this NFT as its owner/creator.\n                  </p>\n                </div>\n              </Container>\n            )}\n          </Row>\n        )}\n      </Container>\n\n      <GetWalletModal\n        show={getWalletShow}\n        onHide={() => setGetWalletShow(false)}\n      />\n    </div>\n  );\n}\n\nexport default NFTController;\n","import {\n  Modal,\n  Container,\n  Row,\n  Tab,\n  Tabs,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport Sha256 from \"crypto-js/sha256\";\nimport Hex from \"crypto-js/enc-hex\";\nimport { getProfile, getProfileLists } from \"./storage\";\nimport NFTCard from \"./NFTCard\";\nimport { updateProfile } from \"./api\";\nimport GetWalletModal from \"./GetWalletModal\";\n\nfunction ProfileController() {\n  const [address, setAddress] = React.useState(null);\n  const [editShow, setEditShow] = React.useState(null);\n  const [name, setName] = React.useState(\"\");\n  const nameRef = React.createRef();\n  const [profile, setProfile] = React.useState(null);\n  const [profileLists, setProfileLists] = React.useState(null);\n\n  const [getWalletShow, setGetWalletShow] = React.useState(false);\n\n  React.useEffect(() => {\n    setAddress(new URLSearchParams(window.location.search).get(\"address\"));\n  }, []);\n\n  React.useEffect(() => {\n    if (address !== null) {\n      document.title = `Profile | ${address}`;\n      (async () => {\n        const p = await getProfile(address);\n        const pList = await getProfileLists(address);\n        console.log(p);\n        console.log(pList);\n        setProfile(p);\n        setProfileLists(pList);\n        if (p !== null) {\n          if (p.name === null) {\n            setName(\"\");\n          } else {\n            setName(p.name);\n            document.title = `Profile | ${p.name}`;\n          }\n        }\n      })();\n    }\n  }, [address]);\n\n  const doSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (window.dingo === undefined) {\n      setGetWalletShow(true);\n      return;\n    }\n\n    const payload = {\n      timestamp: Date.now(),\n      owner: address,\n      name: name === null || name === \"\" ? null : name,\n    };\n    const message = JSON.stringify(payload);\n    console.log(message);\n\n    const signResult = await window.dingo.requestSign(\n      Hex.stringify(Sha256(message))\n    );\n    if (signResult.error !== undefined) {\n      return;\n    }\n    payload.signature = signResult.result;\n\n    const updateResult = await updateProfile(payload);\n    if (\"error\" in updateResult) {\n      return;\n    }\n\n    window.location.reload(false);\n  };\n\n  return (\n    <div>\n      <Container className=\"App-header\">\n        <Row>\n          <h1 className=\"mt-4\">\n            {profile === null\n              ? \"-\"\n              : profile.name === \"\" || profile.name === null\n              ? \"Unnamed Profile\"\n              : profile.name}\n          </h1>\n          <h6>{address}</h6>\n          <p>\n            <span>\n              <div\n                className=\"clickable\"\n                style={{ display: \"inline\" }}\n                onClick={() => setEditShow(true)}\n              >\n                (Edit)\n              </div>\n            </span>\n          </p>\n          <CustomDivider />\n        </Row>\n      </Container>\n      <Tabs\n        defaultActiveKey={\n          profileLists === null\n            ? \"owned\"\n            : profileLists.createdNfts.length === 0\n            ? \"owned\"\n            : \"created\"\n        }\n        className=\"justify-content-center\"\n        variant=\"pills\"\n      >\n        <Tab eventKey=\"created\" title=\"NFT Creations\">\n          {profileLists !== null && (\n            <ul className=\"cards-container\">\n              {profileLists.createdNfts.map((x) => (\n                <a href={`/nft?address=${x}`}>\n                  <NFTCard key={x} address={x} />\n                </a>\n              ))}\n            </ul>\n          )}\n        </Tab>\n        <Tab eventKey=\"owned\" title=\"Owned NFTs\">\n          {profileLists !== null && (\n            <ul className=\"cards-container\">\n              {profileLists.ownedNfts.map((x) => (\n                <a href={`/nft?address=${x}`}>\n                  <NFTCard key={x} address={x} />\n                </a>\n              ))}\n            </ul>\n          )}\n        </Tab>\n      </Tabs>\n\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={editShow}\n        onHide={() => setEditShow(false)}\n        onEntered={() => nameRef.current.focus()}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Edit profile\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={doSubmit}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Profile name (leave blank if no change)</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={name}\n                placeholder=\"Max 40 characters\"\n                onChange={(e) => setName(e.target.value)}\n                isValid={name !== \"\" && name.length <= 40}\n                isInvalid={name !== \"\" && name.length > 40}\n                ref={nameRef}\n              />\n              {name.length > 40 && (\n                <div>\n                  <Form.Text className=\"input-error\">Name too long</Form.Text>\n                </div>\n              )}\n            </Form.Group>\n\n            <div style={{ textAlign: \"center\" }}>\n              <Button\n                className=\"popup-button mb-3 mt-3 px-4\"\n                variant=\"primary\"\n                type=\"submit\"\n              >\n                Verify and update profile\n              </Button>\n            </div>\n          </Form>\n        </Modal.Body>\n      </Modal>\n\n      <GetWalletModal show={getWalletShow} onHide={() => setGetWalletShow(false)}/>\n    </div>\n  );\n}\n\nexport default ProfileController;\n","import { Container, Row, Tab, Tabs } from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport NFTCard from \"./NFTCard\";\nimport { getExplore } from \"./storage\";\n\nfunction ExploreController() {\n  const [newList, setNewList] = React.useState(null);\n  const [volumeList, setVolumeList] = React.useState(null);\n  //const [nonceList, setNonceList] = React.useState(null);\n\n  React.useEffect(() => {\n    document.title = `Explore NFTs`;\n    (async () => {\n      const byNew = await getExplore(\"new\");\n      const byVolume = await getExplore(\"volume\");\n      //const byNonce = await getExplore(\"nonce\");\n\n      setNewList(byNew);\n      setVolumeList(byVolume);\n      //setNonceList(byNonce);\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Container className=\"App-header\">\n        <Row>\n          <h1 className=\"mt-4\">Explore NFTs</h1>\n          <CustomDivider />\n        </Row>\n      </Container>\n      <Tabs\n        defaultActiveKey=\"volume\"\n        className=\"justify-content-center\"\n        variant=\"pills\"\n      >\n        <Tab eventKey=\"volume\" title=\"Hot NFTS\">\n          {volumeList !== null && (\n            <ul className=\"cards-container\">\n              {volumeList.map((x) => (\n                <a href={`/nft?address=${x}`}>\n                  <NFTCard key={x} address={x} />\n                </a>\n              ))}\n            </ul>\n          )}\n        </Tab>\n        <Tab eventKey=\"new\" title=\"New listings\">\n          {newList !== null && (\n            <ul className=\"cards-container\">\n              {newList.map((x) => (\n                <a href={`/nft?address=${x}`}>\n                  <NFTCard key={x} address={x} />\n                </a>\n              ))}\n            </ul>\n          )}\n        </Tab>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default ExploreController;\n","export default __webpack_public_path__ + \"static/media/dingocoin.15331900.png\";","import { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLock,\n  faPiggyBank,\n  faHandHoldingUsd,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CustomDivider from \"./CustomDivider\";\n\nfunction Main() {\n  return (\n    <div>\n      <header className=\"section-a\" id=\"home\">\n        <div className=\"particles-container\">\n          <Container className=\"masthead text-center\">\n            <Row>\n              <Col>\n                <div className=\"isometric-holder\">\n                  <div className=\"isometric\"></div>\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <p className=\"masthead-title mt-4 mb-2\">\n                Dingocoin NFT Platform\n              </p>\n              <p className=\"mb-4\">The next generation of NFTs</p>\n            </Row>\n            <Row fluid className=\"pt-3 pb-2\">\n              <Col>\n                <div className=\"project-card mx-auto\">\n                  <div className=\"logo-holder\">\n                    <FontAwesomeIcon className=\"faicon\" icon={faPiggyBank} />\n                  </div>\n                  <h5>Ultra-low Costs</h5>\n                  <p>Create and trade NFTs with {\"<$0.001\"} gas fees</p>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"project-card mx-auto\">\n                  <div className=\"logo-holder\">\n                    <FontAwesomeIcon\n                      className=\"faicon\"\n                      icon={faHandHoldingUsd}\n                    />\n                  </div>\n                  <h5>On-chain Trading</h5>\n                  <p>You receive earnings and royalties immediately</p>\n                </div>\n              </Col>\n              <Col>\n                <div className=\"project-card mx-auto\">\n                  <div className=\"logo-holder\">\n                    <FontAwesomeIcon className=\"faicon\" icon={faLock} />\n                  </div>\n                  <h5>Cryptographically Unique</h5>\n                  <p>The same content can never be reused in another NFT</p>\n                </div>\n              </Col>\n            </Row>\n            <CustomDivider />\n            <Row>\n              <h1 className=\"mt-4\">Get started now!</h1>\n            </Row>\n            <Row className=\"quick-actions flex-wrap justify-content-md-center mt-4\">\n              <a href=\"/explore\">\n                <Button className=\"popup-button px-4 py-2 mb-4\" variant=\"primary\">\n                  Explore NFTs\n                </Button>\n              </a>\n              <a href=\"/create\">\n                <Button className=\"popup-button px-4 py-2 mb-4\" variant=\"primary\">\n                  Create an NFT\n                </Button>\n              </a>\n              <a>\n                <Button className=\"popup-button px-4 py-2 mb-4\" variant=\"primary\" disabled>\n                  How does this work?\n                </Button>\n              </a>\n            </Row>\n          </Container>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Main;\n","import \"./App.scss\";\nimport CreateController from \"./CreateController\";\nimport NFTController from \"./NFTController\";\nimport ProfileController from \"./ProfileController\";\nimport ExploreController from \"./ExploreController\";\nimport {\n  Navbar,\n  Nav,\n  Container,\n  Form,\n  FormControl,\n  Button,\n  Modal,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport DingocoinLogo from \"./assets/img/dingocoin.png\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { getMeta, getProfile } from \"./storage\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const [location, setLocation] = React.useState(null);\n  React.useEffect(() => {\n    setLocation(window.location.pathname);\n  }, []);\n  React.useEffect(() => {}, [location]);\n\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [searchErrorShow, setSearchErrorShow] = React.useState(null);\n\n  const doSearch = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    setSearchQuery(searchQuery.trim());\n\n    if (searchQuery.trim() !== \"\") {\n      const nftMeta = await getMeta(searchQuery.trim());\n      if (nftMeta !== null) {\n        window.location.assign(`/nft?address=${searchQuery.trim()}`);\n      } else {\n        const profile = await getProfile(searchQuery.trim());\n        if (profile !== null) {\n          window.location.assign(`/profile?address=${searchQuery.trim()}`);\n        } else {\n          setSearchErrorShow(true);\n        }\n      }\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar className=\"navbar\" bg=\"dark\" expand=\"lg\" sticky=\"top\">\n          <Container>\n            <Navbar.Brand href=\"/\" className=\"navbar-brand align-items-center\">\n              <img alt=\"\" src={DingocoinLogo} />\n              <span>DINGOCOIN</span>\n              <span className=\"navbar-brand-subtitle\"> NFT Platform</span>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse>\n              <Nav className=\"ms-auto\" style={{ paddingRight: \"1.5rem\", textAlign: \"center\" }}>\n                <Nav.Link href=\"/\">Home</Nav.Link>\n                <Nav.Link href=\"/explore\">Explore NFTs</Nav.Link>\n                <Nav.Link href=\"/create\">Create</Nav.Link>\n              </Nav>\n              <Form className=\"d-flex\" onSubmit={doSearch}>\n                <FormControl\n                  type=\"search\"\n                  placeholder=\"Jump to NFT/profile address...\"\n                  aria-label=\"Search\"\n                  style={{\n                    borderTopRightRadius: \"0\",\n                    borderBottomRightRadius: \"0\",\n                    minWidth: \"20rem\",\n                  }}\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n                <Button\n                  variant=\"secondary mx-0\"\n                  style={{\n                    borderTopLeftRadius: \"0\",\n                    borderBottomLeftRadius: \"0\",\n                  }}\n                  type=\"submit\"\n                >\n                  <FontAwesomeIcon icon={faAngleRight}></FontAwesomeIcon>\n                </Button>\n              </Form>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n\n        <section className=\"section-content\">\n          <Routes>\n            <Route path=\"/create\" element={<CreateController />} />\n            <Route path=\"/profile\" element={<ProfileController />} />\n            <Route path=\"/nft\" element={<NFTController />} />\n            <Route path=\"/explore\" element={<ExploreController />} />\n            <Route path=\"/\" element={<Main/>}/>\n            <Route path=\"*\" element={<Main/>}/>\n          </Routes>\n        </section>\n        <section>\n          <div className=\"justify-content-center section-footer align-items-center\">\n            <h6>Copyright © The Dingocoin Project 2021-2022</h6>\n          </div>\n        </section>\n      </div>\n\n      <Modal\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={searchErrorShow}\n        onHide={() => setSearchErrorShow(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            NFT/profile not found\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Container className=\"text-center my-2\">\n            <p>No results found.</p>\n            <Button className=\"mx-2\" onClick={() => setSearchErrorShow(false)}>\n              Close\n            </Button>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport HttpsRedirect from \"react-https-redirect\";\n\nReactDOM.render(\n  <HttpsRedirect>\n    <App />\n  </HttpsRedirect>,\n  document.getElementById(\"root\")\n);\n","import { post } from \"./utils\";\n\nconst API_URL = \"https://nftp0.dingocoin.io\";\n//const API_URL = \"http://localhost:33332\";\n\nconst getBusy = async (data) => {\n  const result = await post(`${API_URL}/nft/getBusy`, {\n    address: data.address,\n  });\n  if (result === null) {\n    return null;\n  } else {\n    return result.busy;\n  }\n};\n\nconst getContent = (data) => {\n  return post(`${API_URL}/nft/getContent`, {\n    address: data.address,\n    timestamp: data.timestamp,\n    signature: data.signature,\n  });\n};\n\nconst getBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/getBuyTransaction`, {\n    address: data.address,\n    price: data.price,\n  });\n};\n\nconst sendBuyTransaction = (data) => {\n  return post(`${API_URL}/nft/sendBuyTransaction`, {\n    transaction: data.transaction,\n  });\n};\n\nconst getListTransaction = (data) => {\n  return post(`${API_URL}/nft/getListTransaction`, {\n    contentHash: data.contentHash,\n    price: data.price,\n    royalty: data.royalty,\n  });\n};\n\nconst sendListTransaction = (data) => {\n  return post(`${API_URL}/nft/sendListTransaction`, {\n    content: data.content,\n    preview: data.preview,\n    name: data.name,\n    description: data.description,\n    tags: data.tags,\n    transaction: data.transaction,\n  });\n};\n\nconst updateProfile = (data) => {\n  return post(`${API_URL}/profile/update`, {\n    timestamp: data.timestamp,\n    owner: data.owner,\n    name: data.name,\n    signature: data.signature,\n  });\n};\n\nexport {\n  getBusy,\n  getContent,\n  getBuyTransaction,\n  sendBuyTransaction,\n  getListTransaction,\n  sendListTransaction,\n  updateProfile,\n};\n","import { Modal, Container, Button } from \"react-bootstrap\";\nimport React from \"react\";\n\nfunction GetWalletModal(props) {\n  return (\n    <Modal\n      size=\"md\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={props.show}\n      onHide={props.onHide}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Browser Wallet required\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container className=\"text-center my-2\">\n          <p>You need a Dingocoin browser wallet for this.<br/>Set it up in less than a minute.</p>\n          <a href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Chrome wallet</Button>\n          </a>\n          <a href=\"https://dingocoin.org/wallets\" target=\"_blank\" rel=\"noreferrer\">\n            <Button className=\"mx-2\">Get Firefox wallet</Button>\n          </a>\n        </Container>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default GetWalletModal;\n"],"sourceRoot":""}