{"version":3,"sources":["NFTController.jsx","assets/img/dingocoin.png","CreateController.jsx","App.jsx","index.jsx","CustomDivider.jsx"],"names":["post","link","data","a","controller","AbortController","setTimeout","abort","fetch","withCredentials","method","signal","headers","Accept","body","JSON","stringify","json","NFTController","props","React","useState","undefined","assetMeta","setAssetMeta","assetContent","setAssetContent","assetContentType","setAssetContentType","useEffect","address","meta","asset","contentRaw","content","Buffer","from","detectFileType","fromBuffer","err","res","mime","ext","className","style","textAlign","maxHeight","fileType","filePath","name","description","width","color","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","split","onerror","error","CreateController","setAsset","assetError","setAssetError","setName","setDescription","tags","setTags","tradeDeadline","setTradeDeadline","concealDeadline","setConcealDeadline","privatizeDeadline","setPrivatizeDeadline","showAdvanced","setShowAdvanced","success","setSuccess","setAddress","doSubmit","e","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","size","payload","details","parseInt","response","Container","Row","CustomDivider","Col","Form","onSubmit","Group","Label","Control","type","onChange","target","files","isInvalid","Text","value","placeholder","match","onClick","href","Button","variant","rel","App","location","setLocation","window","pathname","Navbar","bg","expand","sticky","Brand","alt","src","DingocoinLogo","Collapse","Nav","Link","Toggle","URLSearchParams","search","get","ReactDOM","render","StrictMode","document","getElementById","icon","faAngleDown"],"mappings":"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","file":"static/js/main.579ff8c6.chunk.js","sourcesContent":["import {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Button,\n  Col,\n  Form,\n} from \"react-bootstrap\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport FileViewer from \"react-file-viewer\";\nimport detectFileType from \"detect-file-type\";\n\nconst post = async (link, data) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 5000);\n  return (\n    await fetch(link, {\n      withCredentials: true,\n      method: \"POST\",\n      signal: controller.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n  ).json();\n};\n\nfunction NFTController(props) {\n  const [assetMeta, setAssetMeta] = React.useState(undefined);\n  const [assetContent, setAssetContent] = React.useState(undefined);\n  const [assetContentType, setAssetContentType] = React.useState(undefined);\n\n  React.useEffect(async () => {\n    const meta = (\n      await post(\"https://nftp0.dingocoin.org/retrieve/meta\", {\n        address: props.address,\n      })\n    ).asset;\n    setAssetMeta(meta);\n\n    const contentRaw = (\n      await post(\"https://nftp0.dingocoin.org/retrieve/content\", {\n        address: props.address,\n      })\n    ).content;\n    if (contentRaw === null) {\n      setAssetContent(null);\n    } else {\n      const content = Buffer.from(contentRaw, \"base64\");\n      detectFileType.fromBuffer(content, (err, res) => {\n        setAssetContent(\"data:\" + res.mime + \";base64,\" + contentRaw);\n        setAssetContentType(res.ext);\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"section-a\" style={{ textAlign: \"center\" }}>\n      {assetMeta !== undefined && assetMeta == null && (\n        <Container>\n          <Row>\n            <h1 className=\"mt-4\">This NFT does not exist!</h1>\n          </Row>\n        </Container>\n      )}\n      {assetMeta !== undefined && assetMeta !== null && (\n        <Container>\n          <Row>\n            {assetContent !== undefined && assetContent !== null && (\n              <div style={{ maxHeight: \"50vh\" }} className=\"mt-4 mb-4\">\n                <FileViewer\n                  fileType={assetContentType}\n                  filePath={assetContent}\n                />\n              </div>\n            )}\n          </Row>\n          <CustomDivider />\n          <Row>\n            <div className=\"mt-2\">\n              {assetMeta.name !== \"\" && <h1>{assetMeta.name}</h1>}\n              {assetMeta.name === \"\" && <h3>Unnamed NFT</h3>}\n              <p>\n                NFT Address: <b>{assetMeta.address}</b>\n                {assetMeta.description !== \"\" && (\n                  <i>\n                    <br />\n                    {assetMeta.description}\n                  </i>\n                )}\n              </p>\n            </div>\n          </Row>\n          <Row className=\"justify-content-md-center\">\n            <Button\n              className=\"popup-button mt-4 mb-4\"\n              style={{ width: \"auto\" }}\n            >\n              Claim creatorship to start trading now!\n            </Button>\n            <p>\n              <b style={{ color: \"red\" }}>\n                Do not share this page until you claim ownership, or it can be\n                stolen from you.\n              </b>\n            </p>\n            <p style={{ textAlign: \"left\" }}>\n              Contragulations! If you are here, you have probably just created\n              this NFT. It is near impossible that anyone else knows about this\n              page.{\" \"}\n              <u>\n                <b>\n                  Before it is publicly listed or traded, you need to claim it\n                  as its creator\n                </b>\n              </u>\n              . You will also receive creator royalties for your NFT.\n            </p>\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n}\n\nexport default NFTController;\n","export default __webpack_public_path__ + \"static/media/dingocoin.15331900.png\";","import {\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Button,\n  Col,\n  Form,\n} from \"react-bootstrap\";\nimport DingocoinLogo from \"./assets/img/dingocoin.png\";\nimport React from \"react\";\nimport CustomDivider from \"./CustomDivider\";\nimport bs58 from \"bs58\";\nimport crypto from \"crypto\";\n\nconst MAX_ASSET_SIZE = 1 * 1e6; // 2 MB.\n\nconst isBs58 = (x) => {\n  return x.match(/^[1-9A-HJ-NP-Za-km-z]+$/);\n};\n\nconst sha256 = (data) => {\n  return crypto.createHash(\"sha256\").update(data).digest();\n};\n\nconst isAddress = (address) => {\n  if (address === null || address === undefined || address === \"\") {\n    return false;\n  }\n  if (!isBs58(address)) {\n    return false;\n  }\n  const raw = bs58.decode(address);\n\n  if (raw.length !== 25) {\n    return false;\n  }\n  if (raw[0] !== 0x16 && raw[0] !== 0x1e) {\n    return false;\n  }\n  const checksum = sha256(sha256(raw.slice(0, 21)));\n  return raw.slice(21, 25).equals(checksum.slice(0, 4));\n};\n\nconst toBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result.split(\",\")[1]);\n    reader.onerror = (error) => reject(error);\n  });\n\nconst post = async (link, data) => {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), 5000);\n  return (\n    await fetch(link, {\n      withCredentials: true,\n      method: \"POST\",\n      signal: controller.signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n  ).json();\n};\n\nfunction CreateController() {\n  const [asset, setAsset] = React.useState(null);\n  const [assetError, setAssetError] = React.useState(\"\");\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [tags, setTags] = React.useState(\"\");\n  const [tradeDeadline, setTradeDeadline] = React.useState(\"\");\n  const [concealDeadline, setConcealDeadline] = React.useState(\"\");\n  const [privatizeDeadline, setPrivatizeDeadline] = React.useState(\"\");\n  const [showAdvanced, setShowAdvanced] = React.useState(false);\n\n  const [success, setSuccess] = React.useState(null);\n  const [address, setAddress] = React.useState(null);\n\n  const doSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n\n    if (asset === null) {\n      setAssetError(\"Asset required\");\n      return;\n    } else if (asset.size > MAX_ASSET_SIZE) {\n      setAssetError(\"Size limit exceeded\");\n      return;\n    } else {\n      setAssetError(\"\");\n    }\n\n    const payload = {};\n    payload.asset = await toBase64(asset);\n    payload.details = {\n      name: name,\n      description: description,\n      tags: tags,\n      tradeDeadline: tradeDeadline === \"\" ? -1 : parseInt(tradeDeadline),\n      concealDeadline: concealDeadline === \"\" ? -1 : parseInt(concealDeadline),\n      privatizeDeadline:\n        privatizeDeadline === \"\" ? -1 : parseInt(privatizeDeadline),\n    };\n\n    const response = await post(\"https://nftp0.dingocoin.org/create\", payload);\n    if (\"error\" in response) {\n      return;\n    }\n\n    setSuccess(true);\n    setAddress(response.address);\n  };\n\n  return (\n    <div>\n      <header className=\"App-header\">\n        <Container>\n          <Row>\n            <h1 className=\"mt-4\">Create NFT</h1>\n            <CustomDivider />\n          </Row>\n        </Container>\n      </header>\n      <section className=\"section-a\">\n        <Container>\n          <Row>\n            <Col>\n              {(success === null || success === false) && (\n                <Form onSubmit={doSubmit}>\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>\n                      <b>Asset (*required)</b>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"file\"\n                      onChange={(e) => setAsset(e.target.files[0])}\n                      isInvalid={assetError !== \"\"}\n                    />\n                    {assetError && (\n                      <div>\n                        <Form.Text className=\"input-error\">\n                          {assetError}\n                        </Form.Text>\n                      </div>\n                    )}\n                    <Form.Text className=\"text-muted\">\n                      The NFT will be locked uniquely to this file. You can only\n                      use this file once. (Max 1 MB).\n                    </Form.Text>\n                  </Form.Group>\n\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Name (optional)</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </Form.Group>\n\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Description (optional)</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      value={description}\n                      onChange={(e) => setDescription(e.target.value)}\n                    />\n                  </Form.Group>\n\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Tags (optional)</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      value={tags}\n                      onChange={(e) => setTags(e.target.value)}\n                    />\n                  </Form.Group>\n\n                  {showAdvanced && (\n                    <div>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Trade until (optional)</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"No deadline\"\n                          value={tradeDeadline}\n                          onChange={(e) => {\n                            const v = e.target.value;\n                            if (v.match(/^[0-9]+$/)) {\n                              setTradeDeadline(e.target.value);\n                            } else {\n                              e.preventDefault();\n                              e.stopPropagation();\n                            }\n                          }}\n                        />\n                        <Form.Text className=\"text-muted\">\n                          The asset can be traded only up to this block height.\n                        </Form.Text>\n                      </Form.Group>\n\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>\n                          Conceal content until (optional)\n                        </Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"No concealment\"\n                          value={concealDeadline}\n                          onChange={(e) => {\n                            const v = e.target.value;\n                            if (v.match(/^[0-9]*$/)) {\n                              setConcealDeadline(e.target.value);\n                            } else {\n                              e.preventDefault();\n                              e.stopPropagation();\n                            }\n                          }}\n                        />\n                        <Form.Text className=\"text-muted\">\n                          The asset can be traded but not viewed before this\n                          block height.\n                        </Form.Text>\n                      </Form.Group>\n\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>\n                          Privatize content until (optional)\n                        </Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"No privatization\"\n                          value={privatizeDeadline}\n                          onChange={(e) => {\n                            const v = e.target.value;\n                            if (v.match(/^[0-9]*$/)) {\n                              setPrivatizeDeadline(e.target.value);\n                            } else {\n                              e.preventDefault();\n                              e.stopPropagation();\n                            }\n                          }}\n                        />\n                        <Form.Text className=\"text-muted\">\n                          Only the latest owner can view the asset's content\n                          before this block height, unless concealed.\n                        </Form.Text>\n                      </Form.Group>\n                    </div>\n                  )}\n                  {!showAdvanced && (\n                    <a\n                      style={{ color: \"#4CA4CD\" }}\n                      onClick={(e) => {\n                        setShowAdvanced(true);\n                        e.preventDefault();\n                        e.stopPropagation();\n                      }}\n                      href=\"#\"\n                    >\n                      Show advanced options ▼\n                    </a>\n                  )}\n                  {showAdvanced && (\n                    <a\n                      style={{ color: \"#4CA4CD\" }}\n                      onClick={(e) => {\n                        setShowAdvanced(false);\n                        e.preventDefault();\n                        e.stopPropagation();\n                      }}\n                      href=\"#\"\n                    >\n                      Hide advanced options ▲\n                    </a>\n                  )}\n\n                  <div style={{ textAlign: \"center\" }}>\n                    {success === null && (\n                      <Button\n                        className=\"popup-button mt-4\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                      >\n                        Create NFT\n                      </Button>\n                    )}\n                  </div>\n                </Form>\n              )}\n              {success === true && (\n                <div style={{ textAlign: \"center\" }}>\n                  {\" \"}\n                  <h3>NFT Created!</h3>\n                  <p>\n                    NFT Address: <b>{address}</b>\n                  </p>\n                  <a href={\"/nft?address=\" + address} rel=\"noreferrer\">\n                    <Button\n                      className=\"popup-button mb-4\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                    >\n                      Go to NFT's page ►\n                    </Button>\n                  </a>\n                </div>\n              )}\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </div>\n  );\n}\n\nexport default CreateController;\n","import \"./App.scss\";\nimport CreateController from \"./CreateController\";\nimport NFTController from \"./NFTController\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport DingocoinLogo from \"./assets/img/dingocoin.png\";\nimport React from \"react\";\nimport FullHeight from \"react-full-height\";\n\nfunction App() {\n  const [location, setLocation] = React.useState(null);\n  React.useEffect(() => {\n    setLocation(window.location.pathname);\n  }, []);\n  React.useEffect(() => {}, [location]);\n\n\n\n  return (\n    <div className=\"App\">\n      <Navbar className=\"navbar\" bg=\"dark\" expand=\"lg\" sticky=\"top\">\n        <Container>\n          <Navbar.Brand href=\"#home\" className=\"navbar-brand\">\n            <img alt=\"\" src={DingocoinLogo} />\n            <span>DINGOCOIN</span>\n            <span className=\"navbar-brand-subtitle\"> NFT</span>\n          </Navbar.Brand>\n          <Navbar.Collapse>\n            <Nav className=\"ms-auto\">\n              <Nav.Link>Explore</Nav.Link>\n              <Nav.Link href=\"/create\">Create</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        </Container>\n      </Navbar>\n\n      <FullHeight>\n        {(location === null && <div />) ||\n          (location === \"/create\" && <CreateController />) ||\n          (location === \"/nft\" && (\n            <NFTController address={(new URLSearchParams(window.location.search)).get('address')} />\n          ))}\n      </FullHeight>\n      <section className=\"section-footer\">\n        <h6>Copyright © The Dingocoin Project 2021-2022</h6>\n      </section>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport HttpsRedirect from 'react-https-redirect';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HttpsRedirect>\n      <App />\n    </HttpsRedirect>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// Assets.\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nfunction CustomDivider() {\n  return (\n    <div className=\"divider-custom\">\n      <div className=\"divider-custom-line\"></div>\n      <div className=\"divider-custom-icon\"><FontAwesomeIcon icon={faAngleDown}/></div>\n      <div className=\"divider-custom-line\"></div>\n    </div>\n  );\n}\n\nexport default CustomDivider;\n"],"sourceRoot":""}